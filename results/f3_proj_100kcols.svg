<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="1032622426861"><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (727,587,309 samples, 0.07%)</title><rect x="0.0003%" y="901" width="0.0705%" height="15" fill="rgb(227,0,7)" fg:x="3083189" fg:w="727587309"/><text x="0.2503%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (727,587,309 samples, 0.07%)</title><rect x="0.0003%" y="885" width="0.0705%" height="15" fill="rgb(217,0,24)" fg:x="3083189" fg:w="727587309"/><text x="0.2503%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (727,587,309 samples, 0.07%)</title><rect x="0.0003%" y="869" width="0.0705%" height="15" fill="rgb(221,193,54)" fg:x="3083189" fg:w="727587309"/><text x="0.2503%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,554,694,007 samples, 0.15%)</title><rect x="0.0720%" y="885" width="0.1506%" height="15" fill="rgb(248,212,6)" fg:x="743009685" fg:w="1554694007"/><text x="0.3220%" y="895.50"></text></g><g><title>__GI___libc_free (3,084,431,147 samples, 0.30%)</title><rect x="0.2225%" y="885" width="0.2987%" height="15" fill="rgb(208,68,35)" fg:x="2297703692" fg:w="3084431147"/><text x="0.4725%" y="895.50"></text></g><g><title>__GI___libc_malloc (872,113,407 samples, 0.08%)</title><rect x="0.5212%" y="885" width="0.0845%" height="15" fill="rgb(232,128,0)" fg:x="5382134839" fg:w="872113407"/><text x="0.7712%" y="895.50"></text></g><g><title>_int_malloc (1,485,844,599 samples, 0.14%)</title><rect x="0.6057%" y="885" width="0.1439%" height="15" fill="rgb(207,160,47)" fg:x="6254248246" fg:w="1485844599"/><text x="0.8557%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="885" width="0.0254%" height="15" fill="rgb(228,23,34)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;arrow_schema::field::Field,&amp;alloc::alloc::Global&gt;&gt; (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="869" width="0.0254%" height="15" fill="rgb(218,30,26)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="879.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="853" width="0.0254%" height="15" fill="rgb(220,122,19)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="863.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="837" width="0.0254%" height="15" fill="rgb(250,228,42)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="821" width="0.0254%" height="15" fill="rgb(240,193,28)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (262,137,875 samples, 0.03%)</title><rect x="0.7496%" y="805" width="0.0254%" height="15" fill="rgb(216,20,37)" fg:x="7740092845" fg:w="262137875"/><text x="0.9996%" y="815.50"></text></g><g><title>alloc_perturb (678,879,596 samples, 0.07%)</title><rect x="0.7749%" y="885" width="0.0657%" height="15" fill="rgb(206,188,39)" fg:x="8002230720" fg:w="678879596"/><text x="1.0249%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (789,443,560 samples, 0.08%)</title><rect x="0.8410%" y="869" width="0.0765%" height="15" fill="rgb(217,207,13)" fg:x="8684194663" fg:w="789443560"/><text x="1.0910%" y="879.50"></text></g><g><title>arrow_ipc::convert::fb_to_schema (887,949,577 samples, 0.09%)</title><rect x="0.8407%" y="885" width="0.0860%" height="15" fill="rgb(231,73,38)" fg:x="8681110316" fg:w="887949577"/><text x="1.0907%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (798,805,926 samples, 0.08%)</title><rect x="0.9270%" y="885" width="0.0774%" height="15" fill="rgb(225,20,46)" fg:x="9572684539" fg:w="798805926"/><text x="1.1770%" y="895.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (2,263,328,265 samples, 0.22%)</title><rect x="1.0050%" y="885" width="0.2192%" height="15" fill="rgb(210,31,41)" fg:x="10377656520" fg:w="2263328265"/><text x="1.2550%" y="895.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (3,420,705,606 samples, 0.33%)</title><rect x="1.5330%" y="805" width="0.3313%" height="15" fill="rgb(221,200,47)" fg:x="15830257652" fg:w="3420705606"/><text x="1.7830%" y="815.50"></text></g><g><title>flatbuffers::verifier::trace_field (709,406,447 samples, 0.07%)</title><rect x="1.7956%" y="789" width="0.0687%" height="15" fill="rgb(226,26,5)" fg:x="18541556811" fg:w="709406447"/><text x="2.0456%" y="799.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (1,434,309,675 samples, 0.14%)</title><rect x="2.0262%" y="789" width="0.1389%" height="15" fill="rgb(249,33,26)" fg:x="20922801287" fg:w="1434309675"/><text x="2.2762%" y="799.50"></text></g><g><title>flatbuffers::verifier::Verifier::verify_union_variant (734,085,449 samples, 0.07%)</title><rect x="2.0940%" y="773" width="0.0711%" height="15" fill="rgb(235,183,28)" fg:x="21623025513" fg:w="734085449"/><text x="2.3440%" y="783.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (11,215,220,324 samples, 1.09%)</title><rect x="1.2242%" y="885" width="1.0861%" height="15" fill="rgb(221,5,38)" fg:x="12640984785" fg:w="11215220324"/><text x="1.4742%" y="895.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (11,215,220,324 samples, 1.09%)</title><rect x="1.2242%" y="869" width="1.0861%" height="15" fill="rgb(247,18,42)" fg:x="12640984785" fg:w="11215220324"/><text x="1.4742%" y="879.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (11,215,220,324 samples, 1.09%)</title><rect x="1.2242%" y="853" width="1.0861%" height="15" fill="rgb(241,131,45)" fg:x="12640984785" fg:w="11215220324"/><text x="1.4742%" y="863.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (11,212,133,604 samples, 1.09%)</title><rect x="1.2245%" y="837" width="1.0858%" height="15" fill="rgb(249,31,29)" fg:x="12644071505" fg:w="11212133604"/><text x="1.4745%" y="847.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier (11,212,133,604 samples, 1.09%)</title><rect x="1.2245%" y="821" width="1.0858%" height="15" fill="rgb(225,111,53)" fg:x="12644071505" fg:w="11212133604"/><text x="1.4745%" y="831.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_union (4,605,241,851 samples, 0.45%)</title><rect x="1.8643%" y="805" width="0.4460%" height="15" fill="rgb(238,160,17)" fg:x="19250963258" fg:w="4605241851"/><text x="2.1143%" y="815.50"></text></g><g><title>flatbuffers::verifier::trace_field (1,499,094,147 samples, 0.15%)</title><rect x="2.1651%" y="789" width="0.1452%" height="15" fill="rgb(214,148,48)" fg:x="22357110962" fg:w="1499094147"/><text x="2.4151%" y="799.50"></text></g><g><title>flatbuffers::verifier::Verifier::visit_table (1,609,688,833 samples, 0.16%)</title><rect x="2.3103%" y="885" width="0.1559%" height="15" fill="rgb(232,36,49)" fg:x="23856205109" fg:w="1609688833"/><text x="2.5603%" y="895.50"></text></g><g><title>flatbuffers::verifier::append_trace (2,279,316,111 samples, 0.22%)</title><rect x="2.4661%" y="885" width="0.2207%" height="15" fill="rgb(209,103,24)" fg:x="25465893942" fg:w="2279316111"/><text x="2.7161%" y="895.50"></text></g><g><title>flatbuffers::vtable::VTable::get (6,931,100,076 samples, 0.67%)</title><rect x="2.6869%" y="885" width="0.6712%" height="15" fill="rgb(229,88,8)" fg:x="27745210053" fg:w="6931100076"/><text x="2.9369%" y="895.50"></text></g><g><title>unlink_chunk (290,006,972 samples, 0.03%)</title><rect x="3.3581%" y="885" width="0.0281%" height="15" fill="rgb(213,181,19)" fg:x="34676310129" fg:w="290006972"/><text x="3.6081%" y="895.50"></text></g><g><title>[[heap]] (34,247,982,191 samples, 3.32%)</title><rect x="0.0708%" y="901" width="3.3166%" height="15" fill="rgb(254,191,54)" fg:x="730670498" fg:w="34247982191"/><text x="0.3208%" y="911.50">[[h..</text></g><g><title>&lt;&amp;str as flatbuffers::verifier::Verifiable&gt;::run_verifier (314,624,814 samples, 0.03%)</title><rect x="3.4086%" y="869" width="0.0305%" height="15" fill="rgb(241,83,37)" fg:x="35197461674" fg:w="314624814"/><text x="3.6586%" y="879.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::FloatingPoint as flatbuffers::verifier::Verifiable&gt;::run_verifier (2,754,226,210 samples, 0.27%)</title><rect x="3.4390%" y="869" width="0.2667%" height="15" fill="rgb(233,36,39)" fg:x="35512086488" fg:w="2754226210"/><text x="3.6890%" y="879.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (2,020,106,394 samples, 0.20%)</title><rect x="3.5101%" y="853" width="0.1956%" height="15" fill="rgb(226,3,54)" fg:x="36246206304" fg:w="2020106394"/><text x="3.7601%" y="863.50"></text></g><g><title>flatbuffers::verifier::trace_field (476,415,490 samples, 0.05%)</title><rect x="3.6596%" y="837" width="0.0461%" height="15" fill="rgb(245,192,40)" fg:x="37789897208" fg:w="476415490"/><text x="3.9096%" y="847.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (373,011,157 samples, 0.04%)</title><rect x="3.9957%" y="837" width="0.0361%" height="15" fill="rgb(238,167,29)" fg:x="41260314815" fg:w="373011157"/><text x="4.2457%" y="847.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::LogicalTree as flatbuffers::verifier::Verifiable&gt;::run_verifier (3,816,844,330 samples, 0.37%)</title><rect x="3.7057%" y="869" width="0.3696%" height="15" fill="rgb(232,182,51)" fg:x="38266312698" fg:w="3816844330"/><text x="3.9557%" y="879.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (2,983,697,977 samples, 0.29%)</title><rect x="3.7864%" y="853" width="0.2889%" height="15" fill="rgb(231,60,39)" fg:x="39099459051" fg:w="2983697977"/><text x="4.0364%" y="863.50"></text></g><g><title>flatbuffers::verifier::trace_field (449,831,056 samples, 0.04%)</title><rect x="4.0318%" y="837" width="0.0436%" height="15" fill="rgb(208,69,12)" fg:x="41633325972" fg:w="449831056"/><text x="4.2818%" y="847.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (7,280,324,901 samples, 0.71%)</title><rect x="3.3883%" y="885" width="0.7050%" height="15" fill="rgb(235,93,37)" fg:x="34987906655" fg:w="7280324901"/><text x="3.6383%" y="895.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (185,074,528 samples, 0.02%)</title><rect x="4.0754%" y="869" width="0.0179%" height="15" fill="rgb(213,116,39)" fg:x="42083157028" fg:w="185074528"/><text x="4.3254%" y="879.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (185,074,528 samples, 0.02%)</title><rect x="4.0754%" y="853" width="0.0179%" height="15" fill="rgb(222,207,29)" fg:x="42083157028" fg:w="185074528"/><text x="4.3254%" y="863.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (185,074,528 samples, 0.02%)</title><rect x="4.0754%" y="837" width="0.0179%" height="15" fill="rgb(206,96,30)" fg:x="42083157028" fg:w="185074528"/><text x="4.3254%" y="847.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,568,655,083 samples, 0.15%)</title><rect x="4.0933%" y="885" width="0.1519%" height="15" fill="rgb(218,138,4)" fg:x="42268231556" fg:w="1568655083"/><text x="4.3433%" y="895.50"></text></g><g><title>_int_malloc (835,437,682 samples, 0.08%)</title><rect x="4.2455%" y="885" width="0.0809%" height="15" fill="rgb(250,191,14)" fg:x="43839971464" fg:w="835437682"/><text x="4.4955%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (724,954,001 samples, 0.07%)</title><rect x="4.3264%" y="885" width="0.0702%" height="15" fill="rgb(239,60,40)" fg:x="44675409146" fg:w="724954001"/><text x="4.5764%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;arrow_schema::field::Field&gt;]&gt; (724,954,001 samples, 0.07%)</title><rect x="4.3264%" y="869" width="0.0702%" height="15" fill="rgb(206,27,48)" fg:x="44675409146" fg:w="724954001"/><text x="4.5764%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_schema::field::Field&gt;&gt; (724,954,001 samples, 0.07%)</title><rect x="4.3264%" y="853" width="0.0702%" height="15" fill="rgb(225,35,8)" fg:x="44675409146" fg:w="724954001"/><text x="4.5764%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (724,954,001 samples, 0.07%)</title><rect x="4.3264%" y="837" width="0.0702%" height="15" fill="rgb(250,213,24)" fg:x="44675409146" fg:w="724954001"/><text x="4.5764%" y="847.50"></text></g><g><title>flatbuffers::table::Table::get (782,989,668 samples, 0.08%)</title><rect x="4.3981%" y="885" width="0.0758%" height="15" fill="rgb(247,123,22)" fg:x="45415774835" fg:w="782989668"/><text x="4.6481%" y="895.50"></text></g><g><title>flatbuffers::table::Table::vtable (782,989,668 samples, 0.08%)</title><rect x="4.3981%" y="869" width="0.0758%" height="15" fill="rgb(231,138,38)" fg:x="45415774835" fg:w="782989668"/><text x="4.6481%" y="879.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (3,833,990,857 samples, 0.37%)</title><rect x="4.4739%" y="885" width="0.3713%" height="15" fill="rgb(231,145,46)" fg:x="46198764503" fg:w="3833990857"/><text x="4.7239%" y="895.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (786,528,581 samples, 0.08%)</title><rect x="4.7690%" y="869" width="0.0762%" height="15" fill="rgb(251,118,11)" fg:x="49246226779" fg:w="786528581"/><text x="5.0190%" y="879.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (786,528,581 samples, 0.08%)</title><rect x="4.7690%" y="853" width="0.0762%" height="15" fill="rgb(217,147,25)" fg:x="49246226779" fg:w="786528581"/><text x="5.0190%" y="863.50"></text></g><g><title>flatbuffers::verifier::Verifier::visit_table (773,760,268 samples, 0.07%)</title><rect x="4.8452%" y="885" width="0.0749%" height="15" fill="rgb(247,81,37)" fg:x="50032755360" fg:w="773760268"/><text x="5.0952%" y="895.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (773,760,268 samples, 0.07%)</title><rect x="4.8452%" y="869" width="0.0749%" height="15" fill="rgb(209,12,38)" fg:x="50032755360" fg:w="773760268"/><text x="5.0952%" y="879.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (773,760,268 samples, 0.07%)</title><rect x="4.8452%" y="853" width="0.0749%" height="15" fill="rgb(227,1,9)" fg:x="50032755360" fg:w="773760268"/><text x="5.0952%" y="863.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (773,760,268 samples, 0.07%)</title><rect x="4.8452%" y="837" width="0.0749%" height="15" fill="rgb(248,47,43)" fg:x="50032755360" fg:w="773760268"/><text x="5.0952%" y="847.50"></text></g><g><title>flatbuffers::verifier::append_trace (1,017,631,390 samples, 0.10%)</title><rect x="4.9201%" y="885" width="0.0985%" height="15" fill="rgb(221,10,30)" fg:x="50806515628" fg:w="1017631390"/><text x="5.1701%" y="895.50"></text></g><g><title>flatbuffers::verifier::verify_vector_range (764,387,228 samples, 0.07%)</title><rect x="5.0187%" y="885" width="0.0740%" height="15" fill="rgb(210,229,1)" fg:x="51824147018" fg:w="764387228"/><text x="5.2687%" y="895.50"></text></g><g><title>[[stack]] (17,625,118,529 samples, 1.71%)</title><rect x="3.3874%" y="901" width="1.7068%" height="15" fill="rgb(222,148,37)" fg:x="34978652689" fg:w="17625118529"/><text x="3.6374%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (736,249,594 samples, 0.07%)</title><rect x="5.0958%" y="885" width="0.0713%" height="15" fill="rgb(234,67,33)" fg:x="52620867478" fg:w="736249594"/><text x="5.3458%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (736,249,594 samples, 0.07%)</title><rect x="5.0958%" y="869" width="0.0713%" height="15" fill="rgb(247,98,35)" fg:x="52620867478" fg:w="736249594"/><text x="5.3458%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (736,249,594 samples, 0.07%)</title><rect x="5.0958%" y="853" width="0.0713%" height="15" fill="rgb(247,138,52)" fg:x="52620867478" fg:w="736249594"/><text x="5.3458%" y="863.50"></text></g><g><title>__GI___libc_free (3,106,157,309 samples, 0.30%)</title><rect x="5.1674%" y="885" width="0.3008%" height="15" fill="rgb(213,79,30)" fg:x="53360201229" fg:w="3106157309"/><text x="5.4174%" y="895.50"></text></g><g><title>_int_free (2,396,651,594 samples, 0.23%)</title><rect x="5.4682%" y="885" width="0.2321%" height="15" fill="rgb(246,177,23)" fg:x="56466358538" fg:w="2396651594"/><text x="5.7182%" y="895.50"></text></g><g><title>[metadata_profile] (6,248,308,762 samples, 0.61%)</title><rect x="5.0955%" y="901" width="0.6051%" height="15" fill="rgb(230,62,27)" fg:x="52617783794" fg:w="6248308762"/><text x="5.3455%" y="911.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,597,794,676 samples, 0.15%)</title><rect x="5.7015%" y="885" width="0.1547%" height="15" fill="rgb(216,154,8)" fg:x="58875345145" fg:w="1597794676"/><text x="5.9515%" y="895.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (514,903,834 samples, 0.05%)</title><rect x="5.8563%" y="885" width="0.0499%" height="15" fill="rgb(244,35,45)" fg:x="60473139821" fg:w="514903834"/><text x="6.1063%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,146,831,905 samples, 0.11%)</title><rect x="5.9061%" y="885" width="0.1111%" height="15" fill="rgb(251,115,12)" fg:x="60988043655" fg:w="1146831905"/><text x="6.1561%" y="895.50"></text></g><g><title>__GI___libc_malloc (2,371,172,713 samples, 0.23%)</title><rect x="6.0175%" y="885" width="0.2296%" height="15" fill="rgb(240,54,50)" fg:x="62137960207" fg:w="2371172713"/><text x="6.2675%" y="895.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (698,226,427 samples, 0.07%)</title><rect x="6.2477%" y="885" width="0.0676%" height="15" fill="rgb(233,84,52)" fg:x="64515300887" fg:w="698226427"/><text x="6.4977%" y="895.50"></text></g><g><title>_int_free (4,722,090,215 samples, 0.46%)</title><rect x="6.3159%" y="885" width="0.4573%" height="15" fill="rgb(207,117,47)" fg:x="65219693265" fg:w="4722090215"/><text x="6.5659%" y="895.50"></text></g><g><title>_int_malloc (2,484,549,525 samples, 0.24%)</title><rect x="6.7732%" y="885" width="0.2406%" height="15" fill="rgb(249,43,39)" fg:x="69941783480" fg:w="2484549525"/><text x="7.0232%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="853" width="0.0702%" height="15" fill="rgb(209,38,44)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="837" width="0.0702%" height="15" fill="rgb(236,212,23)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="821" width="0.0702%" height="15" fill="rgb(242,79,21)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="805" width="0.0702%" height="15" fill="rgb(211,96,35)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="789" width="0.0702%" height="15" fill="rgb(253,215,40)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="773" width="0.0702%" height="15" fill="rgb(211,81,21)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (724,882,709 samples, 0.07%)</title><rect x="7.0978%" y="757" width="0.0702%" height="15" fill="rgb(208,190,38)" fg:x="73293173280" fg:w="724882709"/><text x="7.3478%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,381,443,622 samples, 0.23%)</title><rect x="7.0147%" y="885" width="0.2306%" height="15" fill="rgb(235,213,38)" fg:x="72435583325" fg:w="2381443622"/><text x="7.2647%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::field::Field&gt; (2,381,443,622 samples, 0.23%)</title><rect x="7.0147%" y="869" width="0.2306%" height="15" fill="rgb(237,122,38)" fg:x="72435583325" fg:w="2381443622"/><text x="7.2647%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (798,970,958 samples, 0.08%)</title><rect x="7.1680%" y="853" width="0.0774%" height="15" fill="rgb(244,218,35)" fg:x="74018055989" fg:w="798970958"/><text x="7.4180%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (798,970,958 samples, 0.08%)</title><rect x="7.1680%" y="837" width="0.0774%" height="15" fill="rgb(240,68,47)" fg:x="74018055989" fg:w="798970958"/><text x="7.4180%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (798,970,958 samples, 0.08%)</title><rect x="7.1680%" y="821" width="0.0774%" height="15" fill="rgb(210,16,53)" fg:x="74018055989" fg:w="798970958"/><text x="7.4180%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::from_iter_exact (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="885" width="0.1549%" height="15" fill="rgb(235,124,12)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="869" width="0.1549%" height="15" fill="rgb(224,169,11)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="853" width="0.1549%" height="15" fill="rgb(250,166,2)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="837" width="0.1549%" height="15" fill="rgb(242,216,29)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="821" width="0.1549%" height="15" fill="rgb(230,116,27)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="805" width="0.1549%" height="15" fill="rgb(228,99,48)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="789" width="0.1549%" height="15" fill="rgb(253,11,6)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="773" width="0.1549%" height="15" fill="rgb(247,143,39)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="757" width="0.1549%" height="15" fill="rgb(236,97,10)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="741" width="0.1549%" height="15" fill="rgb(233,208,19)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="725" width="0.1549%" height="15" fill="rgb(216,164,2)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,599,602,248 samples, 0.15%)</title><rect x="7.2453%" y="709" width="0.1549%" height="15" fill="rgb(220,129,5)" fg:x="74817026947" fg:w="1599602248"/><text x="7.4953%" y="719.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::name (665,923,292 samples, 0.06%)</title><rect x="7.8822%" y="869" width="0.0645%" height="15" fill="rgb(242,17,10)" fg:x="81393404599" fg:w="665923292"/><text x="8.1322%" y="879.50"></text></g><g><title>arrow_ipc::convert::&lt;impl core::convert::From&lt;arrow_ipc::gen::Schema::Field&gt; for arrow_schema::field::Field&gt;::from (7,121,816,806 samples, 0.69%)</title><rect x="7.4057%" y="885" width="0.6897%" height="15" fill="rgb(242,107,0)" fg:x="76472999627" fg:w="7121816806"/><text x="7.6557%" y="895.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::nullable (1,535,488,542 samples, 0.15%)</title><rect x="7.9467%" y="869" width="0.1487%" height="15" fill="rgb(251,28,31)" fg:x="82059327891" fg:w="1535488542"/><text x="8.1967%" y="879.50"></text></g><g><title>flatbuffers::table::Table::get (1,535,488,542 samples, 0.15%)</title><rect x="7.9467%" y="853" width="0.1487%" height="15" fill="rgb(233,223,10)" fg:x="82059327891" fg:w="1535488542"/><text x="8.1967%" y="863.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::dictionary (804,787,489 samples, 0.08%)</title><rect x="8.1835%" y="869" width="0.0779%" height="15" fill="rgb(215,21,27)" fg:x="84504485744" fg:w="804787489"/><text x="8.4335%" y="879.50"></text></g><g><title>flatbuffers::table::Table::get (804,787,489 samples, 0.08%)</title><rect x="8.1835%" y="853" width="0.0779%" height="15" fill="rgb(232,23,21)" fg:x="84504485744" fg:w="804787489"/><text x="8.4335%" y="863.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_ (773,760,681 samples, 0.07%)</title><rect x="8.2614%" y="853" width="0.0749%" height="15" fill="rgb(244,5,23)" fg:x="85309273233" fg:w="773760681"/><text x="8.5114%" y="863.50"></text></g><g><title>flatbuffers::table::Table::get (773,760,681 samples, 0.07%)</title><rect x="8.2614%" y="837" width="0.0749%" height="15" fill="rgb(226,81,46)" fg:x="85309273233" fg:w="773760681"/><text x="8.5114%" y="847.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_as_floating_point (1,597,684,778 samples, 0.15%)</title><rect x="8.2614%" y="869" width="0.1547%" height="15" fill="rgb(247,70,30)" fg:x="85309273233" fg:w="1597684778"/><text x="8.5114%" y="879.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_type (823,924,097 samples, 0.08%)</title><rect x="8.3364%" y="853" width="0.0798%" height="15" fill="rgb(212,68,19)" fg:x="86083033914" fg:w="823924097"/><text x="8.5864%" y="863.50"></text></g><g><title>flatbuffers::table::Table::get (823,924,097 samples, 0.08%)</title><rect x="8.3364%" y="837" width="0.0798%" height="15" fill="rgb(240,187,13)" fg:x="86083033914" fg:w="823924097"/><text x="8.5864%" y="847.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_type (788,925,911 samples, 0.08%)</title><rect x="8.4161%" y="869" width="0.0764%" height="15" fill="rgb(223,113,26)" fg:x="86906958011" fg:w="788925911"/><text x="8.6661%" y="879.50"></text></g><g><title>flatbuffers::table::Table::get (788,925,911 samples, 0.08%)</title><rect x="8.4161%" y="853" width="0.0764%" height="15" fill="rgb(206,192,2)" fg:x="86906958011" fg:w="788925911"/><text x="8.6661%" y="863.50"></text></g><g><title>arrow_ipc::convert::get_data_type (5,602,332,331 samples, 0.54%)</title><rect x="8.0954%" y="885" width="0.5425%" height="15" fill="rgb(241,108,4)" fg:x="83594816433" fg:w="5602332331"/><text x="8.3454%" y="895.50"></text></g><g><title>arrow_ipc::gen::Schema::FloatingPoint::precision (1,501,264,842 samples, 0.15%)</title><rect x="8.4925%" y="869" width="0.1454%" height="15" fill="rgb(247,173,49)" fg:x="87695883922" fg:w="1501264842"/><text x="8.7425%" y="879.50"></text></g><g><title>flatbuffers::table::Table::get (1,501,264,842 samples, 0.15%)</title><rect x="8.4925%" y="853" width="0.1454%" height="15" fill="rgb(224,114,35)" fg:x="87695883922" fg:w="1501264842"/><text x="8.7425%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="741" width="0.0827%" height="15" fill="rgb(245,159,27)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="725" width="0.0827%" height="15" fill="rgb(245,172,44)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="709" width="0.0827%" height="15" fill="rgb(236,23,11)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="693" width="0.0827%" height="15" fill="rgb(205,117,38)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="677" width="0.0827%" height="15" fill="rgb(237,72,25)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="661" width="0.0827%" height="15" fill="rgb(244,70,9)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="671.50"></text></g><g><title>alloc::alloc::alloc (853,762,758 samples, 0.08%)</title><rect x="8.7120%" y="645" width="0.0827%" height="15" fill="rgb(217,125,39)" fg:x="89961922487" fg:w="853762758"/><text x="8.9620%" y="655.50"></text></g><g><title>arrow_schema::field::Field::new (2,429,505,947 samples, 0.24%)</title><rect x="8.6379%" y="885" width="0.2353%" height="15" fill="rgb(235,36,10)" fg:x="89197148764" fg:w="2429505947"/><text x="8.8879%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="869" width="0.1612%" height="15" fill="rgb(251,123,47)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="853" width="0.1612%" height="15" fill="rgb(221,13,13)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="837" width="0.1612%" height="15" fill="rgb(238,131,9)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="821" width="0.1612%" height="15" fill="rgb(211,50,8)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="805" width="0.1612%" height="15" fill="rgb(245,182,24)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="789" width="0.1612%" height="15" fill="rgb(242,14,37)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="773" width="0.1612%" height="15" fill="rgb(246,228,12)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,664,732,224 samples, 0.16%)</title><rect x="8.7120%" y="757" width="0.1612%" height="15" fill="rgb(213,55,15)" fg:x="89961922487" fg:w="1664732224"/><text x="8.9620%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (810,969,466 samples, 0.08%)</title><rect x="8.7947%" y="741" width="0.0785%" height="15" fill="rgb(209,9,3)" fg:x="90815685245" fg:w="810969466"/><text x="9.0447%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (810,969,466 samples, 0.08%)</title><rect x="8.7947%" y="725" width="0.0785%" height="15" fill="rgb(230,59,30)" fg:x="90815685245" fg:w="810969466"/><text x="9.0447%" y="735.50"></text></g><g><title>arrow_schema::field::Field::with_metadata (1,803,272,782 samples, 0.17%)</title><rect x="8.8732%" y="885" width="0.1746%" height="15" fill="rgb(209,121,21)" fg:x="91626654711" fg:w="1803272782"/><text x="9.1232%" y="895.50"></text></g><g><title>arrow_schema::field::Field::set_metadata (135,550,206 samples, 0.01%)</title><rect x="9.0347%" y="869" width="0.0131%" height="15" fill="rgb(220,109,13)" fg:x="93294377287" fg:w="135550206"/><text x="9.2847%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (135,550,206 samples, 0.01%)</title><rect x="9.0347%" y="853" width="0.0131%" height="15" fill="rgb(232,18,1)" fg:x="93294377287" fg:w="135550206"/><text x="9.2847%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (135,550,206 samples, 0.01%)</title><rect x="9.0347%" y="837" width="0.0131%" height="15" fill="rgb(215,41,42)" fg:x="93294377287" fg:w="135550206"/><text x="9.2847%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (135,550,206 samples, 0.01%)</title><rect x="9.0347%" y="821" width="0.0131%" height="15" fill="rgb(224,123,36)" fg:x="93294377287" fg:w="135550206"/><text x="9.2847%" y="831.50"></text></g><g><title>core::str::converts::from_utf8 (681,702,004 samples, 0.07%)</title><rect x="9.0481%" y="885" width="0.0660%" height="15" fill="rgb(240,125,3)" fg:x="93433012652" fg:w="681702004"/><text x="9.2981%" y="895.50"></text></g><g><title>flatbuffers::table::Table::get (4,907,136,835 samples, 0.48%)</title><rect x="9.1147%" y="885" width="0.4752%" height="15" fill="rgb(205,98,50)" fg:x="94120883499" fg:w="4907136835"/><text x="9.3647%" y="895.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,649,358,221 samples, 0.16%)</title><rect x="9.4302%" y="869" width="0.1597%" height="15" fill="rgb(205,185,37)" fg:x="97378662113" fg:w="1649358221"/><text x="9.6802%" y="879.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (9,732,740,753 samples, 0.94%)</title><rect x="9.5900%" y="885" width="0.9425%" height="15" fill="rgb(238,207,15)" fg:x="99028020334" fg:w="9732740753"/><text x="9.8400%" y="895.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (7,099,721,803 samples, 0.69%)</title><rect x="10.5325%" y="885" width="0.6875%" height="15" fill="rgb(213,199,42)" fg:x="108760761087" fg:w="7099721803"/><text x="10.7825%" y="895.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (4,002,927,401 samples, 0.39%)</title><rect x="10.8324%" y="869" width="0.3876%" height="15" fill="rgb(235,201,11)" fg:x="111857555489" fg:w="4002927401"/><text x="11.0824%" y="879.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (4,002,927,401 samples, 0.39%)</title><rect x="10.8324%" y="853" width="0.3876%" height="15" fill="rgb(207,46,11)" fg:x="111857555489" fg:w="4002927401"/><text x="11.0824%" y="863.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (3,999,841,711 samples, 0.39%)</title><rect x="10.8327%" y="837" width="0.3873%" height="15" fill="rgb(241,35,35)" fg:x="111860641179" fg:w="3999841711"/><text x="11.0827%" y="847.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::MetadataSection as flatbuffers::verifier::Verifiable&gt;::run_verifier (3,999,841,711 samples, 0.39%)</title><rect x="10.8327%" y="821" width="0.3873%" height="15" fill="rgb(243,32,47)" fg:x="111860641179" fg:w="3999841711"/><text x="11.0827%" y="831.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (3,231,907,679 samples, 0.31%)</title><rect x="10.9070%" y="805" width="0.3130%" height="15" fill="rgb(247,202,23)" fg:x="112628575211" fg:w="3231907679"/><text x="11.1570%" y="815.50"></text></g><g><title>flatbuffers::verifier::trace_field (1,227,467,783 samples, 0.12%)</title><rect x="11.1012%" y="789" width="0.1189%" height="15" fill="rgb(219,102,11)" fg:x="114633015107" fg:w="1227467783"/><text x="11.3512%" y="799.50"></text></g><g><title>flatbuffers::verifier::Verifier::visit_table (3,545,776,154 samples, 0.34%)</title><rect x="11.2200%" y="885" width="0.3434%" height="15" fill="rgb(243,110,44)" fg:x="115860482890" fg:w="3545776154"/><text x="11.4700%" y="895.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (795,370,728 samples, 0.08%)</title><rect x="11.4864%" y="869" width="0.0770%" height="15" fill="rgb(222,74,54)" fg:x="118610888316" fg:w="795370728"/><text x="11.7364%" y="879.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (795,370,728 samples, 0.08%)</title><rect x="11.4864%" y="853" width="0.0770%" height="15" fill="rgb(216,99,12)" fg:x="118610888316" fg:w="795370728"/><text x="11.7364%" y="863.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (795,370,728 samples, 0.08%)</title><rect x="11.4864%" y="837" width="0.0770%" height="15" fill="rgb(226,22,26)" fg:x="118610888316" fg:w="795370728"/><text x="11.7364%" y="847.50"></text></g><g><title>flatbuffers::verifier::append_trace (11,372,495,915 samples, 1.10%)</title><rect x="11.5634%" y="885" width="1.1013%" height="15" fill="rgb(217,163,10)" fg:x="119406259044" fg:w="11372495915"/><text x="11.8134%" y="895.50"></text></g><g><title>flatbuffers::verifier::verify_vector_range (2,294,841,318 samples, 0.22%)</title><rect x="12.6647%" y="885" width="0.2222%" height="15" fill="rgb(213,25,53)" fg:x="130778754959" fg:w="2294841318"/><text x="12.9147%" y="895.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,957,479,463 samples, 0.29%)</title><rect x="12.8870%" y="885" width="0.2864%" height="15" fill="rgb(252,105,26)" fg:x="133073596277" fg:w="2957479463"/><text x="13.1370%" y="895.50"></text></g><g><title>malloc_consolidate (3,608,943,966 samples, 0.35%)</title><rect x="13.1743%" y="885" width="0.3495%" height="15" fill="rgb(220,39,43)" fg:x="136040326189" fg:w="3608943966"/><text x="13.4243%" y="895.50"></text></g><g><title>__irq_exit_rcu (185,151,616 samples, 0.02%)</title><rect x="18.2538%" y="453" width="0.0179%" height="15" fill="rgb(229,68,48)" fg:x="188493033891" fg:w="185151616"/><text x="18.5038%" y="463.50"></text></g><g><title>handle_softirqs (178,977,309 samples, 0.02%)</title><rect x="18.2544%" y="437" width="0.0173%" height="15" fill="rgb(252,8,32)" fg:x="188499208198" fg:w="178977309"/><text x="18.5044%" y="447.50"></text></g><g><title>run_timer_softirq (169,718,078 samples, 0.02%)</title><rect x="18.2553%" y="421" width="0.0164%" height="15" fill="rgb(223,20,43)" fg:x="188508467429" fg:w="169718078"/><text x="18.5053%" y="431.50"></text></g><g><title>__run_timers (169,718,078 samples, 0.02%)</title><rect x="18.2553%" y="405" width="0.0164%" height="15" fill="rgb(229,81,49)" fg:x="188508467429" fg:w="169718078"/><text x="18.5053%" y="415.50"></text></g><g><title>call_timer_fn (169,718,078 samples, 0.02%)</title><rect x="18.2553%" y="389" width="0.0164%" height="15" fill="rgb(236,28,36)" fg:x="188508467429" fg:w="169718078"/><text x="18.5053%" y="399.50"></text></g><g><title>fq_flush_timeout (169,718,078 samples, 0.02%)</title><rect x="18.2553%" y="373" width="0.0164%" height="15" fill="rgb(249,185,26)" fg:x="188508467429" fg:w="169718078"/><text x="18.5053%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (231,380,433 samples, 0.02%)</title><rect x="18.2538%" y="485" width="0.0224%" height="15" fill="rgb(249,174,33)" fg:x="188493033891" fg:w="231380433"/><text x="18.5038%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (231,380,433 samples, 0.02%)</title><rect x="18.2538%" y="469" width="0.0224%" height="15" fill="rgb(233,201,37)" fg:x="188493033891" fg:w="231380433"/><text x="18.5038%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (151,302,846 samples, 0.01%)</title><rect x="31.4292%" y="341" width="0.0147%" height="15" fill="rgb(221,78,26)" fg:x="324544550765" fg:w="151302846"/><text x="31.6792%" y="351.50"></text></g><g><title>free_iova_fast (388,838,051 samples, 0.04%)</title><rect x="31.4477%" y="325" width="0.0377%" height="15" fill="rgb(250,127,30)" fg:x="324735978960" fg:w="388838051"/><text x="31.6977%" y="335.50"></text></g><g><title>iova_magazine_free_pfns (327,111,678 samples, 0.03%)</title><rect x="31.4537%" y="309" width="0.0317%" height="15" fill="rgb(230,49,44)" fg:x="324797705333" fg:w="327111678"/><text x="31.7037%" y="319.50"></text></g><g><title>__irq_exit_rcu (629,574,235 samples, 0.06%)</title><rect x="31.4247%" y="437" width="0.0610%" height="15" fill="rgb(229,67,23)" fg:x="324498328890" fg:w="629574235"/><text x="31.6747%" y="447.50"></text></g><g><title>handle_softirqs (623,402,862 samples, 0.06%)</title><rect x="31.4253%" y="421" width="0.0604%" height="15" fill="rgb(249,83,47)" fg:x="324504500263" fg:w="623402862"/><text x="31.6753%" y="431.50"></text></g><g><title>run_timer_softirq (601,868,067 samples, 0.06%)</title><rect x="31.4274%" y="405" width="0.0583%" height="15" fill="rgb(215,43,3)" fg:x="324526035058" fg:w="601868067"/><text x="31.6774%" y="415.50"></text></g><g><title>__run_timers (601,868,067 samples, 0.06%)</title><rect x="31.4274%" y="389" width="0.0583%" height="15" fill="rgb(238,154,13)" fg:x="324526035058" fg:w="601868067"/><text x="31.6774%" y="399.50"></text></g><g><title>call_timer_fn (592,610,097 samples, 0.06%)</title><rect x="31.4283%" y="373" width="0.0574%" height="15" fill="rgb(219,56,2)" fg:x="324535293028" fg:w="592610097"/><text x="31.6783%" y="383.50"></text></g><g><title>fq_flush_timeout (592,610,097 samples, 0.06%)</title><rect x="31.4283%" y="357" width="0.0574%" height="15" fill="rgb(233,0,4)" fg:x="324535293028" fg:w="592610097"/><text x="31.6783%" y="367.50"></text></g><g><title>fq_ring_free (425,877,679 samples, 0.04%)</title><rect x="31.4444%" y="341" width="0.0412%" height="15" fill="rgb(235,30,7)" fg:x="324702025446" fg:w="425877679"/><text x="31.6944%" y="351.50"></text></g><g><title>__hrtimer_run_queues (154,238,536 samples, 0.01%)</title><rect x="31.4862%" y="405" width="0.0149%" height="15" fill="rgb(250,79,13)" fg:x="325134074454" fg:w="154238536"/><text x="31.7362%" y="415.50"></text></g><g><title>tick_sched_timer (148,066,469 samples, 0.01%)</title><rect x="31.4868%" y="389" width="0.0143%" height="15" fill="rgb(211,146,34)" fg:x="325140246521" fg:w="148066469"/><text x="31.7368%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (796,167,339 samples, 0.08%)</title><rect x="31.4244%" y="469" width="0.0771%" height="15" fill="rgb(228,22,38)" fg:x="324495231160" fg:w="796167339"/><text x="31.6744%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (793,069,609 samples, 0.08%)</title><rect x="31.4247%" y="453" width="0.0768%" height="15" fill="rgb(235,168,5)" fg:x="324498328890" fg:w="793069609"/><text x="31.6747%" y="463.50"></text></g><g><title>__sysvec_apic_timer_interrupt (163,495,374 samples, 0.02%)</title><rect x="31.4857%" y="437" width="0.0158%" height="15" fill="rgb(221,155,16)" fg:x="325127903125" fg:w="163495374"/><text x="31.7357%" y="447.50"></text></g><g><title>hrtimer_interrupt (157,324,045 samples, 0.02%)</title><rect x="31.4862%" y="421" width="0.0152%" height="15" fill="rgb(215,215,53)" fg:x="325134074454" fg:w="157324045"/><text x="31.7362%" y="431.50"></text></g><g><title>malloc_consolidate (144,516,254,869 samples, 14.00%)</title><rect x="18.2807%" y="485" width="13.9951%" height="15" fill="rgb(223,4,10)" fg:x="188770532824" fg:w="144516254869"/><text x="18.5307%" y="495.50">malloc_consolidate</text></g><g><title>unlink_chunk (7,986,132,154 samples, 0.77%)</title><rect x="31.5024%" y="469" width="0.7734%" height="15" fill="rgb(234,103,6)" fg:x="325300655539" fg:w="7986132154"/><text x="31.7524%" y="479.50"></text></g><g><title>_int_free (191,287,907,486 samples, 18.52%)</title><rect x="13.9149%" y="501" width="18.5245%" height="15" fill="rgb(227,97,0)" fg:x="143688765345" fg:w="191287907486"/><text x="14.1649%" y="511.50">_int_free</text></g><g><title>unlink_chunk (1,610,199,406 samples, 0.16%)</title><rect x="32.2835%" y="485" width="0.1559%" height="15" fill="rgb(234,150,53)" fg:x="333366473425" fg:w="1610199406"/><text x="32.5335%" y="495.50"></text></g><g><title>arena_for_chunk (777,167,640 samples, 0.08%)</title><rect x="32.4394%" y="501" width="0.0753%" height="15" fill="rgb(228,201,54)" fg:x="334976672831" fg:w="777167640"/><text x="32.6894%" y="511.50"></text></g><g><title>__GI___libc_free (193,713,334,150 samples, 18.76%)</title><rect x="13.7571%" y="517" width="18.7594%" height="15" fill="rgb(222,22,37)" fg:x="142059010258" fg:w="193713334150"/><text x="14.0071%" y="527.50">__GI___libc_free</text></g><g><title>__rdl_dealloc (1,511,421,940 samples, 0.15%)</title><rect x="32.5165%" y="517" width="0.1464%" height="15" fill="rgb(237,53,32)" fg:x="335772344408" fg:w="1511421940"/><text x="32.7665%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,508,335,912 samples, 0.15%)</title><rect x="32.5168%" y="501" width="0.1461%" height="15" fill="rgb(233,25,53)" fg:x="335775430436" fg:w="1508335912"/><text x="32.7668%" y="511.50"></text></g><g><title>__rust_dealloc (873,025,782 samples, 0.08%)</title><rect x="32.6628%" y="517" width="0.0845%" height="15" fill="rgb(210,40,34)" fg:x="337283766348" fg:w="873025782"/><text x="32.9128%" y="527.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (696,802,863 samples, 0.07%)</title><rect x="32.8821%" y="469" width="0.0675%" height="15" fill="rgb(241,220,44)" fg:x="339547530390" fg:w="696802863"/><text x="33.1321%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (696,802,863 samples, 0.07%)</title><rect x="32.8821%" y="453" width="0.0675%" height="15" fill="rgb(235,28,35)" fg:x="339547530390" fg:w="696802863"/><text x="33.1321%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (696,802,863 samples, 0.07%)</title><rect x="32.8821%" y="437" width="0.0675%" height="15" fill="rgb(210,56,17)" fg:x="339547530390" fg:w="696802863"/><text x="33.1321%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;arrow_schema::field::Field,&amp;alloc::alloc::Global&gt;&gt; (13,904,644,185 samples, 1.35%)</title><rect x="32.8215%" y="501" width="1.3465%" height="15" fill="rgb(224,130,29)" fg:x="338921768665" fg:w="13904644185"/><text x="33.0715%" y="511.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,904,644,185 samples, 1.35%)</title><rect x="32.8215%" y="485" width="1.3465%" height="15" fill="rgb(235,212,8)" fg:x="338921768665" fg:w="13904644185"/><text x="33.0715%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12,511,113,282 samples, 1.21%)</title><rect x="32.9564%" y="469" width="1.2116%" height="15" fill="rgb(223,33,50)" fg:x="340315299568" fg:w="12511113282"/><text x="33.2064%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (12,511,113,282 samples, 1.21%)</title><rect x="32.9564%" y="453" width="1.2116%" height="15" fill="rgb(219,149,13)" fg:x="340315299568" fg:w="12511113282"/><text x="33.2064%" y="463.50"></text></g><g><title>__irq_exit_rcu (126,528,850 samples, 0.01%)</title><rect x="37.1046%" y="309" width="0.0123%" height="15" fill="rgb(250,156,29)" fg:x="383150547019" fg:w="126528850"/><text x="37.3546%" y="319.50"></text></g><g><title>handle_softirqs (126,528,850 samples, 0.01%)</title><rect x="37.1046%" y="293" width="0.0123%" height="15" fill="rgb(216,193,19)" fg:x="383150547019" fg:w="126528850"/><text x="37.3546%" y="303.50"></text></g><g><title>run_timer_softirq (120,358,235 samples, 0.01%)</title><rect x="37.1052%" y="277" width="0.0117%" height="15" fill="rgb(216,135,14)" fg:x="383156717634" fg:w="120358235"/><text x="37.3552%" y="287.50"></text></g><g><title>__run_timers (120,358,235 samples, 0.01%)</title><rect x="37.1052%" y="261" width="0.0117%" height="15" fill="rgb(241,47,5)" fg:x="383156717634" fg:w="120358235"/><text x="37.3552%" y="271.50"></text></g><g><title>call_timer_fn (120,358,235 samples, 0.01%)</title><rect x="37.1052%" y="245" width="0.0117%" height="15" fill="rgb(233,42,35)" fg:x="383156717634" fg:w="120358235"/><text x="37.3552%" y="255.50"></text></g><g><title>fq_flush_timeout (120,358,235 samples, 0.01%)</title><rect x="37.1052%" y="229" width="0.0117%" height="15" fill="rgb(231,13,6)" fg:x="383156717634" fg:w="120358235"/><text x="37.3552%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (157,384,015 samples, 0.02%)</title><rect x="37.1046%" y="341" width="0.0152%" height="15" fill="rgb(207,181,40)" fg:x="383150547019" fg:w="157384015"/><text x="37.3546%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (157,384,015 samples, 0.02%)</title><rect x="37.1046%" y="325" width="0.0152%" height="15" fill="rgb(254,173,49)" fg:x="383150547019" fg:w="157384015"/><text x="37.3546%" y="335.50"></text></g><g><title>_int_free (28,806,773,298 samples, 2.79%)</title><rect x="34.4025%" y="357" width="2.7897%" height="15" fill="rgb(221,1,38)" fg:x="355247736748" fg:w="28806773298"/><text x="34.6525%" y="367.50">_i..</text></g><g><title>free_perturb (746,579,012 samples, 0.07%)</title><rect x="37.1199%" y="341" width="0.0723%" height="15" fill="rgb(206,124,46)" fg:x="383307931034" fg:w="746579012"/><text x="37.3699%" y="351.50"></text></g><g><title>arena_for_chunk (774,228,811 samples, 0.07%)</title><rect x="37.1922%" y="357" width="0.0750%" height="15" fill="rgb(249,21,11)" fg:x="384054510046" fg:w="774228811"/><text x="37.4422%" y="367.50"></text></g><g><title>__GI___libc_free (31,160,461,063 samples, 3.02%)</title><rect x="34.2513%" y="373" width="3.0176%" height="15" fill="rgb(222,201,40)" fg:x="353686795126" fg:w="31160461063"/><text x="34.5013%" y="383.50">__G..</text></g><g><title>__rdl_dealloc (1,601,898,548 samples, 0.16%)</title><rect x="37.2689%" y="373" width="0.1551%" height="15" fill="rgb(235,61,29)" fg:x="384847256189" fg:w="1601898548"/><text x="37.5189%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,601,898,548 samples, 0.16%)</title><rect x="37.2689%" y="357" width="0.1551%" height="15" fill="rgb(219,207,3)" fg:x="384847256189" fg:w="1601898548"/><text x="37.5189%" y="367.50"></text></g><g><title>__rust_dealloc (731,082,615 samples, 0.07%)</title><rect x="37.4241%" y="373" width="0.0708%" height="15" fill="rgb(222,56,46)" fg:x="386449154737" fg:w="731082615"/><text x="37.6741%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (34,301,635,819 samples, 3.32%)</title><rect x="34.1734%" y="421" width="3.3218%" height="15" fill="rgb(239,76,54)" fg:x="352881687924" fg:w="34301635819"/><text x="34.4234%" y="431.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34,301,635,819 samples, 3.32%)</title><rect x="34.1734%" y="405" width="3.3218%" height="15" fill="rgb(231,124,27)" fg:x="352881687924" fg:w="34301635819"/><text x="34.4234%" y="415.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (34,301,635,819 samples, 3.32%)</title><rect x="34.1734%" y="389" width="3.3218%" height="15" fill="rgb(249,195,6)" fg:x="352881687924" fg:w="34301635819"/><text x="34.4234%" y="399.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (34,366,168,825 samples, 3.33%)</title><rect x="34.1680%" y="485" width="3.3280%" height="15" fill="rgb(237,174,47)" fg:x="352826412850" fg:w="34366168825"/><text x="34.4180%" y="495.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (34,366,168,825 samples, 3.33%)</title><rect x="34.1680%" y="469" width="3.3280%" height="15" fill="rgb(206,201,31)" fg:x="352826412850" fg:w="34366168825"/><text x="34.4180%" y="479.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (34,366,168,825 samples, 3.33%)</title><rect x="34.1680%" y="453" width="3.3280%" height="15" fill="rgb(231,57,52)" fg:x="352826412850" fg:w="34366168825"/><text x="34.4180%" y="463.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34,366,168,825 samples, 3.33%)</title><rect x="34.1680%" y="437" width="3.3280%" height="15" fill="rgb(248,177,22)" fg:x="352826412850" fg:w="34366168825"/><text x="34.4180%" y="447.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (2,378,462,007 samples, 0.23%)</title><rect x="37.4960%" y="485" width="0.2303%" height="15" fill="rgb(215,211,37)" fg:x="387192581675" fg:w="2378462007"/><text x="37.7460%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,695,699,855 samples, 0.16%)</title><rect x="37.7264%" y="437" width="0.1642%" height="15" fill="rgb(241,128,51)" fg:x="389571043682" fg:w="1695699855"/><text x="37.9764%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,695,699,855 samples, 0.16%)</title><rect x="37.7264%" y="421" width="0.1642%" height="15" fill="rgb(227,165,31)" fg:x="389571043682" fg:w="1695699855"/><text x="37.9764%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (872,390,720 samples, 0.08%)</title><rect x="37.8061%" y="405" width="0.0845%" height="15" fill="rgb(228,167,24)" fg:x="390394352817" fg:w="872390720"/><text x="38.0561%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (53,113,034,384 samples, 5.14%)</title><rect x="32.7474%" y="517" width="5.1435%" height="15" fill="rgb(228,143,12)" fg:x="338156792130" fg:w="53113034384"/><text x="32.9974%" y="527.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::field::Field&gt; (38,443,413,664 samples, 3.72%)</title><rect x="34.1680%" y="501" width="3.7229%" height="15" fill="rgb(249,149,8)" fg:x="352826412850" fg:w="38443413664"/><text x="34.4180%" y="511.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (1,698,782,832 samples, 0.16%)</title><rect x="37.7264%" y="485" width="0.1645%" height="15" fill="rgb(243,35,44)" fg:x="389571043682" fg:w="1698782832"/><text x="37.9764%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,698,782,832 samples, 0.16%)</title><rect x="37.7264%" y="469" width="0.1645%" height="15" fill="rgb(246,89,9)" fg:x="389571043682" fg:w="1698782832"/><text x="37.9764%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1,698,782,832 samples, 0.16%)</title><rect x="37.7264%" y="453" width="0.1645%" height="15" fill="rgb(233,213,13)" fg:x="389571043682" fg:w="1698782832"/><text x="37.9764%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_schema::schema::Schema&gt;&gt; (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="693" width="25.6413%" height="15" fill="rgb(233,141,41)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="703.50">core::ptr::drop_in_place&lt;alloc::sync::Arc..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="677" width="25.6413%" height="15" fill="rgb(239,167,4)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="687.50">&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="661" width="25.6413%" height="15" fill="rgb(209,217,16)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="671.50">alloc::sync::Arc&lt;T,A&gt;::drop_slow</text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::schema::Schema&gt; (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="645" width="25.6413%" height="15" fill="rgb(219,88,35)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="655.50">core::ptr::drop_in_place&lt;arrow_schema::sc..</text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::fields::Fields&gt; (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="629" width="25.6413%" height="15" fill="rgb(220,193,23)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="639.50">core::ptr::drop_in_place&lt;arrow_schema::fi..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[alloc::sync::Arc&lt;arrow_schema::field::Field&gt;]&gt;&gt; (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="613" width="25.6413%" height="15" fill="rgb(230,90,52)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="623.50">core::ptr::drop_in_place&lt;alloc::sync::Arc..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264,778,305,707 samples, 25.64%)</title><rect x="13.5283%" y="597" width="25.6413%" height="15" fill="rgb(252,106,19)" fg:x="139696407783" fg:w="264778305707"/><text x="13.7783%" y="607.50">&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (264,775,218,058 samples, 25.64%)</title><rect x="13.5286%" y="581" width="25.6410%" height="15" fill="rgb(206,74,20)" fg:x="139699495432" fg:w="264775218058"/><text x="13.7786%" y="591.50">alloc::sync::Arc&lt;T,A&gt;::drop_slow</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;arrow_schema::field::Field&gt;]&gt; (264,775,218,058 samples, 25.64%)</title><rect x="13.5286%" y="565" width="25.6410%" height="15" fill="rgb(230,138,44)" fg:x="139699495432" fg:w="264775218058"/><text x="13.7786%" y="575.50">core::ptr::drop_in_place&lt;[alloc::sync::Ar..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_schema::field::Field&gt;&gt; (264,016,390,484 samples, 25.57%)</title><rect x="13.6021%" y="549" width="25.5676%" height="15" fill="rgb(235,182,43)" fg:x="140458323006" fg:w="264016390484"/><text x="13.8521%" y="559.50">core::ptr::drop_in_place&lt;alloc::sync::Arc..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264,016,390,484 samples, 25.57%)</title><rect x="13.6021%" y="533" width="25.5676%" height="15" fill="rgb(242,16,51)" fg:x="140458323006" fg:w="264016390484"/><text x="13.8521%" y="543.50">&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13,136,995,301 samples, 1.27%)</title><rect x="37.8975%" y="517" width="1.2722%" height="15" fill="rgb(248,9,4)" fg:x="391337718189" fg:w="13136995301"/><text x="38.1475%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (13,136,995,301 samples, 1.27%)</title><rect x="37.8975%" y="501" width="1.2722%" height="15" fill="rgb(210,31,22)" fg:x="391337718189" fg:w="13136995301"/><text x="38.1475%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;fff_mvp::reader::FileReaderV2&lt;alloc::sync::Arc&lt;std::fs::File&gt;&gt;&gt; (264,830,765,933 samples, 25.65%)</title><rect x="13.5283%" y="709" width="25.6464%" height="15" fill="rgb(239,54,39)" fg:x="139696407783" fg:w="264830765933"/><text x="13.7783%" y="719.50">core::ptr::drop_in_place&lt;fff_mvp::reader:..</text></g><g><title>__x64_sys_pread64 (129,456,160 samples, 0.01%)</title><rect x="39.1929%" y="437" width="0.0125%" height="15" fill="rgb(230,99,41)" fg:x="404714936688" fg:w="129456160"/><text x="39.4429%" y="447.50"></text></g><g><title>vfs_read (120,205,303 samples, 0.01%)</title><rect x="39.1938%" y="421" width="0.0116%" height="15" fill="rgb(253,106,12)" fg:x="404724187545" fg:w="120205303"/><text x="39.4438%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (141,687,431 samples, 0.01%)</title><rect x="39.1926%" y="469" width="0.0137%" height="15" fill="rgb(213,46,41)" fg:x="404711954474" fg:w="141687431"/><text x="39.4426%" y="479.50"></text></g><g><title>do_syscall_64 (141,687,431 samples, 0.01%)</title><rect x="39.1926%" y="453" width="0.0137%" height="15" fill="rgb(215,133,35)" fg:x="404711954474" fg:w="141687431"/><text x="39.4426%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;std::fs::File&gt; as fff_mvp::io::reader::Reader&gt;::read_exact_at (175,606,885 samples, 0.02%)</title><rect x="39.1897%" y="581" width="0.0170%" height="15" fill="rgb(213,28,5)" fg:x="404681119789" fg:w="175606885"/><text x="39.4397%" y="591.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (172,521,933 samples, 0.02%)</title><rect x="39.1899%" y="565" width="0.0167%" height="15" fill="rgb(215,77,49)" fg:x="404684204741" fg:w="172521933"/><text x="39.4399%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (172,521,933 samples, 0.02%)</title><rect x="39.1899%" y="549" width="0.0167%" height="15" fill="rgb(248,100,22)" fg:x="404684204741" fg:w="172521933"/><text x="39.4399%" y="559.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_at (172,521,933 samples, 0.02%)</title><rect x="39.1899%" y="533" width="0.0167%" height="15" fill="rgb(208,67,9)" fg:x="404684204741" fg:w="172521933"/><text x="39.4399%" y="543.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_at (172,521,933 samples, 0.02%)</title><rect x="39.1899%" y="517" width="0.0167%" height="15" fill="rgb(219,133,21)" fg:x="404684204741" fg:w="172521933"/><text x="39.4399%" y="527.50"></text></g><g><title>__libc_pread64 (169,437,780 samples, 0.02%)</title><rect x="39.1902%" y="501" width="0.0164%" height="15" fill="rgb(246,46,29)" fg:x="404687288894" fg:w="169437780"/><text x="39.4402%" y="511.50"></text></g><g><title>__libc_pread64 (169,437,780 samples, 0.02%)</title><rect x="39.1902%" y="485" width="0.0164%" height="15" fill="rgb(246,185,52)" fg:x="404687288894" fg:w="169437780"/><text x="39.4402%" y="495.50"></text></g><g><title>&lt;E as vortex_array::canonical::IntoCanonicalVTable&gt;::into_canonical (197,036,683 samples, 0.02%)</title><rect x="39.2070%" y="501" width="0.0191%" height="15" fill="rgb(252,136,11)" fg:x="404859811587" fg:w="197036683"/><text x="39.4570%" y="511.50"></text></g><g><title>vortex_array::data::&lt;impl vortex_array::stats::ArrayStatistics for T&gt;::inherit_statistics (104,661,057 samples, 0.01%)</title><rect x="39.2159%" y="485" width="0.0101%" height="15" fill="rgb(219,138,53)" fg:x="404952187213" fg:w="104661057"/><text x="39.4659%" y="495.50"></text></g><g><title>&lt;vortex_array::data::ArrayData as vortex_array::canonical::IntoCanonical&gt;::into_canonical (200,119,968 samples, 0.02%)</title><rect x="39.2070%" y="517" width="0.0194%" height="15" fill="rgb(211,51,23)" fg:x="404859811587" fg:w="200119968"/><text x="39.4570%" y="527.50"></text></g><g><title>&lt;fff_encoding::schemes::vortex::VortexDecoder as fff_encoding::schemes::Decoder&gt;::decode_all_as_array (267,973,265 samples, 0.03%)</title><rect x="39.2070%" y="549" width="0.0260%" height="15" fill="rgb(247,221,28)" fg:x="404859811587" fg:w="267973265"/><text x="39.4570%" y="559.50"></text></g><g><title>fff_encoding::schemes::vortex::vortex_array_to_arrow (267,973,265 samples, 0.03%)</title><rect x="39.2070%" y="533" width="0.0260%" height="15" fill="rgb(251,222,45)" fg:x="404859811587" fg:w="267973265"/><text x="39.4570%" y="543.50"></text></g><g><title>&lt;fff_mvp::decoder::encunit::VortexEncUnitDecoder as fff_mvp::decoder::encunit::EncUnitDecoder&gt;::decode (425,100,846 samples, 0.04%)</title><rect x="39.2067%" y="565" width="0.0412%" height="15" fill="rgb(217,162,53)" fg:x="404856726674" fg:w="425100846"/><text x="39.4567%" y="575.50"></text></g><g><title>fff_encoding::schemes::vortex::VortexDecoder::try_new (154,042,668 samples, 0.01%)</title><rect x="39.2329%" y="549" width="0.0149%" height="15" fill="rgb(229,93,14)" fg:x="405127784852" fg:w="154042668"/><text x="39.4829%" y="559.50"></text></g><g><title>fff_encoding::schemes::vortex::VortexDecoderBuilder::try_build (154,042,668 samples, 0.01%)</title><rect x="39.2329%" y="533" width="0.0149%" height="15" fill="rgb(209,67,49)" fg:x="405127784852" fg:w="154042668"/><text x="39.4829%" y="543.50"></text></g><g><title>fff_encoding::schemes::vortex::vortex_deser (154,042,668 samples, 0.01%)</title><rect x="39.2329%" y="517" width="0.0149%" height="15" fill="rgb(213,87,29)" fg:x="405127784852" fg:w="154042668"/><text x="39.4829%" y="527.50"></text></g><g><title>&lt;fff_mvp::decoder::physical::NoDictColDecoder&lt;R&gt; as fff_mvp::decoder::physical::ChunkDecoder&gt;::decode_batch (443,606,829 samples, 0.04%)</title><rect x="39.2067%" y="581" width="0.0430%" height="15" fill="rgb(205,151,52)" fg:x="404856726674" fg:w="443606829"/><text x="39.4567%" y="591.50"></text></g><g><title>&lt;fff_mvp::decoder::logical::PrimitiveColDecoder&lt;R&gt; as fff_mvp::decoder::logical::LogicalColDecoder&gt;::decode_batch (656,222,906 samples, 0.06%)</title><rect x="39.1894%" y="597" width="0.0635%" height="15" fill="rgb(253,215,39)" fg:x="404678036582" fg:w="656222906"/><text x="39.4394%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (708,653,287 samples, 0.07%)</title><rect x="39.1876%" y="677" width="0.0686%" height="15" fill="rgb(221,220,41)" fg:x="404659534653" fg:w="708653287"/><text x="39.4376%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (708,653,287 samples, 0.07%)</title><rect x="39.1876%" y="661" width="0.0686%" height="15" fill="rgb(218,133,21)" fg:x="404659534653" fg:w="708653287"/><text x="39.4376%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (708,653,287 samples, 0.07%)</title><rect x="39.1876%" y="645" width="0.0686%" height="15" fill="rgb(221,193,43)" fg:x="404659534653" fg:w="708653287"/><text x="39.4376%" y="655.50"></text></g><g><title>fff_mvp::reader::read_file_based_on_footer::{{closure}} (708,653,287 samples, 0.07%)</title><rect x="39.1876%" y="629" width="0.0686%" height="15" fill="rgb(240,128,52)" fg:x="404659534653" fg:w="708653287"/><text x="39.4376%" y="639.50"></text></g><g><title>fff_mvp::reader::read_file_based_on_footer::{{closure}} (705,569,451 samples, 0.07%)</title><rect x="39.1879%" y="613" width="0.0683%" height="15" fill="rgb(253,114,12)" fg:x="404662618489" fg:w="705569451"/><text x="39.4379%" y="623.50"></text></g><g><title>fff_mvp::reader::FileReaderV2&lt;R&gt;::read_file (847,183,360 samples, 0.08%)</title><rect x="39.1747%" y="709" width="0.0820%" height="15" fill="rgb(215,223,47)" fg:x="404527173716" fg:w="847183360"/><text x="39.4247%" y="719.50"></text></g><g><title>fff_mvp::reader::read_file_based_on_footer (770,165,466 samples, 0.07%)</title><rect x="39.1822%" y="693" width="0.0746%" height="15" fill="rgb(248,225,23)" fg:x="404604191610" fg:w="770165466"/><text x="39.4322%" y="703.50"></text></g><g><title>_copy_to_iter (14,984,468,346 samples, 1.45%)</title><rect x="39.4092%" y="485" width="1.4511%" height="15" fill="rgb(250,108,0)" fg:x="406947907178" fg:w="14984468346"/><text x="39.6592%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (14,635,855,782 samples, 1.42%)</title><rect x="39.4429%" y="469" width="1.4173%" height="15" fill="rgb(228,208,7)" fg:x="407296519742" fg:w="14635855782"/><text x="39.6929%" y="479.50"></text></g><g><title>copy_page_to_iter (15,308,792,558 samples, 1.48%)</title><rect x="39.3846%" y="501" width="1.4825%" height="15" fill="rgb(244,45,10)" fg:x="406694544141" fg:w="15308792558"/><text x="39.6346%" y="511.50"></text></g><g><title>filemap_get_pages (2,442,933,012 samples, 0.24%)</title><rect x="40.8671%" y="501" width="0.2366%" height="15" fill="rgb(207,125,25)" fg:x="422003336699" fg:w="2442933012"/><text x="41.1171%" y="511.50"></text></g><g><title>filemap_get_read_batch (2,421,337,369 samples, 0.23%)</title><rect x="40.8692%" y="485" width="0.2345%" height="15" fill="rgb(210,195,18)" fg:x="422024932342" fg:w="2421337369"/><text x="41.1192%" y="495.50"></text></g><g><title>filemap_read (19,050,311,911 samples, 1.84%)</title><rect x="39.2657%" y="517" width="1.8448%" height="15" fill="rgb(249,80,12)" fg:x="405466883695" fg:w="19050311911"/><text x="39.5157%" y="527.50">f..</text></g><g><title>__x64_sys_pread64 (19,124,330,409 samples, 1.85%)</title><rect x="39.2604%" y="549" width="1.8520%" height="15" fill="rgb(221,65,9)" fg:x="405411372118" fg:w="19124330409"/><text x="39.5104%" y="559.50">_..</text></g><g><title>vfs_read (19,096,566,530 samples, 1.85%)</title><rect x="39.2631%" y="533" width="1.8493%" height="15" fill="rgb(235,49,36)" fg:x="405439135997" fg:w="19096566530"/><text x="39.5131%" y="543.50">v..</text></g><g><title>&lt;alloc::sync::Arc&lt;std::fs::File&gt; as fff_mvp::io::reader::Reader&gt;::read_exact_at (19,161,343,915 samples, 1.86%)</title><rect x="39.2574%" y="693" width="1.8556%" height="15" fill="rgb(225,32,20)" fg:x="405380525162" fg:w="19161343915"/><text x="39.5074%" y="703.50">&lt;..</text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (19,158,259,206 samples, 1.86%)</title><rect x="39.2577%" y="677" width="1.8553%" height="15" fill="rgb(215,141,46)" fg:x="405383609871" fg:w="19158259206"/><text x="39.5077%" y="687.50">s..</text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (19,155,172,497 samples, 1.86%)</title><rect x="39.2580%" y="661" width="1.8550%" height="15" fill="rgb(250,160,47)" fg:x="405386696580" fg:w="19155172497"/><text x="39.5080%" y="671.50">&lt;..</text></g><g><title>std::sys::pal::unix::fs::File::read_at (19,155,172,497 samples, 1.86%)</title><rect x="39.2580%" y="645" width="1.8550%" height="15" fill="rgb(216,222,40)" fg:x="405386696580" fg:w="19155172497"/><text x="39.5080%" y="655.50">s..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_at (19,155,172,497 samples, 1.86%)</title><rect x="39.2580%" y="629" width="1.8550%" height="15" fill="rgb(234,217,39)" fg:x="405386696580" fg:w="19155172497"/><text x="39.5080%" y="639.50">s..</text></g><g><title>__libc_pread64 (19,155,172,497 samples, 1.86%)</title><rect x="39.2580%" y="613" width="1.8550%" height="15" fill="rgb(207,178,40)" fg:x="405386696580" fg:w="19155172497"/><text x="39.5080%" y="623.50">_..</text></g><g><title>__libc_pread64 (19,155,172,497 samples, 1.86%)</title><rect x="39.2580%" y="597" width="1.8550%" height="15" fill="rgb(221,136,13)" fg:x="405386696580" fg:w="19155172497"/><text x="39.5080%" y="607.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (19,133,583,775 samples, 1.85%)</title><rect x="39.2601%" y="581" width="1.8529%" height="15" fill="rgb(249,199,10)" fg:x="405408285302" fg:w="19133583775"/><text x="39.5101%" y="591.50">e..</text></g><g><title>do_syscall_64 (19,130,496,959 samples, 1.85%)</title><rect x="39.2604%" y="565" width="1.8526%" height="15" fill="rgb(249,222,13)" fg:x="405411372118" fg:w="19130496959"/><text x="39.5104%" y="575.50">d..</text></g><g><title>charge_memcg (141,960,724 samples, 0.01%)</title><rect x="41.2397%" y="501" width="0.0137%" height="15" fill="rgb(244,185,38)" fg:x="425850267634" fg:w="141960724"/><text x="41.4897%" y="511.50"></text></g><g><title>__mem_cgroup_charge (203,688,416 samples, 0.02%)</title><rect x="41.2376%" y="517" width="0.0197%" height="15" fill="rgb(236,202,9)" fg:x="425828664413" fg:w="203688416"/><text x="41.4876%" y="527.50"></text></g><g><title>_raw_spin_lock (419,751,371 samples, 0.04%)</title><rect x="41.2597%" y="517" width="0.0406%" height="15" fill="rgb(250,229,37)" fg:x="426057038058" fg:w="419751371"/><text x="41.5097%" y="527.50"></text></g><g><title>clear_huge_page (4,264,984,332 samples, 0.41%)</title><rect x="41.3078%" y="501" width="0.4130%" height="15" fill="rgb(206,174,23)" fg:x="426553927748" fg:w="4264984332"/><text x="41.5578%" y="511.50"></text></g><g><title>clear_page_erms (3,965,630,518 samples, 0.38%)</title><rect x="41.3368%" y="485" width="0.3840%" height="15" fill="rgb(211,33,43)" fg:x="426853281562" fg:w="3965630518"/><text x="41.5868%" y="495.50"></text></g><g><title>clear_page_erms (6,814,359,199 samples, 0.66%)</title><rect x="41.7678%" y="437" width="0.6599%" height="15" fill="rgb(245,58,50)" fg:x="431303447341" fg:w="6814359199"/><text x="42.0178%" y="447.50"></text></g><g><title>do_huge_pmd_anonymous_page (11,742,869,740 samples, 1.14%)</title><rect x="41.3010%" y="517" width="1.1372%" height="15" fill="rgb(244,68,36)" fg:x="426482957088" fg:w="11742869740"/><text x="41.5510%" y="527.50"></text></g><g><title>vma_alloc_folio (7,339,018,019 samples, 0.71%)</title><rect x="41.7274%" y="501" width="0.7107%" height="15" fill="rgb(232,229,15)" fg:x="430886808809" fg:w="7339018019"/><text x="41.9774%" y="511.50"></text></g><g><title>__folio_alloc (7,335,932,779 samples, 0.71%)</title><rect x="41.7277%" y="485" width="0.7104%" height="15" fill="rgb(254,30,23)" fg:x="430889894049" fg:w="7335932779"/><text x="41.9777%" y="495.50"></text></g><g><title>__alloc_pages (7,335,932,779 samples, 0.71%)</title><rect x="41.7277%" y="469" width="0.7104%" height="15" fill="rgb(235,160,14)" fg:x="430889894049" fg:w="7335932779"/><text x="41.9777%" y="479.50"></text></g><g><title>get_page_from_freelist (7,329,760,791 samples, 0.71%)</title><rect x="41.7283%" y="453" width="0.7098%" height="15" fill="rgb(212,155,44)" fg:x="430896066037" fg:w="7329760791"/><text x="41.9783%" y="463.50"></text></g><g><title>rmqueue_bulk (108,020,288 samples, 0.01%)</title><rect x="42.4277%" y="437" width="0.0105%" height="15" fill="rgb(226,2,50)" fg:x="438117806540" fg:w="108020288"/><text x="42.6777%" y="447.50"></text></g><g><title>folio_add_lru (182,063,434 samples, 0.02%)</title><rect x="42.4381%" y="517" width="0.0176%" height="15" fill="rgb(234,177,6)" fg:x="438225826828" fg:w="182063434"/><text x="42.6881%" y="527.50"></text></g><g><title>folio_batch_move_lru (160,456,558 samples, 0.02%)</title><rect x="42.4402%" y="501" width="0.0155%" height="15" fill="rgb(217,24,9)" fg:x="438247433704" fg:w="160456558"/><text x="42.6902%" y="511.50"></text></g><g><title>get_page_from_freelist (191,339,321 samples, 0.02%)</title><rect x="42.4770%" y="469" width="0.0185%" height="15" fill="rgb(220,13,46)" fg:x="438626992226" fg:w="191339321"/><text x="42.7270%" y="479.50"></text></g><g><title>__folio_alloc (259,235,426 samples, 0.03%)</title><rect x="42.4707%" y="501" width="0.0251%" height="15" fill="rgb(239,221,27)" fg:x="438562183810" fg:w="259235426"/><text x="42.7207%" y="511.50"></text></g><g><title>__alloc_pages (256,148,790 samples, 0.02%)</title><rect x="42.4710%" y="485" width="0.0248%" height="15" fill="rgb(222,198,25)" fg:x="438565270446" fg:w="256148790"/><text x="42.7210%" y="495.50"></text></g><g><title>__handle_mm_fault (13,233,474,843 samples, 1.28%)</title><rect x="41.2161%" y="533" width="1.2815%" height="15" fill="rgb(211,99,13)" fg:x="425606462294" fg:w="13233474843"/><text x="41.4661%" y="543.50"></text></g><g><title>vma_alloc_folio (299,357,049 samples, 0.03%)</title><rect x="42.4686%" y="517" width="0.0290%" height="15" fill="rgb(232,111,31)" fg:x="438540580088" fg:w="299357049"/><text x="42.7186%" y="527.50"></text></g><g><title>handle_mm_fault (13,326,053,793 samples, 1.29%)</title><rect x="41.2119%" y="549" width="1.2905%" height="15" fill="rgb(245,82,37)" fg:x="425563256461" fg:w="13326053793"/><text x="41.4619%" y="559.50"></text></g><g><title>lock_mm_and_find_vma (141,960,956 samples, 0.01%)</title><rect x="42.5024%" y="549" width="0.0137%" height="15" fill="rgb(227,149,46)" fg:x="438889310254" fg:w="141960956"/><text x="42.7524%" y="559.50"></text></g><g><title>do_user_addr_fault (13,560,602,691 samples, 1.31%)</title><rect x="41.2053%" y="565" width="1.3132%" height="15" fill="rgb(218,36,50)" fg:x="425495356766" fg:w="13560602691"/><text x="41.4553%" y="575.50"></text></g><g><title>exc_page_fault (13,569,861,628 samples, 1.31%)</title><rect x="41.2047%" y="581" width="1.3141%" height="15" fill="rgb(226,80,48)" fg:x="425489183677" fg:w="13569861628"/><text x="41.4547%" y="591.50"></text></g><g><title>asm_exc_page_fault (13,637,753,828 samples, 1.32%)</title><rect x="41.2017%" y="597" width="1.3207%" height="15" fill="rgb(238,224,15)" fg:x="425458321253" fg:w="13637753828"/><text x="41.4517%" y="607.50"></text></g><g><title>core::intrinsics::write_bytes (14,992,441,997 samples, 1.45%)</title><rect x="41.1205%" y="629" width="1.4519%" height="15" fill="rgb(241,136,10)" fg:x="424619001862" fg:w="14992441997"/><text x="41.3705%" y="639.50"></text></g><g><title>__memset_avx512_unaligned_erms (14,992,441,997 samples, 1.45%)</title><rect x="41.1205%" y="613" width="1.4519%" height="15" fill="rgb(208,32,45)" fg:x="424619001862" fg:w="14992441997"/><text x="41.3705%" y="623.50"></text></g><g><title>error_entry (496,847,499 samples, 0.05%)</title><rect x="42.5242%" y="597" width="0.0481%" height="15" fill="rgb(207,135,9)" fg:x="439114596360" fg:w="496847499"/><text x="42.7742%" y="607.50"></text></g><g><title>sync_regs (462,906,030 samples, 0.04%)</title><rect x="42.5275%" y="581" width="0.0448%" height="15" fill="rgb(206,86,44)" fg:x="439148537829" fg:w="462906030"/><text x="42.7775%" y="591.50"></text></g><g><title>perf_event_mmap (141,953,820 samples, 0.01%)</title><rect x="42.5882%" y="389" width="0.0137%" height="15" fill="rgb(245,177,15)" fg:x="439775009403" fg:w="141953820"/><text x="42.8382%" y="399.50"></text></g><g><title>perf_iterate_sb (141,953,820 samples, 0.01%)</title><rect x="42.5882%" y="373" width="0.0137%" height="15" fill="rgb(206,64,50)" fg:x="439775009403" fg:w="141953820"/><text x="42.8382%" y="383.50"></text></g><g><title>perf_iterate_ctx (141,953,820 samples, 0.01%)</title><rect x="42.5882%" y="357" width="0.0137%" height="15" fill="rgb(234,36,40)" fg:x="439775009403" fg:w="141953820"/><text x="42.8382%" y="367.50"></text></g><g><title>do_brk_flags (157,382,751 samples, 0.02%)</title><rect x="42.5870%" y="405" width="0.0152%" height="15" fill="rgb(213,64,8)" fg:x="439762666333" fg:w="157382751"/><text x="42.8370%" y="415.50"></text></g><g><title>__glibc_morecore (166,640,688 samples, 0.02%)</title><rect x="42.5864%" y="501" width="0.0161%" height="15" fill="rgb(210,75,36)" fg:x="439756493143" fg:w="166640688"/><text x="42.8364%" y="511.50"></text></g><g><title>__GI___sbrk (166,640,688 samples, 0.02%)</title><rect x="42.5864%" y="485" width="0.0161%" height="15" fill="rgb(229,88,21)" fg:x="439756493143" fg:w="166640688"/><text x="42.8364%" y="495.50"></text></g><g><title>__brk (166,640,688 samples, 0.02%)</title><rect x="42.5864%" y="469" width="0.0161%" height="15" fill="rgb(252,204,47)" fg:x="439756493143" fg:w="166640688"/><text x="42.8364%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (163,554,439 samples, 0.02%)</title><rect x="42.5867%" y="453" width="0.0158%" height="15" fill="rgb(208,77,27)" fg:x="439759579392" fg:w="163554439"/><text x="42.8367%" y="463.50"></text></g><g><title>do_syscall_64 (163,554,439 samples, 0.02%)</title><rect x="42.5867%" y="437" width="0.0158%" height="15" fill="rgb(221,76,26)" fg:x="439759579392" fg:w="163554439"/><text x="42.8367%" y="447.50"></text></g><g><title>__do_sys_brk (163,554,439 samples, 0.02%)</title><rect x="42.5867%" y="421" width="0.0158%" height="15" fill="rgb(225,139,18)" fg:x="439759579392" fg:w="163554439"/><text x="42.8367%" y="431.50"></text></g><g><title>arrow_buffer::buffer::mutable::MutableBuffer::from_len_zeroed (15,368,946,180 samples, 1.49%)</title><rect x="41.1202%" y="693" width="1.4883%" height="15" fill="rgb(230,137,11)" fg:x="424615915809" fg:w="15368946180"/><text x="41.3702%" y="703.50"></text></g><g><title>alloc::alloc::alloc_zeroed (15,368,946,180 samples, 1.49%)</title><rect x="41.1202%" y="677" width="1.4883%" height="15" fill="rgb(212,28,1)" fg:x="424615915809" fg:w="15368946180"/><text x="41.3702%" y="687.50"></text></g><g><title>__rdl_alloc_zeroed (15,365,860,127 samples, 1.49%)</title><rect x="41.1205%" y="661" width="1.4880%" height="15" fill="rgb(248,164,17)" fg:x="424619001862" fg:w="15365860127"/><text x="41.3705%" y="671.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (15,365,860,127 samples, 1.49%)</title><rect x="41.1205%" y="645" width="1.4880%" height="15" fill="rgb(222,171,42)" fg:x="424619001862" fg:w="15365860127"/><text x="41.3705%" y="655.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (373,418,130 samples, 0.04%)</title><rect x="42.5723%" y="629" width="0.0362%" height="15" fill="rgb(243,84,45)" fg:x="439611443859" fg:w="373418130"/><text x="42.8223%" y="639.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (373,418,130 samples, 0.04%)</title><rect x="42.5723%" y="613" width="0.0362%" height="15" fill="rgb(252,49,23)" fg:x="439611443859" fg:w="373418130"/><text x="42.8223%" y="623.50"></text></g><g><title>__posix_memalign (373,418,130 samples, 0.04%)</title><rect x="42.5723%" y="597" width="0.0362%" height="15" fill="rgb(215,19,7)" fg:x="439611443859" fg:w="373418130"/><text x="42.8223%" y="607.50"></text></g><g><title>__posix_memalign (373,418,130 samples, 0.04%)</title><rect x="42.5723%" y="581" width="0.0362%" height="15" fill="rgb(238,81,41)" fg:x="439611443859" fg:w="373418130"/><text x="42.8223%" y="591.50"></text></g><g><title>_mid_memalign (367,243,403 samples, 0.04%)</title><rect x="42.5729%" y="565" width="0.0356%" height="15" fill="rgb(210,199,37)" fg:x="439617618586" fg:w="367243403"/><text x="42.8229%" y="575.50"></text></g><g><title>_int_memalign (367,243,403 samples, 0.04%)</title><rect x="42.5729%" y="549" width="0.0356%" height="15" fill="rgb(244,192,49)" fg:x="439617618586" fg:w="367243403"/><text x="42.8229%" y="559.50"></text></g><g><title>_int_malloc (367,243,403 samples, 0.04%)</title><rect x="42.5729%" y="533" width="0.0356%" height="15" fill="rgb(226,211,11)" fg:x="439617618586" fg:w="367243403"/><text x="42.8229%" y="543.50"></text></g><g><title>sysmalloc (234,539,088 samples, 0.02%)</title><rect x="42.5858%" y="517" width="0.0227%" height="15" fill="rgb(236,162,54)" fg:x="439750322901" fg:w="234539088"/><text x="42.8358%" y="527.50"></text></g><g><title>__mem_cgroup_uncharge_list (148,024,145 samples, 0.01%)</title><rect x="42.6700%" y="453" width="0.0143%" height="15" fill="rgb(220,229,9)" fg:x="440620153652" fg:w="148024145"/><text x="42.9200%" y="463.50"></text></g><g><title>uncharge_folio (120,271,688 samples, 0.01%)</title><rect x="42.6727%" y="437" width="0.0116%" height="15" fill="rgb(250,87,22)" fg:x="440647906109" fg:w="120271688"/><text x="42.9227%" y="447.50"></text></g><g><title>free_pcp_prepare (206,623,722 samples, 0.02%)</title><rect x="42.7050%" y="437" width="0.0200%" height="15" fill="rgb(239,43,17)" fg:x="440980950170" fg:w="206623722"/><text x="42.9550%" y="447.50"></text></g><g><title>free_unref_page (329,988,068 samples, 0.03%)</title><rect x="42.7032%" y="453" width="0.0320%" height="15" fill="rgb(231,177,25)" fg:x="440962439897" fg:w="329988068"/><text x="42.9532%" y="463.50"></text></g><g><title>free_pcppages_bulk (104,854,073 samples, 0.01%)</title><rect x="42.7250%" y="437" width="0.0102%" height="15" fill="rgb(219,179,1)" fg:x="441187573892" fg:w="104854073"/><text x="42.9750%" y="447.50"></text></g><g><title>__free_one_page (194,294,786 samples, 0.02%)</title><rect x="42.7641%" y="421" width="0.0188%" height="15" fill="rgb(238,219,53)" fg:x="441591560361" fg:w="194294786"/><text x="43.0141%" y="431.50"></text></g><g><title>free_pcppages_bulk (246,723,237 samples, 0.02%)</title><rect x="42.7599%" y="437" width="0.0239%" height="15" fill="rgb(232,167,36)" fg:x="441548384772" fg:w="246723237"/><text x="43.0099%" y="447.50"></text></g><g><title>free_unref_page_list (687,722,899 samples, 0.07%)</title><rect x="42.7351%" y="453" width="0.0666%" height="15" fill="rgb(244,19,51)" fg:x="441292427965" fg:w="687722899"/><text x="42.9851%" y="463.50"></text></g><g><title>free_unref_page_commit (185,042,855 samples, 0.02%)</title><rect x="42.7838%" y="437" width="0.0179%" height="15" fill="rgb(224,6,22)" fg:x="441795108009" fg:w="185042855"/><text x="43.0338%" y="447.50"></text></g><g><title>tlb_finish_mmu (1,911,998,513 samples, 0.19%)</title><rect x="42.6228%" y="501" width="0.1852%" height="15" fill="rgb(224,145,5)" fg:x="440132888742" fg:w="1911998513"/><text x="42.8728%" y="511.50"></text></g><g><title>tlb_batch_pages_flush (1,911,998,513 samples, 0.19%)</title><rect x="42.6228%" y="485" width="0.1852%" height="15" fill="rgb(234,130,49)" fg:x="440132888742" fg:w="1911998513"/><text x="42.8728%" y="495.50"></text></g><g><title>release_pages (1,862,657,431 samples, 0.18%)</title><rect x="42.6276%" y="469" width="0.1804%" height="15" fill="rgb(254,6,2)" fg:x="440182229824" fg:w="1862657431"/><text x="42.8776%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (132,601,102 samples, 0.01%)</title><rect x="42.8573%" y="453" width="0.0128%" height="15" fill="rgb(208,96,46)" fg:x="442553729846" fg:w="132601102"/><text x="43.1073%" y="463.50"></text></g><g><title>page_remove_rmap (453,331,697 samples, 0.04%)</title><rect x="42.8450%" y="469" width="0.0439%" height="15" fill="rgb(239,3,39)" fg:x="442427287565" fg:w="453331697"/><text x="43.0950%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_buffer::buffer::mutable::MutableBuffer&gt; (3,028,343,951 samples, 0.29%)</title><rect x="42.6091%" y="693" width="0.2933%" height="15" fill="rgb(233,210,1)" fg:x="439991030388" fg:w="3028343951"/><text x="42.8591%" y="703.50"></text></g><g><title>__GI___libc_free (3,028,343,951 samples, 0.29%)</title><rect x="42.6091%" y="677" width="0.2933%" height="15" fill="rgb(244,137,37)" fg:x="439991030388" fg:w="3028343951"/><text x="42.8591%" y="687.50"></text></g><g><title>_int_free (3,028,343,951 samples, 0.29%)</title><rect x="42.6091%" y="661" width="0.2933%" height="15" fill="rgb(240,136,2)" fg:x="439991030388" fg:w="3028343951"/><text x="42.8591%" y="671.50"></text></g><g><title>systrim (3,025,259,297 samples, 0.29%)</title><rect x="42.6094%" y="645" width="0.2930%" height="15" fill="rgb(239,18,37)" fg:x="439994115042" fg:w="3025259297"/><text x="42.8594%" y="655.50"></text></g><g><title>__glibc_morecore (3,019,091,646 samples, 0.29%)</title><rect x="42.6100%" y="629" width="0.2924%" height="15" fill="rgb(218,185,22)" fg:x="440000282693" fg:w="3019091646"/><text x="42.8600%" y="639.50"></text></g><g><title>__GI___sbrk (3,019,091,646 samples, 0.29%)</title><rect x="42.6100%" y="613" width="0.2924%" height="15" fill="rgb(225,218,4)" fg:x="440000282693" fg:w="3019091646"/><text x="42.8600%" y="623.50"></text></g><g><title>__brk (3,019,091,646 samples, 0.29%)</title><rect x="42.6100%" y="597" width="0.2924%" height="15" fill="rgb(230,182,32)" fg:x="440000282693" fg:w="3019091646"/><text x="42.8600%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,012,923,050 samples, 0.29%)</title><rect x="42.6106%" y="581" width="0.2918%" height="15" fill="rgb(242,56,43)" fg:x="440006451289" fg:w="3012923050"/><text x="42.8606%" y="591.50"></text></g><g><title>do_syscall_64 (3,012,923,050 samples, 0.29%)</title><rect x="42.6106%" y="565" width="0.2918%" height="15" fill="rgb(233,99,24)" fg:x="440006451289" fg:w="3012923050"/><text x="42.8606%" y="575.50"></text></g><g><title>__do_sys_brk (3,012,923,050 samples, 0.29%)</title><rect x="42.6106%" y="549" width="0.2918%" height="15" fill="rgb(234,209,42)" fg:x="440006451289" fg:w="3012923050"/><text x="42.8606%" y="559.50"></text></g><g><title>do_mas_align_munmap (3,009,839,837 samples, 0.29%)</title><rect x="42.6109%" y="533" width="0.2915%" height="15" fill="rgb(227,7,12)" fg:x="440009534502" fg:w="3009839837"/><text x="42.8609%" y="543.50"></text></g><g><title>unmap_region (2,923,477,535 samples, 0.28%)</title><rect x="42.6192%" y="517" width="0.2831%" height="15" fill="rgb(245,203,43)" fg:x="440095896804" fg:w="2923477535"/><text x="42.8692%" y="527.50"></text></g><g><title>unmap_vmas (974,487,084 samples, 0.09%)</title><rect x="42.8080%" y="501" width="0.0944%" height="15" fill="rgb(238,205,33)" fg:x="442044887255" fg:w="974487084"/><text x="43.0580%" y="511.50"></text></g><g><title>unmap_page_range (974,487,084 samples, 0.09%)</title><rect x="42.8080%" y="485" width="0.0944%" height="15" fill="rgb(231,56,7)" fg:x="442044887255" fg:w="974487084"/><text x="43.0580%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (921,443,641 samples, 0.09%)</title><rect x="42.9042%" y="517" width="0.0892%" height="15" fill="rgb(244,186,29)" fg:x="443037880818" fg:w="921443641"/><text x="43.1542%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (921,443,641 samples, 0.09%)</title><rect x="42.9042%" y="501" width="0.0892%" height="15" fill="rgb(234,111,31)" fg:x="443037880818" fg:w="921443641"/><text x="43.1542%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (921,443,641 samples, 0.09%)</title><rect x="42.9042%" y="485" width="0.0892%" height="15" fill="rgb(241,149,10)" fg:x="443037880818" fg:w="921443641"/><text x="43.1542%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10,634,546,316 samples, 1.03%)</title><rect x="43.1519%" y="485" width="1.0299%" height="15" fill="rgb(249,206,44)" fg:x="445596280600" fg:w="10634546316"/><text x="43.4019%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (379,225,051 samples, 0.04%)</title><rect x="44.5343%" y="437" width="0.0367%" height="15" fill="rgb(251,153,30)" fg:x="459871174942" fg:w="379225051"/><text x="44.7843%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (379,225,051 samples, 0.04%)</title><rect x="44.5343%" y="421" width="0.0367%" height="15" fill="rgb(239,152,38)" fg:x="459871174942" fg:w="379225051"/><text x="44.7843%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (379,225,051 samples, 0.04%)</title><rect x="44.5343%" y="405" width="0.0367%" height="15" fill="rgb(249,139,47)" fg:x="459871174942" fg:w="379225051"/><text x="44.7843%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (262,108,764 samples, 0.03%)</title><rect x="44.5710%" y="437" width="0.0254%" height="15" fill="rgb(244,64,35)" fg:x="460250399993" fg:w="262108764"/><text x="44.8210%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (138,562,465 samples, 0.01%)</title><rect x="44.5985%" y="389" width="0.0134%" height="15" fill="rgb(216,46,15)" fg:x="460534058941" fg:w="138562465"/><text x="44.8485%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::step_by (545,455,626 samples, 0.05%)</title><rect x="44.5985%" y="437" width="0.0528%" height="15" fill="rgb(250,74,19)" fg:x="460534058941" fg:w="545455626"/><text x="44.8485%" y="447.50"></text></g><g><title>core::iter::adapters::step_by::StepBy&lt;I&gt;::new (545,455,626 samples, 0.05%)</title><rect x="44.5985%" y="421" width="0.0528%" height="15" fill="rgb(249,42,33)" fg:x="460534058941" fg:w="545455626"/><text x="44.8485%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::iter::adapters::step_by::SpecRangeSetup&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::setup (545,455,626 samples, 0.05%)</title><rect x="44.5985%" y="405" width="0.0528%" height="15" fill="rgb(242,149,17)" fg:x="460534058941" fg:w="545455626"/><text x="44.8485%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::div_ceil (406,893,161 samples, 0.04%)</title><rect x="44.6119%" y="389" width="0.0394%" height="15" fill="rgb(244,29,21)" fg:x="460672621406" fg:w="406893161"/><text x="44.8619%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (462,257,528 samples, 0.04%)</title><rect x="44.7274%" y="421" width="0.0448%" height="15" fill="rgb(220,130,37)" fg:x="461865620248" fg:w="462257528"/><text x="44.9774%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_mul (804,544,131 samples, 0.08%)</title><rect x="44.7722%" y="421" width="0.0779%" height="15" fill="rgb(211,67,2)" fg:x="462327877776" fg:w="804544131"/><text x="45.0222%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (804,544,131 samples, 0.08%)</title><rect x="44.7722%" y="405" width="0.0779%" height="15" fill="rgb(235,68,52)" fg:x="462327877776" fg:w="804544131"/><text x="45.0222%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (804,544,131 samples, 0.08%)</title><rect x="44.7722%" y="389" width="0.0779%" height="15" fill="rgb(246,142,3)" fg:x="462327877776" fg:w="804544131"/><text x="45.0222%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (363,915,978 samples, 0.04%)</title><rect x="44.9081%" y="389" width="0.0352%" height="15" fill="rgb(241,25,7)" fg:x="463730599638" fg:w="363915978"/><text x="45.1581%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (2,379,917,386 samples, 0.23%)</title><rect x="44.8501%" y="421" width="0.2305%" height="15" fill="rgb(242,119,39)" fg:x="463132421907" fg:w="2379917386"/><text x="45.1001%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,781,739,655 samples, 0.17%)</title><rect x="44.9081%" y="405" width="0.1725%" height="15" fill="rgb(241,98,45)" fg:x="463730599638" fg:w="1781739655"/><text x="45.1581%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,417,823,677 samples, 0.14%)</title><rect x="44.9433%" y="389" width="0.1373%" height="15" fill="rgb(254,28,30)" fg:x="464094515616" fg:w="1417823677"/><text x="45.1933%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (428,453,722 samples, 0.04%)</title><rect x="45.0391%" y="373" width="0.0415%" height="15" fill="rgb(241,142,54)" fg:x="465083885571" fg:w="428453722"/><text x="45.2891%" y="383.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (6,683,065,981 samples, 0.65%)</title><rect x="44.4707%" y="453" width="0.6472%" height="15" fill="rgb(222,85,15)" fg:x="459214534444" fg:w="6683065981"/><text x="44.7207%" y="463.50"></text></g><g><title>flatbuffers::verifier::verify_vector_range (4,818,085,858 samples, 0.47%)</title><rect x="44.6513%" y="437" width="0.4666%" height="15" fill="rgb(210,85,47)" fg:x="461079514567" fg:w="4818085858"/><text x="44.9013%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (385,261,132 samples, 0.04%)</title><rect x="45.0806%" y="421" width="0.0373%" height="15" fill="rgb(224,206,25)" fg:x="465512339293" fg:w="385261132"/><text x="45.3306%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (400,724,184 samples, 0.04%)</title><rect x="45.1179%" y="453" width="0.0388%" height="15" fill="rgb(243,201,19)" fg:x="465897600425" fg:w="400724184"/><text x="45.3679%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (675,080,721 samples, 0.07%)</title><rect x="45.4245%" y="421" width="0.0654%" height="15" fill="rgb(236,59,4)" fg:x="469063721802" fg:w="675080721"/><text x="45.6745%" y="431.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (12,962,735,517 samples, 1.26%)</title><rect x="44.4176%" y="469" width="1.2553%" height="15" fill="rgb(254,179,45)" fg:x="458665905780" fg:w="12962735517"/><text x="44.6676%" y="479.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (5,330,316,688 samples, 0.52%)</title><rect x="45.1567%" y="453" width="0.5162%" height="15" fill="rgb(226,14,10)" fg:x="466298324609" fg:w="5330316688"/><text x="45.4067%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,564,919,495 samples, 0.25%)</title><rect x="45.4245%" y="437" width="0.2484%" height="15" fill="rgb(244,27,41)" fg:x="469063721802" fg:w="2564919495"/><text x="45.6745%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,889,838,774 samples, 0.18%)</title><rect x="45.4899%" y="421" width="0.1830%" height="15" fill="rgb(235,35,32)" fg:x="469738802523" fg:w="1889838774"/><text x="45.7399%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (746,276,066 samples, 0.07%)</title><rect x="45.6006%" y="405" width="0.0723%" height="15" fill="rgb(218,68,31)" fg:x="470882365231" fg:w="746276066"/><text x="45.8506%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (2,179,522,208 samples, 0.21%)</title><rect x="46.0323%" y="453" width="0.2111%" height="15" fill="rgb(207,120,37)" fg:x="475340097875" fg:w="2179522208"/><text x="46.2823%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (832,320,583 samples, 0.08%)</title><rect x="46.5432%" y="421" width="0.0806%" height="15" fill="rgb(227,98,0)" fg:x="480615070697" fg:w="832320583"/><text x="46.7932%" y="431.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (18,391,743,287 samples, 1.78%)</title><rect x="45.6744%" y="469" width="1.7811%" height="15" fill="rgb(207,7,3)" fg:x="471644071958" fg:w="18391743287"/><text x="45.9244%" y="479.50">f..</text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (12,516,195,162 samples, 1.21%)</title><rect x="46.2434%" y="453" width="1.2121%" height="15" fill="rgb(206,98,19)" fg:x="477519620083" fg:w="12516195162"/><text x="46.4934%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (9,420,744,548 samples, 0.91%)</title><rect x="46.5432%" y="437" width="0.9123%" height="15" fill="rgb(217,5,26)" fg:x="480615070697" fg:w="9420744548"/><text x="46.7932%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (8,588,423,965 samples, 0.83%)</title><rect x="46.6238%" y="421" width="0.8317%" height="15" fill="rgb(235,190,38)" fg:x="481447391280" fg:w="8588423965"/><text x="46.8738%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (703,148,693 samples, 0.07%)</title><rect x="47.3874%" y="405" width="0.0681%" height="15" fill="rgb(247,86,24)" fg:x="489332666552" fg:w="703148693"/><text x="47.6374%" y="415.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (36,196,853,249 samples, 3.51%)</title><rect x="44.1821%" y="485" width="3.5053%" height="15" fill="rgb(205,101,16)" fg:x="456233912164" fg:w="36196853249"/><text x="44.4321%" y="495.50">fla..</text></g><g><title>flatbuffers::verifier::trace_field (2,394,950,168 samples, 0.23%)</title><rect x="47.4555%" y="469" width="0.2319%" height="15" fill="rgb(246,168,33)" fg:x="490035815245" fg:w="2394950168"/><text x="47.7055%" y="479.50"></text></g><g><title>flatbuffers::verifier::append_trace (1,577,989,520 samples, 0.15%)</title><rect x="47.5346%" y="453" width="0.1528%" height="15" fill="rgb(231,114,1)" fg:x="490852775893" fg:w="1577989520"/><text x="47.7846%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (869,261,840 samples, 0.08%)</title><rect x="47.6032%" y="437" width="0.0842%" height="15" fill="rgb(207,184,53)" fg:x="491561503573" fg:w="869261840"/><text x="47.8532%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (791,979,178 samples, 0.08%)</title><rect x="47.9909%" y="469" width="0.0767%" height="15" fill="rgb(224,95,51)" fg:x="495564996487" fg:w="791979178"/><text x="48.2409%" y="479.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_le_bytes (1,704,873,122 samples, 0.17%)</title><rect x="48.3646%" y="453" width="0.1651%" height="15" fill="rgb(212,188,45)" fg:x="499423637709" fg:w="1704873122"/><text x="48.6146%" y="463.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_ne_bytes (1,704,873,122 samples, 0.17%)</title><rect x="48.3646%" y="437" width="0.1651%" height="15" fill="rgb(223,154,38)" fg:x="499423637709" fg:w="1704873122"/><text x="48.6146%" y="447.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unsigned_abs (776,699,480 samples, 0.08%)</title><rect x="48.5297%" y="453" width="0.0752%" height="15" fill="rgb(251,22,52)" fg:x="501128510831" fg:w="776699480"/><text x="48.7797%" y="463.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_abs (776,699,480 samples, 0.08%)</title><rect x="48.5297%" y="437" width="0.0752%" height="15" fill="rgb(229,209,22)" fg:x="501128510831" fg:w="776699480"/><text x="48.7797%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (807,525,883 samples, 0.08%)</title><rect x="48.6049%" y="437" width="0.0782%" height="15" fill="rgb(234,138,34)" fg:x="501905210311" fg:w="807525883"/><text x="48.8549%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (9,551,751,559 samples, 0.92%)</title><rect x="48.0676%" y="469" width="0.9250%" height="15" fill="rgb(212,95,11)" fg:x="496356975665" fg:w="9551751559"/><text x="48.3176%" y="479.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (4,003,516,913 samples, 0.39%)</title><rect x="48.6049%" y="453" width="0.3877%" height="15" fill="rgb(240,179,47)" fg:x="501905210311" fg:w="4003516913"/><text x="48.8549%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (3,195,991,030 samples, 0.31%)</title><rect x="48.6831%" y="437" width="0.3095%" height="15" fill="rgb(240,163,11)" fg:x="502712736194" fg:w="3195991030"/><text x="48.9331%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (800,877,675 samples, 0.08%)</title><rect x="48.9151%" y="421" width="0.0776%" height="15" fill="rgb(236,37,12)" fg:x="505107849549" fg:w="800877675"/><text x="49.1651%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (3,239,509,608 samples, 0.31%)</title><rect x="48.9926%" y="469" width="0.3137%" height="15" fill="rgb(232,164,16)" fg:x="505908727224" fg:w="3239509608"/><text x="49.2426%" y="479.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,419,954,684 samples, 0.23%)</title><rect x="49.0720%" y="453" width="0.2344%" height="15" fill="rgb(244,205,15)" fg:x="506728282148" fg:w="2419954684"/><text x="49.3220%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (2,416,897,891 samples, 0.23%)</title><rect x="49.0723%" y="437" width="0.2341%" height="15" fill="rgb(223,117,47)" fg:x="506731338941" fg:w="2416897891"/><text x="49.3223%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (878,626,361 samples, 0.09%)</title><rect x="49.2212%" y="421" width="0.0851%" height="15" fill="rgb(244,107,35)" fg:x="508269610471" fg:w="878626361"/><text x="49.4712%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (761,289,004 samples, 0.07%)</title><rect x="49.3063%" y="469" width="0.0737%" height="15" fill="rgb(205,140,8)" fg:x="509148236832" fg:w="761289004"/><text x="49.5563%" y="479.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::LogicalTree as flatbuffers::verifier::Verifiable&gt;::run_verifier (67,500,567,390 samples, 6.54%)</title><rect x="42.9934%" y="501" width="6.5368%" height="15" fill="rgb(228,84,46)" fg:x="443959324459" fg:w="67500567390"/><text x="43.2434%" y="511.50">&lt;fff_form..</text></g><g><title>flatbuffers::verifier::Verifier::visit_table (19,029,126,436 samples, 1.84%)</title><rect x="47.6874%" y="485" width="1.8428%" height="15" fill="rgb(254,188,9)" fg:x="492430765413" fg:w="19029126436"/><text x="47.9374%" y="495.50">f..</text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,550,366,013 samples, 0.15%)</title><rect x="49.3801%" y="469" width="0.1501%" height="15" fill="rgb(206,112,54)" fg:x="509909525836" fg:w="1550366013"/><text x="49.6301%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (767,597,059 samples, 0.07%)</title><rect x="49.5302%" y="501" width="0.0743%" height="15" fill="rgb(216,84,49)" fg:x="511459891849" fg:w="767597059"/><text x="49.7802%" y="511.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (471,357,323 samples, 0.05%)</title><rect x="49.9353%" y="469" width="0.0456%" height="15" fill="rgb(214,194,35)" fg:x="515642760656" fg:w="471357323"/><text x="50.1853%" y="479.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (74,115,563,919 samples, 7.18%)</title><rect x="42.9934%" y="517" width="7.1774%" height="15" fill="rgb(249,28,3)" fg:x="443959324459" fg:w="74115563919"/><text x="43.2434%" y="527.50">&lt;flatbuffe..</text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (5,847,399,470 samples, 0.57%)</title><rect x="49.6045%" y="501" width="0.5663%" height="15" fill="rgb(222,56,52)" fg:x="512227488908" fg:w="5847399470"/><text x="49.8545%" y="511.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,432,127,722 samples, 0.24%)</title><rect x="49.9353%" y="485" width="0.2355%" height="15" fill="rgb(245,217,50)" fg:x="515642760656" fg:w="2432127722"/><text x="50.1853%" y="495.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,960,770,399 samples, 0.19%)</title><rect x="49.9809%" y="469" width="0.1899%" height="15" fill="rgb(213,201,24)" fg:x="516114117979" fg:w="1960770399"/><text x="50.2309%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (514,817,341 samples, 0.05%)</title><rect x="50.1209%" y="453" width="0.0499%" height="15" fill="rgb(248,116,28)" fg:x="517560071037" fg:w="514817341"/><text x="50.3709%" y="463.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (76,196,081,444 samples, 7.38%)</title><rect x="42.9042%" y="549" width="7.3789%" height="15" fill="rgb(219,72,43)" fg:x="443037880818" fg:w="76196081444"/><text x="43.1542%" y="559.50">&lt;flatbuffe..</text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (76,196,081,444 samples, 7.38%)</title><rect x="42.9042%" y="533" width="7.3789%" height="15" fill="rgb(209,138,14)" fg:x="443037880818" fg:w="76196081444"/><text x="43.1542%" y="543.50">&lt;flatbuffe..</text></g><g><title>flatbuffers::verifier::trace_elem (1,159,073,884 samples, 0.11%)</title><rect x="50.1708%" y="517" width="0.1122%" height="15" fill="rgb(222,18,33)" fg:x="518074888378" fg:w="1159073884"/><text x="50.4208%" y="527.50"></text></g><g><title>flatbuffers::verifier::append_trace (1,159,073,884 samples, 0.11%)</title><rect x="50.1708%" y="501" width="0.1122%" height="15" fill="rgb(213,199,7)" fg:x="518074888378" fg:w="1159073884"/><text x="50.4208%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (314,387,974 samples, 0.03%)</title><rect x="50.2526%" y="485" width="0.0304%" height="15" fill="rgb(250,110,10)" fg:x="518919574288" fg:w="314387974"/><text x="50.5026%" y="495.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::LogicalTree as flatbuffers::verifier::Verifiable&gt;::run_verifier (76,199,166,137 samples, 7.38%)</title><rect x="42.9042%" y="581" width="7.3792%" height="15" fill="rgb(248,123,6)" fg:x="443037880818" fg:w="76199166137"/><text x="43.1542%" y="591.50">&lt;fff_forma..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (76,199,166,137 samples, 7.38%)</title><rect x="42.9042%" y="565" width="7.3792%" height="15" fill="rgb(206,91,31)" fg:x="443037880818" fg:w="76199166137"/><text x="43.1542%" y="575.50">flatbuffer..</text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,468,998,852 samples, 0.14%)</title><rect x="50.3560%" y="421" width="0.1423%" height="15" fill="rgb(211,154,13)" fg:x="519987772394" fg:w="1468998852"/><text x="50.6060%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (1,468,998,852 samples, 0.14%)</title><rect x="50.3560%" y="405" width="0.1423%" height="15" fill="rgb(225,148,7)" fg:x="519987772394" fg:w="1468998852"/><text x="50.6060%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,216,641,022 samples, 0.21%)</title><rect x="50.2845%" y="437" width="0.2147%" height="15" fill="rgb(220,160,43)" fg:x="519249387534" fg:w="2216641022"/><text x="50.5345%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,894,693,966 samples, 0.96%)</title><rect x="51.1188%" y="405" width="0.9582%" height="15" fill="rgb(213,52,39)" fg:x="527864554179" fg:w="9894693966"/><text x="51.3688%" y="415.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::finish (838,602,338 samples, 0.08%)</title><rect x="52.0803%" y="405" width="0.0812%" height="15" fill="rgb(243,137,7)" fg:x="537793182096" fg:w="838602338"/><text x="52.3303%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,053,404,451 samples, 0.20%)</title><rect x="52.4691%" y="389" width="0.1989%" height="15" fill="rgb(230,79,13)" fg:x="541807974960" fg:w="2053404451"/><text x="52.7191%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (487,068,965 samples, 0.05%)</title><rect x="52.6680%" y="357" width="0.0472%" height="15" fill="rgb(247,105,23)" fg:x="543861379411" fg:w="487068965"/><text x="52.9180%" y="367.50"></text></g><g><title>&lt;u32 as flatbuffers::verifier::Verifiable&gt;::run_verifier (2,192,425,350 samples, 0.21%)</title><rect x="52.6680%" y="389" width="0.2123%" height="15" fill="rgb(223,179,41)" fg:x="543861379411" fg:w="2192425350"/><text x="52.9180%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,192,425,350 samples, 0.21%)</title><rect x="52.6680%" y="373" width="0.2123%" height="15" fill="rgb(218,9,34)" fg:x="543861379411" fg:w="2192425350"/><text x="52.9180%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,705,356,385 samples, 0.17%)</title><rect x="52.7151%" y="357" width="0.1651%" height="15" fill="rgb(222,106,8)" fg:x="544348448376" fg:w="1705356385"/><text x="52.9651%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (539,688,698 samples, 0.05%)</title><rect x="52.8280%" y="341" width="0.0523%" height="15" fill="rgb(211,220,0)" fg:x="545514116063" fg:w="539688698"/><text x="53.0780%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (425,537,043 samples, 0.04%)</title><rect x="52.8803%" y="357" width="0.0412%" height="15" fill="rgb(229,52,16)" fg:x="546053804761" fg:w="425537043"/><text x="53.1303%" y="367.50"></text></g><g><title>&lt;u64 as flatbuffers::verifier::Verifiable&gt;::run_verifier (2,877,009,349 samples, 0.28%)</title><rect x="52.8803%" y="389" width="0.2786%" height="15" fill="rgb(212,155,18)" fg:x="546053804761" fg:w="2877009349"/><text x="53.1303%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,877,009,349 samples, 0.28%)</title><rect x="52.8803%" y="373" width="0.2786%" height="15" fill="rgb(242,21,14)" fg:x="546053804761" fg:w="2877009349"/><text x="53.1303%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (2,451,472,306 samples, 0.24%)</title><rect x="52.9215%" y="357" width="0.2374%" height="15" fill="rgb(222,19,48)" fg:x="546479341804" fg:w="2451472306"/><text x="53.1715%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (521,046,812 samples, 0.05%)</title><rect x="53.1085%" y="341" width="0.0505%" height="15" fill="rgb(232,45,27)" fg:x="548409767298" fg:w="521046812"/><text x="53.3585%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1,722,351,640 samples, 0.17%)</title><rect x="53.5629%" y="373" width="0.1668%" height="15" fill="rgb(249,103,42)" fg:x="553102928999" fg:w="1722351640"/><text x="53.8129%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (712,401,407 samples, 0.07%)</title><rect x="53.9140%" y="341" width="0.0690%" height="15" fill="rgb(246,81,33)" fg:x="556727897246" fg:w="712401407"/><text x="54.1640%" y="351.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (14,072,047,036 samples, 1.36%)</title><rect x="53.1601%" y="389" width="1.3627%" height="15" fill="rgb(252,33,42)" fg:x="548943158268" fg:w="14072047036"/><text x="53.4101%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (8,189,924,665 samples, 0.79%)</title><rect x="53.7297%" y="373" width="0.7931%" height="15" fill="rgb(209,212,41)" fg:x="554825280639" fg:w="8189924665"/><text x="53.9797%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (6,287,308,058 samples, 0.61%)</title><rect x="53.9140%" y="357" width="0.6089%" height="15" fill="rgb(207,154,6)" fg:x="556727897246" fg:w="6287308058"/><text x="54.1640%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (5,574,906,651 samples, 0.54%)</title><rect x="53.9830%" y="341" width="0.5399%" height="15" fill="rgb(223,64,47)" fg:x="557440298653" fg:w="5574906651"/><text x="54.2330%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (783,162,979 samples, 0.08%)</title><rect x="54.4470%" y="325" width="0.0758%" height="15" fill="rgb(211,161,38)" fg:x="562232042325" fg:w="783162979"/><text x="54.6970%" y="335.50"></text></g><g><title>__irq_exit_rcu (107,993,074 samples, 0.01%)</title><rect x="56.1523%" y="325" width="0.0105%" height="15" fill="rgb(219,138,40)" fg:x="579840991030" fg:w="107993074"/><text x="56.4023%" y="335.50"></text></g><g><title>handle_softirqs (107,993,074 samples, 0.01%)</title><rect x="56.1523%" y="309" width="0.0105%" height="15" fill="rgb(241,228,46)" fg:x="579840991030" fg:w="107993074"/><text x="56.4023%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (135,755,648 samples, 0.01%)</title><rect x="56.1520%" y="357" width="0.0131%" height="15" fill="rgb(223,209,38)" fg:x="579837905096" fg:w="135755648"/><text x="56.4020%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (132,669,714 samples, 0.01%)</title><rect x="56.1523%" y="341" width="0.0128%" height="15" fill="rgb(236,164,45)" fg:x="579840991030" fg:w="132669714"/><text x="56.4023%" y="351.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (43,650,646,199 samples, 4.23%)</title><rect x="52.1615%" y="405" width="4.2272%" height="15" fill="rgb(231,15,5)" fg:x="538631784434" fg:w="43650646199"/><text x="52.4115%" y="415.50">flatb..</text></g><g><title>flatbuffers::verifier::trace_field (19,267,225,329 samples, 1.87%)</title><rect x="54.5229%" y="389" width="1.8659%" height="15" fill="rgb(252,35,15)" fg:x="563015205304" fg:w="19267225329"/><text x="54.7729%" y="399.50">f..</text></g><g><title>flatbuffers::verifier::append_trace (16,895,766,469 samples, 1.64%)</title><rect x="54.7525%" y="373" width="1.6362%" height="15" fill="rgb(248,181,18)" fg:x="565386664164" fg:w="16895766469"/><text x="55.0025%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (2,308,769,889 samples, 0.22%)</title><rect x="56.1651%" y="357" width="0.2236%" height="15" fill="rgb(233,39,42)" fg:x="579973660744" fg:w="2308769889"/><text x="56.4151%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (795,575,267 samples, 0.08%)</title><rect x="56.6872%" y="389" width="0.0770%" height="15" fill="rgb(238,110,33)" fg:x="585364463422" fg:w="795575267"/><text x="56.9372%" y="399.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_le_bytes (1,366,059,944 samples, 0.13%)</title><rect x="57.0617%" y="373" width="0.1323%" height="15" fill="rgb(233,195,10)" fg:x="589232364089" fg:w="1366059944"/><text x="57.3117%" y="383.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_ne_bytes (1,366,059,944 samples, 0.13%)</title><rect x="57.0617%" y="357" width="0.1323%" height="15" fill="rgb(254,105,3)" fg:x="589232364089" fg:w="1366059944"/><text x="57.3117%" y="367.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unsigned_abs (712,365,997 samples, 0.07%)</title><rect x="57.1940%" y="373" width="0.0690%" height="15" fill="rgb(221,225,9)" fg:x="590598424033" fg:w="712365997"/><text x="57.4440%" y="383.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_abs (712,365,997 samples, 0.07%)</title><rect x="57.1940%" y="357" width="0.0690%" height="15" fill="rgb(224,227,45)" fg:x="590598424033" fg:w="712365997"/><text x="57.4440%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (808,177,476 samples, 0.08%)</title><rect x="57.2630%" y="357" width="0.0783%" height="15" fill="rgb(229,198,43)" fg:x="591310790030" fg:w="808177476"/><text x="57.5130%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (8,897,986,023 samples, 0.86%)</title><rect x="56.7642%" y="389" width="0.8617%" height="15" fill="rgb(206,209,35)" fg:x="586160038689" fg:w="8897986023"/><text x="57.0142%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (3,747,234,682 samples, 0.36%)</title><rect x="57.2630%" y="373" width="0.3629%" height="15" fill="rgb(245,195,53)" fg:x="591310790030" fg:w="3747234682"/><text x="57.5130%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (2,939,057,206 samples, 0.28%)</title><rect x="57.3413%" y="357" width="0.2846%" height="15" fill="rgb(240,92,26)" fg:x="592118967506" fg:w="2939057206"/><text x="57.5913%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (715,403,611 samples, 0.07%)</title><rect x="57.5566%" y="341" width="0.0693%" height="15" fill="rgb(207,40,23)" fg:x="594342621101" fg:w="715403611"/><text x="57.8066%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (3,021,895,118 samples, 0.29%)</title><rect x="57.6259%" y="389" width="0.2926%" height="15" fill="rgb(223,111,35)" fg:x="595058024712" fg:w="3021895118"/><text x="57.8759%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,229,303,282 samples, 0.22%)</title><rect x="57.7027%" y="373" width="0.2159%" height="15" fill="rgb(229,147,28)" fg:x="595850616548" fg:w="2229303282"/><text x="57.9527%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (2,229,303,282 samples, 0.22%)</title><rect x="57.7027%" y="357" width="0.2159%" height="15" fill="rgb(211,29,28)" fg:x="595850616548" fg:w="2229303282"/><text x="57.9527%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (832,576,901 samples, 0.08%)</title><rect x="57.8379%" y="341" width="0.0806%" height="15" fill="rgb(228,72,33)" fg:x="597247342929" fg:w="832576901"/><text x="58.0879%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (817,186,082 samples, 0.08%)</title><rect x="57.9185%" y="389" width="0.0791%" height="15" fill="rgb(205,214,31)" fg:x="598079919830" fg:w="817186082"/><text x="58.1685%" y="399.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::MetadataSection as flatbuffers::verifier::Verifiable&gt;::run_verifier (78,254,492,192 samples, 7.58%)</title><rect x="50.5756%" y="421" width="7.5782%" height="15" fill="rgb(224,111,15)" fg:x="522255413815" fg:w="78254492192"/><text x="50.8256%" y="431.50">&lt;fff_forma..</text></g><g><title>flatbuffers::verifier::Verifier::visit_table (18,227,475,374 samples, 1.77%)</title><rect x="56.3887%" y="405" width="1.7652%" height="15" fill="rgb(253,21,26)" fg:x="582282430633" fg:w="18227475374"/><text x="56.6387%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,612,800,095 samples, 0.16%)</title><rect x="57.9977%" y="389" width="0.1562%" height="15" fill="rgb(245,139,43)" fg:x="598897105912" fg:w="1612800095"/><text x="58.2477%" y="399.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (86,000,334,893 samples, 8.33%)</title><rect x="50.4992%" y="437" width="8.3283%" height="15" fill="rgb(252,170,7)" fg:x="521466028556" fg:w="86000334893"/><text x="50.7492%" y="447.50">&lt;flatbuffers..</text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (6,956,457,442 samples, 0.67%)</title><rect x="58.1539%" y="421" width="0.6737%" height="15" fill="rgb(231,118,14)" fg:x="600509906007" fg:w="6956457442"/><text x="58.4039%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (3,132,690,701 samples, 0.30%)</title><rect x="58.5242%" y="405" width="0.3034%" height="15" fill="rgb(238,83,0)" fg:x="604333672748" fg:w="3132690701"/><text x="58.7742%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (3,132,690,701 samples, 0.30%)</title><rect x="58.5242%" y="389" width="0.3034%" height="15" fill="rgb(221,39,39)" fg:x="604333672748" fg:w="3132690701"/><text x="58.7742%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (733,905,303 samples, 0.07%)</title><rect x="58.7565%" y="373" width="0.0711%" height="15" fill="rgb(222,119,46)" fg:x="606732458146" fg:w="733905303"/><text x="59.0065%" y="383.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::RowGroups as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,355,918,393 samples, 8.85%)</title><rect x="50.2836%" y="581" width="8.8470%" height="15" fill="rgb(222,165,49)" fg:x="519240133029" fg:w="91355918393"/><text x="50.5336%" y="591.50">&lt;fff_format:..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (91,355,918,393 samples, 8.85%)</title><rect x="50.2836%" y="565" width="8.8470%" height="15" fill="rgb(219,113,52)" fg:x="519240133029" fg:w="91355918393"/><text x="50.5336%" y="575.50">flatbuffers:..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,355,918,393 samples, 8.85%)</title><rect x="50.2836%" y="549" width="8.8470%" height="15" fill="rgb(214,7,15)" fg:x="519240133029" fg:w="91355918393"/><text x="50.5336%" y="559.50">&lt;flatbuffers..</text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,352,832,885 samples, 8.85%)</title><rect x="50.2839%" y="533" width="8.8467%" height="15" fill="rgb(235,32,4)" fg:x="519243218537" fg:w="91352832885"/><text x="50.5339%" y="543.50">&lt;flatbuffers..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,352,832,885 samples, 8.85%)</title><rect x="50.2839%" y="517" width="8.8467%" height="15" fill="rgb(238,90,54)" fg:x="519243218537" fg:w="91352832885"/><text x="50.5339%" y="527.50">&lt;flatbuffers..</text></g><g><title>&lt;fff_format::File::fff::flatbuf::RowGroupMetadata as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,346,663,888 samples, 8.85%)</title><rect x="50.2845%" y="501" width="8.8461%" height="15" fill="rgb(213,208,19)" fg:x="519249387534" fg:w="91346663888"/><text x="50.5345%" y="511.50">&lt;fff_format:..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (91,346,663,888 samples, 8.85%)</title><rect x="50.2845%" y="485" width="8.8461%" height="15" fill="rgb(233,156,4)" fg:x="519249387534" fg:w="91346663888"/><text x="50.5345%" y="495.50">flatbuffers:..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,346,663,888 samples, 8.85%)</title><rect x="50.2845%" y="469" width="8.8461%" height="15" fill="rgb(207,194,5)" fg:x="519249387534" fg:w="91346663888"/><text x="50.5345%" y="479.50">&lt;flatbuffers..</text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (91,346,663,888 samples, 8.85%)</title><rect x="50.2845%" y="453" width="8.8461%" height="15" fill="rgb(206,111,30)" fg:x="519249387534" fg:w="91346663888"/><text x="50.5345%" y="463.50">&lt;flatbuffers..</text></g><g><title>flatbuffers::verifier::trace_elem (3,129,687,973 samples, 0.30%)</title><rect x="58.8275%" y="437" width="0.3031%" height="15" fill="rgb(243,70,54)" fg:x="607466363449" fg:w="3129687973"/><text x="59.0775%" y="447.50"></text></g><g><title>flatbuffers::verifier::append_trace (3,129,687,973 samples, 0.30%)</title><rect x="58.8275%" y="421" width="0.3031%" height="15" fill="rgb(242,28,8)" fg:x="607466363449" fg:w="3129687973"/><text x="59.0775%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (1,480,165,240 samples, 0.14%)</title><rect x="58.9873%" y="405" width="0.1433%" height="15" fill="rgb(219,106,18)" fg:x="609115886182" fg:w="1480165240"/><text x="59.2373%" y="415.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (167,567,426,944 samples, 16.23%)</title><rect x="42.9042%" y="597" width="16.2274%" height="15" fill="rgb(244,222,10)" fg:x="443037880818" fg:w="167567426944"/><text x="43.1542%" y="607.50">&lt;flatbuffers::primitives:..</text></g><g><title>fff_format::File::fff::flatbuf::root_as_footer (167,579,753,609 samples, 16.23%)</title><rect x="42.9039%" y="693" width="16.2286%" height="15" fill="rgb(236,179,52)" fg:x="443034794474" fg:w="167579753609"/><text x="43.1539%" y="703.50">fff_format::File::fff::fl..</text></g><g><title>flatbuffers::get_root::root (167,579,753,609 samples, 16.23%)</title><rect x="42.9039%" y="677" width="16.2286%" height="15" fill="rgb(213,23,39)" fg:x="443034794474" fg:w="167579753609"/><text x="43.1539%" y="687.50">flatbuffers::get_root::ro..</text></g><g><title>flatbuffers::get_root::root_with_opts (167,579,753,609 samples, 16.23%)</title><rect x="42.9039%" y="661" width="16.2286%" height="15" fill="rgb(238,48,10)" fg:x="443034794474" fg:w="167579753609"/><text x="43.1539%" y="671.50">flatbuffers::get_root::ro..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (167,579,753,609 samples, 16.23%)</title><rect x="42.9039%" y="645" width="16.2286%" height="15" fill="rgb(251,196,23)" fg:x="443034794474" fg:w="167579753609"/><text x="43.1539%" y="655.50">&lt;flatbuffers::primitives:..</text></g><g><title>&lt;fff_format::File::fff::flatbuf::Footer as flatbuffers::verifier::Verifiable&gt;::run_verifier (167,579,753,609 samples, 16.23%)</title><rect x="42.9039%" y="629" width="16.2286%" height="15" fill="rgb(250,152,24)" fg:x="443034794474" fg:w="167579753609"/><text x="43.1539%" y="639.50">&lt;fff_format::File::fff::f..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (167,576,667,265 samples, 16.23%)</title><rect x="42.9042%" y="613" width="16.2283%" height="15" fill="rgb(209,150,17)" fg:x="443037880818" fg:w="167576667265"/><text x="43.1542%" y="623.50">flatbuffers::verifier::Ta..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (656,652,662 samples, 0.06%)</title><rect x="59.8539%" y="533" width="0.0636%" height="15" fill="rgb(234,202,34)" fg:x="618064873395" fg:w="656652662"/><text x="60.1039%" y="543.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (810,840,065 samples, 0.08%)</title><rect x="59.8479%" y="613" width="0.0785%" height="15" fill="rgb(253,148,53)" fg:x="618003193962" fg:w="810840065"/><text x="60.0979%" y="623.50"></text></g><g><title>std::hash::random::RandomState::new (810,840,065 samples, 0.08%)</title><rect x="59.8479%" y="597" width="0.0785%" height="15" fill="rgb(218,129,16)" fg:x="618003193962" fg:w="810840065"/><text x="60.0979%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (810,840,065 samples, 0.08%)</title><rect x="59.8479%" y="581" width="0.0785%" height="15" fill="rgb(216,85,19)" fg:x="618003193962" fg:w="810840065"/><text x="60.0979%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (810,840,065 samples, 0.08%)</title><rect x="59.8479%" y="565" width="0.0785%" height="15" fill="rgb(235,228,7)" fg:x="618003193962" fg:w="810840065"/><text x="60.0979%" y="575.50"></text></g><g><title>std::hash::random::RandomState::new::{{closure}} (749,160,632 samples, 0.07%)</title><rect x="59.8539%" y="549" width="0.0725%" height="15" fill="rgb(245,175,0)" fg:x="618064873395" fg:w="749160632"/><text x="60.1039%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1,587,614,076 samples, 0.15%)</title><rect x="59.8479%" y="629" width="0.1537%" height="15" fill="rgb(208,168,36)" fg:x="618003193962" fg:w="1587614076"/><text x="60.0979%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (776,774,011 samples, 0.08%)</title><rect x="59.9265%" y="613" width="0.0752%" height="15" fill="rgb(246,171,24)" fg:x="618814034027" fg:w="776774011"/><text x="60.1765%" y="623.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (746,105,362 samples, 0.07%)</title><rect x="60.4068%" y="549" width="0.0723%" height="15" fill="rgb(215,142,24)" fg:x="623774235054" fg:w="746105362"/><text x="60.6568%" y="559.50"></text></g><g><title>flatbuffers::vtable::VTable::init (746,105,362 samples, 0.07%)</title><rect x="60.4068%" y="533" width="0.0723%" height="15" fill="rgb(250,187,7)" fg:x="623774235054" fg:w="746105362"/><text x="60.6568%" y="543.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (749,191,425 samples, 0.07%)</title><rect x="60.4068%" y="565" width="0.0726%" height="15" fill="rgb(228,66,33)" fg:x="623774235054" fg:w="749191425"/><text x="60.6568%" y="575.50"></text></g><g><title>flatbuffers::table::Table::vtable (891,046,099 samples, 0.09%)</title><rect x="60.3934%" y="581" width="0.0863%" height="15" fill="rgb(234,215,21)" fg:x="623635465603" fg:w="891046099"/><text x="60.6434%" y="591.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::dictionary (3,862,813,872 samples, 0.37%)</title><rect x="60.3023%" y="613" width="0.3741%" height="15" fill="rgb(222,191,20)" fg:x="622695338847" fg:w="3862813872"/><text x="60.5523%" y="623.50"></text></g><g><title>flatbuffers::table::Table::get (3,862,813,872 samples, 0.37%)</title><rect x="60.3023%" y="597" width="0.3741%" height="15" fill="rgb(245,79,54)" fg:x="622695338847" fg:w="3862813872"/><text x="60.5523%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,031,641,017 samples, 0.20%)</title><rect x="60.4797%" y="581" width="0.1967%" height="15" fill="rgb(240,10,37)" fg:x="624526511702" fg:w="2031641017"/><text x="60.7297%" y="591.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (440,813,463 samples, 0.04%)</title><rect x="60.6337%" y="565" width="0.0427%" height="15" fill="rgb(214,192,32)" fg:x="626117339256" fg:w="440813463"/><text x="60.8837%" y="575.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,649,803,264 samples, 0.16%)</title><rect x="60.8302%" y="565" width="0.1598%" height="15" fill="rgb(209,36,54)" fg:x="628146096493" fg:w="1649803264"/><text x="61.0802%" y="575.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar (829,589,537 samples, 0.08%)</title><rect x="60.9096%" y="549" width="0.0803%" height="15" fill="rgb(220,10,11)" fg:x="628966310220" fg:w="829589537"/><text x="61.1596%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (829,589,537 samples, 0.08%)</title><rect x="60.9096%" y="533" width="0.0803%" height="15" fill="rgb(221,106,17)" fg:x="628966310220" fg:w="829589537"/><text x="61.1596%" y="543.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (752,307,479 samples, 0.07%)</title><rect x="60.9920%" y="533" width="0.0729%" height="15" fill="rgb(251,142,44)" fg:x="629817489366" fg:w="752307479"/><text x="61.2420%" y="543.50"></text></g><g><title>flatbuffers::vtable::VTable::init (752,307,479 samples, 0.07%)</title><rect x="60.9920%" y="517" width="0.0729%" height="15" fill="rgb(238,13,15)" fg:x="629817489366" fg:w="752307479"/><text x="61.2420%" y="527.50"></text></g><g><title>flatbuffers::table::Table::vtable (758,477,022 samples, 0.07%)</title><rect x="60.9917%" y="565" width="0.0735%" height="15" fill="rgb(208,107,27)" fg:x="629814405015" fg:w="758477022"/><text x="61.2417%" y="575.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (758,477,022 samples, 0.07%)</title><rect x="60.9917%" y="549" width="0.0735%" height="15" fill="rgb(205,136,37)" fg:x="629814405015" fg:w="758477022"/><text x="61.2417%" y="559.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_ (5,478,508,970 samples, 0.53%)</title><rect x="60.7552%" y="597" width="0.5305%" height="15" fill="rgb(250,205,27)" fg:x="627372171326" fg:w="5478508970"/><text x="61.0052%" y="607.50"></text></g><g><title>flatbuffers::table::Table::get (5,478,508,970 samples, 0.53%)</title><rect x="60.7552%" y="581" width="0.5305%" height="15" fill="rgb(210,80,43)" fg:x="627372171326" fg:w="5478508970"/><text x="61.0052%" y="591.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,277,798,259 samples, 0.22%)</title><rect x="61.0652%" y="565" width="0.2206%" height="15" fill="rgb(247,160,36)" fg:x="630572882037" fg:w="2277798259"/><text x="61.3152%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (718,081,677 samples, 0.07%)</title><rect x="61.2162%" y="549" width="0.0695%" height="15" fill="rgb(234,13,49)" fg:x="632132598619" fg:w="718081677"/><text x="61.4662%" y="559.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Type as flatbuffers::follow::Follow&gt;::follow (779,982,040 samples, 0.08%)</title><rect x="61.3614%" y="565" width="0.0755%" height="15" fill="rgb(234,122,0)" fg:x="633631855991" fg:w="779982040"/><text x="61.6114%" y="575.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar_at (779,982,040 samples, 0.08%)</title><rect x="61.3614%" y="549" width="0.0755%" height="15" fill="rgb(207,146,38)" fg:x="633631855991" fg:w="779982040"/><text x="61.6114%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (779,982,040 samples, 0.08%)</title><rect x="61.3614%" y="533" width="0.0755%" height="15" fill="rgb(207,177,25)" fg:x="633631855991" fg:w="779982040"/><text x="61.6114%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (779,982,040 samples, 0.08%)</title><rect x="61.3614%" y="517" width="0.0755%" height="15" fill="rgb(211,178,42)" fg:x="633631855991" fg:w="779982040"/><text x="61.6114%" y="527.50"></text></g><g><title>flatbuffers::table::Table::vtable (729,731,983 samples, 0.07%)</title><rect x="61.4373%" y="565" width="0.0707%" height="15" fill="rgb(230,69,54)" fg:x="634414923232" fg:w="729731983"/><text x="61.6873%" y="575.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (729,731,983 samples, 0.07%)</title><rect x="61.4373%" y="549" width="0.0707%" height="15" fill="rgb(214,135,41)" fg:x="634414923232" fg:w="729731983"/><text x="61.6873%" y="559.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (708,086,767 samples, 0.07%)</title><rect x="61.4394%" y="533" width="0.0686%" height="15" fill="rgb(237,67,25)" fg:x="634436568448" fg:w="708086767"/><text x="61.6894%" y="543.50"></text></g><g><title>flatbuffers::vtable::VTable::init (708,086,767 samples, 0.07%)</title><rect x="61.4394%" y="517" width="0.0686%" height="15" fill="rgb(222,189,50)" fg:x="634436568448" fg:w="708086767"/><text x="61.6894%" y="527.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_as_floating_point (10,909,837,345 samples, 1.06%)</title><rect x="60.6764%" y="613" width="1.0565%" height="15" fill="rgb(245,148,34)" fg:x="626558152719" fg:w="10909837345"/><text x="60.9264%" y="623.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_type (4,617,309,768 samples, 0.45%)</title><rect x="61.2858%" y="597" width="0.4471%" height="15" fill="rgb(222,29,6)" fg:x="632850680296" fg:w="4617309768"/><text x="61.5358%" y="607.50"></text></g><g><title>flatbuffers::table::Table::get (4,617,309,768 samples, 0.45%)</title><rect x="61.2858%" y="581" width="0.4471%" height="15" fill="rgb(221,189,43)" fg:x="632850680296" fg:w="4617309768"/><text x="61.5358%" y="591.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,323,334,849 samples, 0.22%)</title><rect x="61.5079%" y="565" width="0.2250%" height="15" fill="rgb(207,36,27)" fg:x="635144655215" fg:w="2323334849"/><text x="61.7579%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (786,151,036 samples, 0.08%)</title><rect x="61.6568%" y="549" width="0.0761%" height="15" fill="rgb(217,90,24)" fg:x="636681839028" fg:w="786151036"/><text x="61.9068%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (792,364,688 samples, 0.08%)</title><rect x="61.7992%" y="549" width="0.0767%" height="15" fill="rgb(224,66,35)" fg:x="638152477024" fg:w="792364688"/><text x="62.0492%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (792,364,688 samples, 0.08%)</title><rect x="61.7992%" y="533" width="0.0767%" height="15" fill="rgb(221,13,50)" fg:x="638152477024" fg:w="792364688"/><text x="62.0492%" y="543.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Type as flatbuffers::follow::Follow&gt;::follow (801,617,618 samples, 0.08%)</title><rect x="61.7992%" y="581" width="0.0776%" height="15" fill="rgb(236,68,49)" fg:x="638152477024" fg:w="801617618"/><text x="62.0492%" y="591.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar_at (801,617,618 samples, 0.08%)</title><rect x="61.7992%" y="565" width="0.0776%" height="15" fill="rgb(229,146,28)" fg:x="638152477024" fg:w="801617618"/><text x="62.0492%" y="575.50"></text></g><g><title>flatbuffers::table::Table::vtable (798,334,040 samples, 0.08%)</title><rect x="61.8774%" y="581" width="0.0773%" height="15" fill="rgb(225,31,38)" fg:x="638960265837" fg:w="798334040"/><text x="62.1274%" y="591.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (798,334,040 samples, 0.08%)</title><rect x="61.8774%" y="565" width="0.0773%" height="15" fill="rgb(250,208,3)" fg:x="638960265837" fg:w="798334040"/><text x="62.1274%" y="575.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (798,334,040 samples, 0.08%)</title><rect x="61.8774%" y="549" width="0.0773%" height="15" fill="rgb(246,54,23)" fg:x="638960265837" fg:w="798334040"/><text x="62.1274%" y="559.50"></text></g><g><title>flatbuffers::vtable::VTable::init (798,334,040 samples, 0.08%)</title><rect x="61.8774%" y="533" width="0.0773%" height="15" fill="rgb(243,76,11)" fg:x="638960265837" fg:w="798334040"/><text x="62.1274%" y="543.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_type (4,421,024,144 samples, 0.43%)</title><rect x="61.7329%" y="613" width="0.4281%" height="15" fill="rgb(245,21,50)" fg:x="637467990064" fg:w="4421024144"/><text x="61.9829%" y="623.50"></text></g><g><title>flatbuffers::table::Table::get (4,421,024,144 samples, 0.43%)</title><rect x="61.7329%" y="597" width="0.4281%" height="15" fill="rgb(228,9,43)" fg:x="637467990064" fg:w="4421024144"/><text x="61.9829%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,130,414,331 samples, 0.21%)</title><rect x="61.9547%" y="581" width="0.2063%" height="15" fill="rgb(208,100,47)" fg:x="639758599877" fg:w="2130414331"/><text x="62.2047%" y="591.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (653,708,755 samples, 0.06%)</title><rect x="62.0978%" y="565" width="0.0633%" height="15" fill="rgb(232,26,8)" fg:x="641235305453" fg:w="653708755"/><text x="62.3478%" y="575.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (814,112,212 samples, 0.08%)</title><rect x="62.2423%" y="549" width="0.0788%" height="15" fill="rgb(216,166,38)" fg:x="642727704470" fg:w="814112212"/><text x="62.4923%" y="559.50"></text></g><g><title>flatbuffers::vtable::VTable::init (814,112,212 samples, 0.08%)</title><rect x="62.2423%" y="533" width="0.0788%" height="15" fill="rgb(251,202,51)" fg:x="642727704470" fg:w="814112212"/><text x="62.4923%" y="543.50"></text></g><g><title>flatbuffers::table::Table::vtable (2,355,735,183 samples, 0.23%)</title><rect x="62.1664%" y="581" width="0.2281%" height="15" fill="rgb(254,216,34)" fg:x="641944513302" fg:w="2355735183"/><text x="62.4164%" y="591.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (2,355,735,183 samples, 0.23%)</title><rect x="62.1664%" y="565" width="0.2281%" height="15" fill="rgb(251,32,27)" fg:x="641944513302" fg:w="2355735183"/><text x="62.4164%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (752,270,818 samples, 0.07%)</title><rect x="62.3217%" y="549" width="0.0729%" height="15" fill="rgb(208,127,28)" fg:x="643547977667" fg:w="752270818"/><text x="62.5717%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (752,270,818 samples, 0.07%)</title><rect x="62.3217%" y="533" width="0.0729%" height="15" fill="rgb(224,137,22)" fg:x="643547977667" fg:w="752270818"/><text x="62.5717%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (749,187,217 samples, 0.07%)</title><rect x="62.3220%" y="517" width="0.0726%" height="15" fill="rgb(254,70,32)" fg:x="643551061268" fg:w="749187217"/><text x="62.5720%" y="527.50"></text></g><g><title>arrow_ipc::gen::Schema::FloatingPoint::precision (4,680,199,885 samples, 0.45%)</title><rect x="62.1611%" y="613" width="0.4532%" height="15" fill="rgb(229,75,37)" fg:x="641889014208" fg:w="4680199885"/><text x="62.4111%" y="623.50"></text></g><g><title>flatbuffers::table::Table::get (4,680,199,885 samples, 0.45%)</title><rect x="62.1611%" y="597" width="0.4532%" height="15" fill="rgb(252,64,23)" fg:x="641889014208" fg:w="4680199885"/><text x="62.4111%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,268,965,608 samples, 0.22%)</title><rect x="62.3946%" y="581" width="0.2197%" height="15" fill="rgb(232,162,48)" fg:x="644300248485" fg:w="2268965608"/><text x="62.6446%" y="591.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (715,076,791 samples, 0.07%)</title><rect x="62.5450%" y="565" width="0.0692%" height="15" fill="rgb(246,160,12)" fg:x="645854137302" fg:w="715076791"/><text x="62.7950%" y="575.50"></text></g><g><title>arrow_ipc::convert::get_data_type (26,990,745,256 samples, 2.61%)</title><rect x="60.0017%" y="629" width="2.6138%" height="15" fill="rgb(247,166,0)" fg:x="619590808038" fg:w="26990745256"/><text x="60.2517%" y="639.50">ar..</text></g><g><title>flatbuffers::table::Table::vtable (853,907,865 samples, 0.08%)</title><rect x="62.6262%" y="597" width="0.0827%" height="15" fill="rgb(249,219,21)" fg:x="646692564266" fg:w="853907865"/><text x="62.8762%" y="607.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (853,907,865 samples, 0.08%)</title><rect x="62.6262%" y="581" width="0.0827%" height="15" fill="rgb(205,209,3)" fg:x="646692564266" fg:w="853907865"/><text x="62.8762%" y="591.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (853,907,865 samples, 0.08%)</title><rect x="62.6262%" y="565" width="0.0827%" height="15" fill="rgb(243,44,1)" fg:x="646692564266" fg:w="853907865"/><text x="62.8762%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::init (853,907,865 samples, 0.08%)</title><rect x="62.6262%" y="549" width="0.0827%" height="15" fill="rgb(206,159,16)" fg:x="646692564266" fg:w="853907865"/><text x="62.8762%" y="559.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::custom_metadata (1,824,908,361 samples, 0.18%)</title><rect x="62.6155%" y="629" width="0.1767%" height="15" fill="rgb(244,77,30)" fg:x="646581553294" fg:w="1824908361"/><text x="62.8655%" y="639.50"></text></g><g><title>flatbuffers::table::Table::get (1,824,908,361 samples, 0.18%)</title><rect x="62.6155%" y="613" width="0.1767%" height="15" fill="rgb(218,69,12)" fg:x="646581553294" fg:w="1824908361"/><text x="62.8655%" y="623.50"></text></g><g><title>flatbuffers::vtable::VTable::get (859,989,524 samples, 0.08%)</title><rect x="62.7089%" y="597" width="0.0833%" height="15" fill="rgb(212,87,7)" fg:x="647546472131" fg:w="859989524"/><text x="62.9589%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (745,899,059 samples, 0.07%)</title><rect x="62.7200%" y="581" width="0.0722%" height="15" fill="rgb(245,114,25)" fg:x="647660562596" fg:w="745899059"/><text x="62.9700%" y="591.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (699,924,982 samples, 0.07%)</title><rect x="62.9412%" y="565" width="0.0678%" height="15" fill="rgb(210,61,42)" fg:x="649944991092" fg:w="699924982"/><text x="63.1912%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::init (699,924,982 samples, 0.07%)</title><rect x="62.9412%" y="549" width="0.0678%" height="15" fill="rgb(211,52,33)" fg:x="649944991092" fg:w="699924982"/><text x="63.1912%" y="559.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (940,393,609 samples, 0.09%)</title><rect x="62.9317%" y="581" width="0.0911%" height="15" fill="rgb(234,58,33)" fg:x="649846341665" fg:w="940393609"/><text x="63.1817%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (135,648,056 samples, 0.01%)</title><rect x="63.0096%" y="565" width="0.0131%" height="15" fill="rgb(220,115,36)" fg:x="650651087218" fg:w="135648056"/><text x="63.2596%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (135,648,056 samples, 0.01%)</title><rect x="63.0096%" y="549" width="0.0131%" height="15" fill="rgb(243,153,54)" fg:x="650651087218" fg:w="135648056"/><text x="63.2596%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (135,648,056 samples, 0.01%)</title><rect x="63.0096%" y="533" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="650651087218" fg:w="135648056"/><text x="63.2596%" y="543.50"></text></g><g><title>flatbuffers::table::Table::vtable (1,606,410,219 samples, 0.16%)</title><rect x="62.8678%" y="597" width="0.1556%" height="15" fill="rgb(242,102,42)" fg:x="649186494941" fg:w="1606410219"/><text x="63.1178%" y="607.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::dictionary (3,817,093,405 samples, 0.37%)</title><rect x="62.7922%" y="629" width="0.3697%" height="15" fill="rgb(234,31,38)" fg:x="648406461655" fg:w="3817093405"/><text x="63.0422%" y="639.50"></text></g><g><title>flatbuffers::table::Table::get (3,817,093,405 samples, 0.37%)</title><rect x="62.7922%" y="613" width="0.3697%" height="15" fill="rgb(221,117,51)" fg:x="648406461655" fg:w="3817093405"/><text x="63.0422%" y="623.50"></text></g><g><title>flatbuffers::vtable::VTable::get (1,430,649,900 samples, 0.14%)</title><rect x="63.0233%" y="597" width="0.1385%" height="15" fill="rgb(212,20,18)" fg:x="650792905160" fg:w="1430649900"/><text x="63.2733%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (579,630,692 samples, 0.06%)</title><rect x="63.1057%" y="581" width="0.0561%" height="15" fill="rgb(245,133,36)" fg:x="651643924368" fg:w="579630692"/><text x="63.3557%" y="591.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar (810,596,444 samples, 0.08%)</title><rect x="63.3105%" y="581" width="0.0785%" height="15" fill="rgb(212,6,19)" fg:x="653758894295" fg:w="810596444"/><text x="63.5605%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (810,596,444 samples, 0.08%)</title><rect x="63.3105%" y="565" width="0.0785%" height="15" fill="rgb(218,1,36)" fg:x="653758894295" fg:w="810596444"/><text x="63.5605%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (709,195,760 samples, 0.07%)</title><rect x="63.4700%" y="565" width="0.0687%" height="15" fill="rgb(246,84,54)" fg:x="655405303889" fg:w="709195760"/><text x="63.7200%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (709,195,760 samples, 0.07%)</title><rect x="63.4700%" y="549" width="0.0687%" height="15" fill="rgb(242,110,6)" fg:x="655405303889" fg:w="709195760"/><text x="63.7200%" y="559.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (706,111,093 samples, 0.07%)</title><rect x="63.4703%" y="533" width="0.0684%" height="15" fill="rgb(214,47,5)" fg:x="655408388556" fg:w="706111093"/><text x="63.7203%" y="543.50"></text></g><g><title>core::slice::index::get_noubcheck (706,111,093 samples, 0.07%)</title><rect x="63.4703%" y="517" width="0.0684%" height="15" fill="rgb(218,159,25)" fg:x="655408388556" fg:w="706111093"/><text x="63.7203%" y="527.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (3,915,607,855 samples, 0.38%)</title><rect x="63.1625%" y="597" width="0.3792%" height="15" fill="rgb(215,211,28)" fg:x="652229725314" fg:w="3915607855"/><text x="63.4125%" y="607.50"></text></g><g><title>flatbuffers::vector::&lt;impl flatbuffers::follow::Follow for &amp;str&gt;::follow (1,575,842,430 samples, 0.15%)</title><rect x="63.3890%" y="581" width="0.1526%" height="15" fill="rgb(238,59,32)" fg:x="654569490739" fg:w="1575842430"/><text x="63.6390%" y="591.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (826,235,601 samples, 0.08%)</title><rect x="63.6891%" y="565" width="0.0800%" height="15" fill="rgb(226,82,3)" fg:x="657668300014" fg:w="826235601"/><text x="63.9391%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::init (826,235,601 samples, 0.08%)</title><rect x="63.6891%" y="549" width="0.0800%" height="15" fill="rgb(240,164,32)" fg:x="657668300014" fg:w="826235601"/><text x="63.9391%" y="559.50"></text></g><g><title>flatbuffers::table::Table::vtable (2,349,201,753 samples, 0.23%)</title><rect x="63.5419%" y="597" width="0.2275%" height="15" fill="rgb(232,46,7)" fg:x="656148417938" fg:w="2349201753"/><text x="63.7919%" y="607.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,550,837,516 samples, 0.15%)</title><rect x="63.6193%" y="581" width="0.1502%" height="15" fill="rgb(229,129,53)" fg:x="656946782175" fg:w="1550837516"/><text x="63.8693%" y="591.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::name (8,651,283,579 samples, 0.84%)</title><rect x="63.1619%" y="629" width="0.8378%" height="15" fill="rgb(234,188,29)" fg:x="652223555060" fg:w="8651283579"/><text x="63.4119%" y="639.50"></text></g><g><title>flatbuffers::table::Table::get (8,651,283,579 samples, 0.84%)</title><rect x="63.1619%" y="613" width="0.8378%" height="15" fill="rgb(246,141,4)" fg:x="652223555060" fg:w="8651283579"/><text x="63.4119%" y="623.50"></text></g><g><title>flatbuffers::vtable::VTable::get (2,377,218,948 samples, 0.23%)</title><rect x="63.7694%" y="597" width="0.2302%" height="15" fill="rgb(229,23,39)" fg:x="658497619691" fg:w="2377218948"/><text x="64.0194%" y="607.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (832,422,282 samples, 0.08%)</title><rect x="63.9190%" y="581" width="0.0806%" height="15" fill="rgb(206,12,3)" fg:x="660042416357" fg:w="832422282"/><text x="64.1690%" y="591.50"></text></g><g><title>flatbuffers::table::Table::vtable (1,560,200,195 samples, 0.15%)</title><rect x="64.0717%" y="597" width="0.1511%" height="15" fill="rgb(252,226,20)" fg:x="661618885951" fg:w="1560200195"/><text x="64.3217%" y="607.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,560,200,195 samples, 0.15%)</title><rect x="64.0717%" y="581" width="0.1511%" height="15" fill="rgb(216,123,35)" fg:x="661618885951" fg:w="1560200195"/><text x="64.3217%" y="591.50"></text></g><g><title>&lt;flatbuffers::vtable::VTable as flatbuffers::follow::Follow&gt;::follow (721,527,713 samples, 0.07%)</title><rect x="64.1529%" y="565" width="0.0699%" height="15" fill="rgb(212,68,40)" fg:x="662457558433" fg:w="721527713"/><text x="64.4029%" y="575.50"></text></g><g><title>flatbuffers::vtable::VTable::init (721,527,713 samples, 0.07%)</title><rect x="64.1529%" y="549" width="0.0699%" height="15" fill="rgb(254,125,32)" fg:x="662457558433" fg:w="721527713"/><text x="64.4029%" y="559.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::nullable (3,167,575,310 samples, 0.31%)</title><rect x="63.9997%" y="629" width="0.3068%" height="15" fill="rgb(253,97,22)" fg:x="660874838639" fg:w="3167575310"/><text x="64.2497%" y="639.50"></text></g><g><title>flatbuffers::table::Table::get (3,167,575,310 samples, 0.31%)</title><rect x="63.9997%" y="613" width="0.3068%" height="15" fill="rgb(241,101,14)" fg:x="660874838639" fg:w="3167575310"/><text x="64.2497%" y="623.50"></text></g><g><title>flatbuffers::vtable::VTable::get (863,327,803 samples, 0.08%)</title><rect x="64.2228%" y="597" width="0.0836%" height="15" fill="rgb(238,103,29)" fg:x="663179086146" fg:w="863327803"/><text x="64.4728%" y="607.50"></text></g><g><title>checked_request2size (770,936,939 samples, 0.07%)</title><rect x="67.2389%" y="341" width="0.0747%" height="15" fill="rgb(233,195,47)" fg:x="694323720394" fg:w="770936939"/><text x="67.4889%" y="351.50"></text></g><g><title>_int_malloc (10,971,567,774 samples, 1.06%)</title><rect x="66.2585%" y="357" width="1.0625%" height="15" fill="rgb(246,218,30)" fg:x="684200215792" fg:w="10971567774"/><text x="66.5085%" y="367.50"></text></g><g><title>arena_for_chunk (1,492,265,370 samples, 0.14%)</title><rect x="67.3210%" y="357" width="0.1445%" height="15" fill="rgb(219,145,47)" fg:x="695171783566" fg:w="1492265370"/><text x="67.5710%" y="367.50"></text></g><g><title>__irq_exit_rcu (138,810,474 samples, 0.01%)</title><rect x="67.4655%" y="325" width="0.0134%" height="15" fill="rgb(243,12,26)" fg:x="696664048936" fg:w="138810474"/><text x="67.7155%" y="335.50"></text></g><g><title>handle_softirqs (138,810,474 samples, 0.01%)</title><rect x="67.4655%" y="309" width="0.0134%" height="15" fill="rgb(214,87,16)" fg:x="696664048936" fg:w="138810474"/><text x="67.7155%" y="319.50"></text></g><g><title>run_timer_softirq (135,726,079 samples, 0.01%)</title><rect x="67.4658%" y="293" width="0.0131%" height="15" fill="rgb(208,99,42)" fg:x="696667133331" fg:w="135726079"/><text x="67.7158%" y="303.50"></text></g><g><title>__run_timers (135,726,079 samples, 0.01%)</title><rect x="67.4658%" y="277" width="0.0131%" height="15" fill="rgb(253,99,2)" fg:x="696667133331" fg:w="135726079"/><text x="67.7158%" y="287.50"></text></g><g><title>call_timer_fn (135,726,079 samples, 0.01%)</title><rect x="67.4658%" y="261" width="0.0131%" height="15" fill="rgb(220,168,23)" fg:x="696667133331" fg:w="135726079"/><text x="67.7158%" y="271.50"></text></g><g><title>fq_flush_timeout (135,726,079 samples, 0.01%)</title><rect x="67.4658%" y="245" width="0.0131%" height="15" fill="rgb(242,38,24)" fg:x="696667133331" fg:w="135726079"/><text x="67.7158%" y="255.50"></text></g><g><title>fq_ring_free (107,962,386 samples, 0.01%)</title><rect x="67.4685%" y="229" width="0.0105%" height="15" fill="rgb(225,182,9)" fg:x="696694897024" fg:w="107962386"/><text x="67.7185%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (185,081,949 samples, 0.02%)</title><rect x="67.4655%" y="357" width="0.0179%" height="15" fill="rgb(243,178,37)" fg:x="696664048936" fg:w="185081949"/><text x="67.7155%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (185,081,949 samples, 0.02%)</title><rect x="67.4655%" y="341" width="0.0179%" height="15" fill="rgb(232,139,19)" fg:x="696664048936" fg:w="185081949"/><text x="67.7155%" y="351.50"></text></g><g><title>checked_request2size (693,830,072 samples, 0.07%)</title><rect x="67.4834%" y="357" width="0.0672%" height="15" fill="rgb(225,201,24)" fg:x="696849130885" fg:w="693830072"/><text x="67.7334%" y="367.50"></text></g><g><title>__GI___libc_malloc (30,056,362,795 samples, 2.91%)</title><rect x="64.6405%" y="373" width="2.9107%" height="15" fill="rgb(221,47,46)" fg:x="667492764987" fg:w="30056362795"/><text x="64.8905%" y="383.50">__..</text></g><g><title>__rdl_alloc (906,546,240 samples, 0.09%)</title><rect x="67.5512%" y="373" width="0.0878%" height="15" fill="rgb(249,23,13)" fg:x="697549127782" fg:w="906546240"/><text x="67.8012%" y="383.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (906,546,240 samples, 0.09%)</title><rect x="67.5512%" y="357" width="0.0878%" height="15" fill="rgb(219,9,5)" fg:x="697549127782" fg:w="906546240"/><text x="67.8012%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31,009,167,462 samples, 3.00%)</title><rect x="64.6405%" y="421" width="3.0030%" height="15" fill="rgb(254,171,16)" fg:x="667492764987" fg:w="31009167462"/><text x="64.8905%" y="431.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (31,009,167,462 samples, 3.00%)</title><rect x="64.6405%" y="405" width="3.0030%" height="15" fill="rgb(230,171,20)" fg:x="667492764987" fg:w="31009167462"/><text x="64.8905%" y="415.50">all..</text></g><g><title>alloc::alloc::alloc (31,009,167,462 samples, 3.00%)</title><rect x="64.6405%" y="389" width="3.0030%" height="15" fill="rgb(210,71,41)" fg:x="667492764987" fg:w="31009167462"/><text x="64.8905%" y="399.50">all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31,826,064,744 samples, 3.08%)</title><rect x="64.5623%" y="485" width="3.0821%" height="15" fill="rgb(206,173,20)" fg:x="666685118056" fg:w="31826064744"/><text x="64.8123%" y="495.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31,826,064,744 samples, 3.08%)</title><rect x="64.5623%" y="469" width="3.0821%" height="15" fill="rgb(233,88,34)" fg:x="666685118056" fg:w="31826064744"/><text x="64.8123%" y="479.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (31,826,064,744 samples, 3.08%)</title><rect x="64.5623%" y="453" width="3.0821%" height="15" fill="rgb(223,209,46)" fg:x="666685118056" fg:w="31826064744"/><text x="64.8123%" y="463.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (31,826,064,744 samples, 3.08%)</title><rect x="64.5623%" y="437" width="3.0821%" height="15" fill="rgb(250,43,18)" fg:x="666685118056" fg:w="31826064744"/><text x="64.8123%" y="447.50">all..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="613" width="3.1666%" height="15" fill="rgb(208,13,10)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="623.50">&lt;T ..</text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="597" width="3.1666%" height="15" fill="rgb(212,200,36)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="607.50">&lt;al..</text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="581" width="3.1666%" height="15" fill="rgb(225,90,30)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="591.50">all..</text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="565" width="3.1666%" height="15" fill="rgb(236,182,39)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="575.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="549" width="3.1666%" height="15" fill="rgb(212,144,35)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="559.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="533" width="3.1666%" height="15" fill="rgb(228,63,44)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="543.50">all..</text></g><g><title>alloc::slice::hack::to_vec (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="517" width="3.1666%" height="15" fill="rgb(228,109,6)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="527.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,698,557,581 samples, 3.17%)</title><rect x="64.5623%" y="501" width="3.1666%" height="15" fill="rgb(238,117,24)" fg:x="666685118056" fg:w="32698557581"/><text x="64.8123%" y="511.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (872,492,837 samples, 0.08%)</title><rect x="67.6444%" y="485" width="0.0845%" height="15" fill="rgb(242,26,26)" fg:x="698511182800" fg:w="872492837"/><text x="67.8944%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (872,492,837 samples, 0.08%)</title><rect x="67.6444%" y="469" width="0.0845%" height="15" fill="rgb(221,92,48)" fg:x="698511182800" fg:w="872492837"/><text x="67.8944%" y="479.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (872,492,837 samples, 0.08%)</title><rect x="67.6444%" y="453" width="0.0845%" height="15" fill="rgb(209,209,32)" fg:x="698511182800" fg:w="872492837"/><text x="67.8944%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (761,373,687 samples, 0.07%)</title><rect x="67.7289%" y="533" width="0.0737%" height="15" fill="rgb(221,70,22)" fg:x="699383675637" fg:w="761373687"/><text x="67.9789%" y="543.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::{{constant}}::{{closure}} (761,373,687 samples, 0.07%)</title><rect x="67.7289%" y="517" width="0.0737%" height="15" fill="rgb(248,145,5)" fg:x="699383675637" fg:w="761373687"/><text x="67.9789%" y="527.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (761,373,687 samples, 0.07%)</title><rect x="67.7289%" y="501" width="0.0737%" height="15" fill="rgb(226,116,26)" fg:x="699383675637" fg:w="761373687"/><text x="67.9789%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (687,468,295 samples, 0.07%)</title><rect x="67.8026%" y="517" width="0.0666%" height="15" fill="rgb(244,5,17)" fg:x="700145049324" fg:w="687468295"/><text x="68.0526%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1,578,363,566 samples, 0.15%)</title><rect x="67.7289%" y="613" width="0.1529%" height="15" fill="rgb(252,159,33)" fg:x="699383675637" fg:w="1578363566"/><text x="67.9789%" y="623.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (1,578,363,566 samples, 0.15%)</title><rect x="67.7289%" y="597" width="0.1529%" height="15" fill="rgb(206,71,0)" fg:x="699383675637" fg:w="1578363566"/><text x="67.9789%" y="607.50"></text></g><g><title>std::hash::random::RandomState::new (1,578,363,566 samples, 0.15%)</title><rect x="67.7289%" y="581" width="0.1529%" height="15" fill="rgb(233,118,54)" fg:x="699383675637" fg:w="1578363566"/><text x="67.9789%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,578,363,566 samples, 0.15%)</title><rect x="67.7289%" y="565" width="0.1529%" height="15" fill="rgb(234,83,48)" fg:x="699383675637" fg:w="1578363566"/><text x="67.9789%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,578,363,566 samples, 0.15%)</title><rect x="67.7289%" y="549" width="0.1529%" height="15" fill="rgb(228,3,54)" fg:x="699383675637" fg:w="1578363566"/><text x="67.9789%" y="559.50"></text></g><g><title>std::hash::random::RandomState::new::{{closure}} (816,989,879 samples, 0.08%)</title><rect x="67.8026%" y="533" width="0.0791%" height="15" fill="rgb(226,155,13)" fg:x="700145049324" fg:w="816989879"/><text x="68.0526%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (129,521,584 samples, 0.01%)</title><rect x="67.8692%" y="517" width="0.0125%" height="15" fill="rgb(241,28,37)" fg:x="700832517619" fg:w="129521584"/><text x="68.1192%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (129,521,584 samples, 0.01%)</title><rect x="67.8692%" y="501" width="0.0125%" height="15" fill="rgb(233,93,10)" fg:x="700832517619" fg:w="129521584"/><text x="68.1192%" y="511.50"></text></g><g><title>core::mem::replace (129,521,584 samples, 0.01%)</title><rect x="67.8692%" y="485" width="0.0125%" height="15" fill="rgb(225,113,19)" fg:x="700832517619" fg:w="129521584"/><text x="68.1192%" y="495.50"></text></g><g><title>core::ptr::write (129,521,584 samples, 0.01%)</title><rect x="67.8692%" y="469" width="0.0125%" height="15" fill="rgb(241,2,18)" fg:x="700832517619" fg:w="129521584"/><text x="68.1192%" y="479.50"></text></g><g><title>arrow_schema::field::Field::new (36,935,047,064 samples, 3.58%)</title><rect x="64.3064%" y="629" width="3.5768%" height="15" fill="rgb(228,207,21)" fg:x="664042413949" fg:w="36935047064"/><text x="64.5564%" y="639.50">arro..</text></g><g><title>arrow_schema::field::Field::set_metadata (1,131,475,634 samples, 0.11%)</title><rect x="68.2610%" y="613" width="0.1096%" height="15" fill="rgb(213,211,35)" fg:x="704878068800" fg:w="1131475634"/><text x="68.5110%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (259,033,015 samples, 0.03%)</title><rect x="68.3455%" y="597" width="0.0251%" height="15" fill="rgb(209,83,10)" fg:x="705750511419" fg:w="259033015"/><text x="68.5955%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (259,033,015 samples, 0.03%)</title><rect x="68.3455%" y="581" width="0.0251%" height="15" fill="rgb(209,164,1)" fg:x="705750511419" fg:w="259033015"/><text x="68.5955%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (259,033,015 samples, 0.03%)</title><rect x="68.3455%" y="565" width="0.0251%" height="15" fill="rgb(213,184,43)" fg:x="705750511419" fg:w="259033015"/><text x="68.5955%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259,033,015 samples, 0.03%)</title><rect x="68.3455%" y="549" width="0.0251%" height="15" fill="rgb(231,61,34)" fg:x="705750511419" fg:w="259033015"/><text x="68.5955%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (259,033,015 samples, 0.03%)</title><rect x="68.3455%" y="533" width="0.0251%" height="15" fill="rgb(235,75,3)" fg:x="705750511419" fg:w="259033015"/><text x="68.5955%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (104,837,745 samples, 0.01%)</title><rect x="68.3604%" y="517" width="0.0102%" height="15" fill="rgb(220,106,47)" fg:x="705904706689" fg:w="104837745"/><text x="68.6104%" y="527.50"></text></g><g><title>arrow_schema::field::Field::with_metadata (5,081,383,223 samples, 0.49%)</title><rect x="67.8832%" y="629" width="0.4921%" height="15" fill="rgb(210,196,33)" fg:x="700977461013" fg:w="5081383223"/><text x="68.1332%" y="639.50"></text></g><g><title>arrow_ipc::convert::&lt;impl core::convert::From&lt;arrow_ipc::gen::Schema::Field&gt; for arrow_schema::field::Field&gt;::from (94,556,448,124 samples, 9.16%)</title><rect x="59.2291%" y="645" width="9.1569%" height="15" fill="rgb(229,154,42)" fg:x="611613390043" fg:w="94556448124"/><text x="59.4791%" y="655.50">arrow_ipc::co..</text></g><g><title>asm_sysvec_apic_timer_interrupt (110,993,931 samples, 0.01%)</title><rect x="68.3753%" y="629" width="0.0107%" height="15" fill="rgb(228,114,26)" fg:x="706058844236" fg:w="110993931"/><text x="68.6253%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (110,993,931 samples, 0.01%)</title><rect x="68.3753%" y="613" width="0.0107%" height="15" fill="rgb(208,144,1)" fg:x="706058844236" fg:w="110993931"/><text x="68.6253%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (94,679,756,831 samples, 9.17%)</title><rect x="59.2175%" y="661" width="9.1689%" height="15" fill="rgb(239,112,37)" fg:x="611493165778" fg:w="94679756831"/><text x="59.4675%" y="671.50">&lt;T as core::c..</text></g><g><title>__cgroup_throttle_swaprate (114,090,309 samples, 0.01%)</title><rect x="68.8211%" y="405" width="0.0110%" height="15" fill="rgb(210,96,50)" fg:x="710661833350" fg:w="114090309"/><text x="69.0711%" y="415.50"></text></g><g><title>blk_cgroup_congested (104,840,084 samples, 0.01%)</title><rect x="68.8220%" y="389" width="0.0102%" height="15" fill="rgb(222,178,2)" fg:x="710671083575" fg:w="104840084"/><text x="69.0720%" y="399.50"></text></g><g><title>__count_memcg_events (233,360,803 samples, 0.02%)</title><rect x="68.8439%" y="373" width="0.0226%" height="15" fill="rgb(226,74,18)" fg:x="710897896096" fg:w="233360803"/><text x="69.0939%" y="383.50"></text></g><g><title>cgroup_rstat_updated (175,790,767 samples, 0.02%)</title><rect x="68.8495%" y="357" width="0.0170%" height="15" fill="rgb(225,67,54)" fg:x="710955466132" fg:w="175790767"/><text x="69.0995%" y="367.50"></text></g><g><title>charge_memcg (453,990,621 samples, 0.04%)</title><rect x="68.8360%" y="389" width="0.0440%" height="15" fill="rgb(251,92,32)" fg:x="710816002236" fg:w="453990621"/><text x="69.0860%" y="399.50"></text></g><g><title>try_charge_memcg (117,142,086 samples, 0.01%)</title><rect x="68.8686%" y="373" width="0.0113%" height="15" fill="rgb(228,149,22)" fg:x="711152850771" fg:w="117142086"/><text x="69.1186%" y="383.50"></text></g><g><title>__mem_cgroup_charge (614,320,879 samples, 0.06%)</title><rect x="68.8321%" y="405" width="0.0595%" height="15" fill="rgb(243,54,13)" fg:x="710775923659" fg:w="614320879"/><text x="69.0821%" y="415.50"></text></g><g><title>get_mem_cgroup_from_mm (120,251,681 samples, 0.01%)</title><rect x="68.8800%" y="389" width="0.0116%" height="15" fill="rgb(243,180,28)" fg:x="711269992857" fg:w="120251681"/><text x="69.1300%" y="399.50"></text></g><g><title>_raw_spin_lock (1,205,662,689 samples, 0.12%)</title><rect x="68.8970%" y="405" width="0.1168%" height="15" fill="rgb(208,167,24)" fg:x="711445754704" fg:w="1205662689"/><text x="69.1470%" y="415.50"></text></g><g><title>lru_add_fn (289,861,108 samples, 0.03%)</title><rect x="69.0391%" y="373" width="0.0281%" height="15" fill="rgb(245,73,45)" fg:x="712913351772" fg:w="289861108"/><text x="69.2891%" y="383.50"></text></g><g><title>folio_add_lru (511,885,732 samples, 0.05%)</title><rect x="69.0242%" y="405" width="0.0496%" height="15" fill="rgb(237,203,48)" fg:x="712759163673" fg:w="511885732"/><text x="69.2742%" y="415.50"></text></g><g><title>folio_batch_move_lru (425,548,391 samples, 0.04%)</title><rect x="69.0325%" y="389" width="0.0412%" height="15" fill="rgb(211,197,16)" fg:x="712845501014" fg:w="425548391"/><text x="69.2825%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (114,108,876 samples, 0.01%)</title><rect x="69.0806%" y="389" width="0.0111%" height="15" fill="rgb(243,99,51)" fg:x="713341968769" fg:w="114108876"/><text x="69.3306%" y="399.50"></text></g><g><title>page_add_new_anon_rmap (169,602,448 samples, 0.02%)</title><rect x="69.0758%" y="405" width="0.0164%" height="15" fill="rgb(215,123,29)" fg:x="713292636693" fg:w="169602448"/><text x="69.3258%" y="415.50"></text></g><g><title>clear_page_erms (197,345,573 samples, 0.02%)</title><rect x="69.1586%" y="341" width="0.0191%" height="15" fill="rgb(239,186,37)" fg:x="714146765537" fg:w="197345573"/><text x="69.4086%" y="351.50"></text></g><g><title>get_page_from_freelist (502,580,589 samples, 0.05%)</title><rect x="69.1323%" y="357" width="0.0487%" height="15" fill="rgb(252,136,39)" fg:x="713875422202" fg:w="502580589"/><text x="69.3823%" y="367.50"></text></g><g><title>__folio_alloc (647,486,572 samples, 0.06%)</title><rect x="69.1191%" y="389" width="0.0627%" height="15" fill="rgb(223,213,32)" fg:x="713739768060" fg:w="647486572"/><text x="69.3691%" y="399.50"></text></g><g><title>__alloc_pages (632,076,456 samples, 0.06%)</title><rect x="69.1206%" y="373" width="0.0612%" height="15" fill="rgb(233,115,5)" fg:x="713755178176" fg:w="632076456"/><text x="69.3706%" y="383.50"></text></g><g><title>__handle_mm_fault (4,149,657,509 samples, 0.40%)</title><rect x="68.7855%" y="421" width="0.4019%" height="15" fill="rgb(207,226,44)" fg:x="710294912924" fg:w="4149657509"/><text x="69.0355%" y="431.50"></text></g><g><title>vma_alloc_folio (757,230,622 samples, 0.07%)</title><rect x="69.1141%" y="405" width="0.0733%" height="15" fill="rgb(208,126,0)" fg:x="713687339811" fg:w="757230622"/><text x="69.3641%" y="415.50"></text></g><g><title>handle_mm_fault (4,300,728,934 samples, 0.42%)</title><rect x="68.7805%" y="437" width="0.4165%" height="15" fill="rgb(244,66,21)" fg:x="710242496328" fg:w="4300728934"/><text x="69.0305%" y="447.50"></text></g><g><title>lock_mm_and_find_vma (366,905,396 samples, 0.04%)</title><rect x="69.1970%" y="437" width="0.0355%" height="15" fill="rgb(222,97,12)" fg:x="714543225262" fg:w="366905396"/><text x="69.4470%" y="447.50"></text></g><g><title>find_vma (237,394,084 samples, 0.02%)</title><rect x="69.2095%" y="421" width="0.0230%" height="15" fill="rgb(219,213,19)" fg:x="714672736574" fg:w="237394084"/><text x="69.4595%" y="431.50"></text></g><g><title>mt_find (218,888,221 samples, 0.02%)</title><rect x="69.2113%" y="405" width="0.0212%" height="15" fill="rgb(252,169,30)" fg:x="714691242437" fg:w="218888221"/><text x="69.4613%" y="415.50"></text></g><g><title>mtree_range_walk (160,307,040 samples, 0.02%)</title><rect x="69.2170%" y="389" width="0.0155%" height="15" fill="rgb(206,32,51)" fg:x="714749823618" fg:w="160307040"/><text x="69.4670%" y="399.50"></text></g><g><title>do_user_addr_fault (4,837,221,534 samples, 0.47%)</title><rect x="68.7688%" y="453" width="0.4684%" height="15" fill="rgb(250,172,42)" fg:x="710122242049" fg:w="4837221534"/><text x="69.0188%" y="463.50"></text></g><g><title>exc_page_fault (4,871,147,281 samples, 0.47%)</title><rect x="68.7664%" y="469" width="0.4717%" height="15" fill="rgb(209,34,43)" fg:x="710097569211" fg:w="4871147281"/><text x="69.0164%" y="479.50"></text></g><g><title>asm_exc_page_fault (5,109,166,562 samples, 0.49%)</title><rect x="68.7538%" y="485" width="0.4948%" height="15" fill="rgb(223,11,35)" fg:x="709967495654" fg:w="5109166562"/><text x="69.0038%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (107,945,724 samples, 0.01%)</title><rect x="69.2382%" y="469" width="0.0105%" height="15" fill="rgb(251,219,26)" fg:x="714968716492" fg:w="107945724"/><text x="69.4882%" y="479.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (9,192,949,711 samples, 0.89%)</title><rect x="68.4706%" y="501" width="0.8903%" height="15" fill="rgb(231,119,3)" fg:x="707042537060" fg:w="9192949711"/><text x="68.7206%" y="511.50"></text></g><g><title>error_entry (1,137,232,014 samples, 0.11%)</title><rect x="69.2507%" y="485" width="0.1101%" height="15" fill="rgb(216,97,11)" fg:x="715098254757" fg:w="1137232014"/><text x="69.5007%" y="495.50"></text></g><g><title>sync_regs (1,047,800,120 samples, 0.10%)</title><rect x="69.2594%" y="469" width="0.1015%" height="15" fill="rgb(223,59,9)" fg:x="715187686651" fg:w="1047800120"/><text x="69.5094%" y="479.50"></text></g><g><title>perf_event_mmap (502,551,865 samples, 0.05%)</title><rect x="69.3751%" y="357" width="0.0487%" height="15" fill="rgb(233,93,31)" fg:x="716383149182" fg:w="502551865"/><text x="69.6251%" y="367.50"></text></g><g><title>perf_iterate_sb (496,383,804 samples, 0.05%)</title><rect x="69.3757%" y="341" width="0.0481%" height="15" fill="rgb(239,81,33)" fg:x="716389317243" fg:w="496383804"/><text x="69.6257%" y="351.50"></text></g><g><title>perf_iterate_ctx (496,383,804 samples, 0.05%)</title><rect x="69.3757%" y="325" width="0.0481%" height="15" fill="rgb(213,120,34)" fg:x="716389317243" fg:w="496383804"/><text x="69.6257%" y="335.50"></text></g><g><title>do_brk_flags (591,757,979 samples, 0.06%)</title><rect x="69.3680%" y="373" width="0.0573%" height="15" fill="rgb(243,49,53)" fg:x="716309355775" fg:w="591757979"/><text x="69.6180%" y="383.50"></text></g><g><title>__do_sys_brk (622,594,670 samples, 0.06%)</title><rect x="69.3659%" y="389" width="0.0603%" height="15" fill="rgb(247,216,33)" fg:x="716287769472" fg:w="622594670"/><text x="69.6159%" y="399.50"></text></g><g><title>__glibc_morecore (638,371,294 samples, 0.06%)</title><rect x="69.3650%" y="469" width="0.0618%" height="15" fill="rgb(226,26,14)" fg:x="716278514551" fg:w="638371294"/><text x="69.6150%" y="479.50"></text></g><g><title>__GI___sbrk (638,371,294 samples, 0.06%)</title><rect x="69.3650%" y="453" width="0.0618%" height="15" fill="rgb(215,49,53)" fg:x="716278514551" fg:w="638371294"/><text x="69.6150%" y="463.50"></text></g><g><title>__brk (635,286,329 samples, 0.06%)</title><rect x="69.3653%" y="437" width="0.0615%" height="15" fill="rgb(245,162,40)" fg:x="716281599516" fg:w="635286329"/><text x="69.6153%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (629,116,373 samples, 0.06%)</title><rect x="69.3659%" y="421" width="0.0609%" height="15" fill="rgb(229,68,17)" fg:x="716287769472" fg:w="629116373"/><text x="69.6159%" y="431.50"></text></g><g><title>do_syscall_64 (629,116,373 samples, 0.06%)</title><rect x="69.3659%" y="405" width="0.0609%" height="15" fill="rgb(213,182,10)" fg:x="716287769472" fg:w="629116373"/><text x="69.6159%" y="415.50"></text></g><g><title>__handle_mm_fault (127,033,121 samples, 0.01%)</title><rect x="69.4274%" y="405" width="0.0123%" height="15" fill="rgb(245,125,30)" fg:x="716923055150" fg:w="127033121"/><text x="69.6774%" y="415.50"></text></g><g><title>asm_exc_page_fault (145,527,567 samples, 0.01%)</title><rect x="69.4271%" y="469" width="0.0141%" height="15" fill="rgb(232,202,2)" fg:x="716919970141" fg:w="145527567"/><text x="69.6771%" y="479.50"></text></g><g><title>exc_page_fault (145,527,567 samples, 0.01%)</title><rect x="69.4271%" y="453" width="0.0141%" height="15" fill="rgb(237,140,51)" fg:x="716919970141" fg:w="145527567"/><text x="69.6771%" y="463.50"></text></g><g><title>do_user_addr_fault (145,527,567 samples, 0.01%)</title><rect x="69.4271%" y="437" width="0.0141%" height="15" fill="rgb(236,157,25)" fg:x="716919970141" fg:w="145527567"/><text x="69.6771%" y="447.50"></text></g><g><title>handle_mm_fault (145,527,567 samples, 0.01%)</title><rect x="69.4271%" y="421" width="0.0141%" height="15" fill="rgb(219,209,0)" fg:x="716919970141" fg:w="145527567"/><text x="69.6771%" y="431.50"></text></g><g><title>sysmalloc (805,472,759 samples, 0.08%)</title><rect x="69.3638%" y="485" width="0.0780%" height="15" fill="rgb(240,116,54)" fg:x="716266177733" fg:w="805472759"/><text x="69.6138%" y="495.50"></text></g><g><title>_int_malloc (848,500,791 samples, 0.08%)</title><rect x="69.3614%" y="501" width="0.0822%" height="15" fill="rgb(216,10,36)" fg:x="716241653120" fg:w="848500791"/><text x="69.6114%" y="511.50"></text></g><g><title>clear_huge_page (2,461,810,904 samples, 0.24%)</title><rect x="69.4487%" y="405" width="0.2384%" height="15" fill="rgb(222,72,44)" fg:x="717142572031" fg:w="2461810904"/><text x="69.6987%" y="415.50"></text></g><g><title>clear_page_erms (2,338,467,067 samples, 0.23%)</title><rect x="69.4606%" y="389" width="0.2265%" height="15" fill="rgb(232,159,9)" fg:x="717265915868" fg:w="2338467067"/><text x="69.7106%" y="399.50"></text></g><g><title>clear_page_erms (3,798,311,630 samples, 0.37%)</title><rect x="69.7232%" y="341" width="0.3678%" height="15" fill="rgb(210,39,32)" fg:x="719977474966" fg:w="3798311630"/><text x="69.9732%" y="351.50"></text></g><g><title>asm_exc_page_fault (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="501" width="0.6549%" height="15" fill="rgb(216,194,45)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="511.50"></text></g><g><title>exc_page_fault (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="485" width="0.6549%" height="15" fill="rgb(218,18,35)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="495.50"></text></g><g><title>do_user_addr_fault (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="469" width="0.6549%" height="15" fill="rgb(207,83,51)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="479.50"></text></g><g><title>handle_mm_fault (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="453" width="0.6549%" height="15" fill="rgb(225,63,43)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="463.50"></text></g><g><title>__handle_mm_fault (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="437" width="0.6549%" height="15" fill="rgb(207,57,36)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="447.50"></text></g><g><title>do_huge_pmd_anonymous_page (6,762,722,917 samples, 0.65%)</title><rect x="69.4436%" y="421" width="0.6549%" height="15" fill="rgb(216,99,33)" fg:x="717090153911" fg:w="6762722917"/><text x="69.6936%" y="431.50"></text></g><g><title>vma_alloc_folio (4,174,482,679 samples, 0.40%)</title><rect x="69.6942%" y="405" width="0.4043%" height="15" fill="rgb(225,42,16)" fg:x="719678394149" fg:w="4174482679"/><text x="69.9442%" y="415.50"></text></g><g><title>__folio_alloc (4,165,226,484 samples, 0.40%)</title><rect x="69.6951%" y="389" width="0.4034%" height="15" fill="rgb(220,201,45)" fg:x="719687650344" fg:w="4165226484"/><text x="69.9451%" y="399.50"></text></g><g><title>__alloc_pages (4,165,226,484 samples, 0.40%)</title><rect x="69.6951%" y="373" width="0.4034%" height="15" fill="rgb(225,33,4)" fg:x="719687650344" fg:w="4165226484"/><text x="69.9451%" y="383.50"></text></g><g><title>get_page_from_freelist (4,165,226,484 samples, 0.40%)</title><rect x="69.6951%" y="357" width="0.4034%" height="15" fill="rgb(224,33,50)" fg:x="719687650344" fg:w="4165226484"/><text x="69.9451%" y="367.50"></text></g><g><title>__GI___libc_realloc (16,868,943,898 samples, 1.63%)</title><rect x="68.4652%" y="533" width="1.6336%" height="15" fill="rgb(246,198,51)" fg:x="706987018227" fg:w="16868943898"/><text x="68.7152%" y="543.50"></text></g><g><title>_int_realloc (16,831,932,189 samples, 1.63%)</title><rect x="68.4688%" y="517" width="1.6300%" height="15" fill="rgb(205,22,4)" fg:x="707024029936" fg:w="16831932189"/><text x="68.7188%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16,875,113,042 samples, 1.63%)</title><rect x="68.4649%" y="581" width="1.6342%" height="15" fill="rgb(206,3,8)" fg:x="706983934679" fg:w="16875113042"/><text x="68.7149%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16,875,113,042 samples, 1.63%)</title><rect x="68.4649%" y="565" width="1.6342%" height="15" fill="rgb(251,23,15)" fg:x="706983934679" fg:w="16875113042"/><text x="68.7149%" y="575.50"></text></g><g><title>alloc::alloc::realloc (16,872,029,494 samples, 1.63%)</title><rect x="68.4652%" y="549" width="1.6339%" height="15" fill="rgb(252,88,28)" fg:x="706987018227" fg:w="16872029494"/><text x="68.7152%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,887,446,004 samples, 1.64%)</title><rect x="68.4646%" y="645" width="1.6354%" height="15" fill="rgb(212,127,14)" fg:x="706980852355" fg:w="16887446004"/><text x="68.7146%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (16,887,446,004 samples, 1.64%)</title><rect x="68.4646%" y="629" width="1.6354%" height="15" fill="rgb(247,145,37)" fg:x="706980852355" fg:w="16887446004"/><text x="68.7146%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (16,887,446,004 samples, 1.64%)</title><rect x="68.4646%" y="613" width="1.6354%" height="15" fill="rgb(209,117,53)" fg:x="706980852355" fg:w="16887446004"/><text x="68.7146%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,884,363,680 samples, 1.64%)</title><rect x="68.4649%" y="597" width="1.6351%" height="15" fill="rgb(212,90,42)" fg:x="706983934679" fg:w="16884363680"/><text x="68.7149%" y="607.50"></text></g><g><title>__cgroup_throttle_swaprate (299,083,107 samples, 0.03%)</title><rect x="70.6809%" y="549" width="0.0290%" height="15" fill="rgb(218,164,37)" fg:x="729867230240" fg:w="299083107"/><text x="70.9309%" y="559.50"></text></g><g><title>blk_cgroup_congested (252,819,497 samples, 0.02%)</title><rect x="70.6854%" y="533" width="0.0245%" height="15" fill="rgb(246,65,34)" fg:x="729913493850" fg:w="252819497"/><text x="70.9354%" y="543.50"></text></g><g><title>__count_memcg_events (542,719,616 samples, 0.05%)</title><rect x="70.7317%" y="517" width="0.0526%" height="15" fill="rgb(231,100,33)" fg:x="730391410024" fg:w="542719616"/><text x="70.9817%" y="527.50"></text></g><g><title>cgroup_rstat_updated (400,858,982 samples, 0.04%)</title><rect x="70.7454%" y="501" width="0.0388%" height="15" fill="rgb(228,126,14)" fg:x="730533270658" fg:w="400858982"/><text x="70.9954%" y="511.50"></text></g><g><title>charge_memcg (934,390,900 samples, 0.09%)</title><rect x="70.7180%" y="533" width="0.0905%" height="15" fill="rgb(215,173,21)" fg:x="730249554119" fg:w="934390900"/><text x="70.9680%" y="543.50"></text></g><g><title>try_charge_memcg (191,225,739 samples, 0.02%)</title><rect x="70.7899%" y="517" width="0.0185%" height="15" fill="rgb(210,6,40)" fg:x="730992719280" fg:w="191225739"/><text x="71.0399%" y="527.50"></text></g><g><title>__mem_cgroup_charge (1,187,202,815 samples, 0.11%)</title><rect x="70.7099%" y="549" width="0.1150%" height="15" fill="rgb(212,48,18)" fg:x="730166313347" fg:w="1187202815"/><text x="70.9599%" y="559.50"></text></g><g><title>get_mem_cgroup_from_mm (169,571,143 samples, 0.02%)</title><rect x="70.8085%" y="533" width="0.0164%" height="15" fill="rgb(230,214,11)" fg:x="731183945019" fg:w="169571143"/><text x="71.0585%" y="543.50"></text></g><g><title>__page_set_anon_rmap (163,417,912 samples, 0.02%)</title><rect x="70.8249%" y="549" width="0.0158%" height="15" fill="rgb(254,105,39)" fg:x="731353516162" fg:w="163417912"/><text x="71.0749%" y="559.50"></text></g><g><title>_raw_spin_lock (2,176,986,882 samples, 0.21%)</title><rect x="70.8413%" y="549" width="0.2108%" height="15" fill="rgb(245,158,5)" fg:x="731523099200" fg:w="2176986882"/><text x="71.0913%" y="559.50"></text></g><g><title>clear_huge_page (2,240,879,427 samples, 0.22%)</title><rect x="71.0593%" y="533" width="0.2170%" height="15" fill="rgb(249,208,11)" fg:x="733774095620" fg:w="2240879427"/><text x="71.3093%" y="543.50"></text></g><g><title>clear_page_erms (2,117,531,659 samples, 0.21%)</title><rect x="71.0712%" y="517" width="0.2051%" height="15" fill="rgb(210,39,28)" fg:x="733897443388" fg:w="2117531659"/><text x="71.3212%" y="527.50"></text></g><g><title>clear_page_erms (3,907,497,704 samples, 0.38%)</title><rect x="71.3037%" y="469" width="0.3784%" height="15" fill="rgb(211,56,53)" fg:x="736298343768" fg:w="3907497704"/><text x="71.5537%" y="479.50"></text></g><g><title>do_huge_pmd_anonymous_page (6,505,738,293 samples, 0.63%)</title><rect x="71.0560%" y="549" width="0.6300%" height="15" fill="rgb(226,201,30)" fg:x="733740171368" fg:w="6505738293"/><text x="71.3060%" y="559.50"></text></g><g><title>vma_alloc_folio (4,178,504,083 samples, 0.40%)</title><rect x="71.2814%" y="533" width="0.4046%" height="15" fill="rgb(239,101,34)" fg:x="736067405578" fg:w="4178504083"/><text x="71.5314%" y="543.50"></text></g><g><title>__folio_alloc (4,172,335,752 samples, 0.40%)</title><rect x="71.2820%" y="517" width="0.4041%" height="15" fill="rgb(226,209,5)" fg:x="736073573909" fg:w="4172335752"/><text x="71.5320%" y="527.50"></text></g><g><title>__alloc_pages (4,169,251,395 samples, 0.40%)</title><rect x="71.2823%" y="501" width="0.4038%" height="15" fill="rgb(250,105,47)" fg:x="736076658266" fg:w="4169251395"/><text x="71.5323%" y="511.50"></text></g><g><title>get_page_from_freelist (4,169,251,395 samples, 0.40%)</title><rect x="71.2823%" y="485" width="0.4038%" height="15" fill="rgb(230,72,3)" fg:x="736076658266" fg:w="4169251395"/><text x="71.5323%" y="495.50"></text></g><g><title>lru_add_fn (469,442,685 samples, 0.05%)</title><rect x="71.7120%" y="517" width="0.0455%" height="15" fill="rgb(232,218,39)" fg:x="740514190342" fg:w="469442685"/><text x="71.9620%" y="527.50"></text></g><g><title>folio_add_lru (842,561,261 samples, 0.08%)</title><rect x="71.6860%" y="549" width="0.0816%" height="15" fill="rgb(248,166,6)" fg:x="740245909661" fg:w="842561261"/><text x="71.9360%" y="559.50"></text></g><g><title>folio_batch_move_lru (722,307,054 samples, 0.07%)</title><rect x="71.6977%" y="533" width="0.0699%" height="15" fill="rgb(247,89,20)" fg:x="740366163868" fg:w="722307054"/><text x="71.9477%" y="543.50"></text></g><g><title>release_pages (104,837,895 samples, 0.01%)</title><rect x="71.7575%" y="517" width="0.0102%" height="15" fill="rgb(248,130,54)" fg:x="740983633027" fg:w="104837895"/><text x="72.0075%" y="527.50"></text></g><g><title>__mod_lruvec_page_state (191,193,737 samples, 0.02%)</title><rect x="71.7793%" y="533" width="0.0185%" height="15" fill="rgb(234,196,4)" fg:x="741208739006" fg:w="191193737"/><text x="72.0293%" y="543.50"></text></g><g><title>page_add_new_anon_rmap (268,278,557 samples, 0.03%)</title><rect x="71.7721%" y="549" width="0.0260%" height="15" fill="rgb(250,143,31)" fg:x="741134724889" fg:w="268278557"/><text x="72.0221%" y="559.50"></text></g><g><title>pmd_page_vaddr (225,135,114 samples, 0.02%)</title><rect x="71.8034%" y="549" width="0.0218%" height="15" fill="rgb(211,110,34)" fg:x="741458504376" fg:w="225135114"/><text x="72.0534%" y="559.50"></text></g><g><title>_raw_spin_trylock (120,270,355 samples, 0.01%)</title><rect x="71.9023%" y="485" width="0.0116%" height="15" fill="rgb(215,124,48)" fg:x="742479147823" fg:w="120270355"/><text x="72.1523%" y="495.50"></text></g><g><title>clear_page_erms (378,948,329 samples, 0.04%)</title><rect x="71.9145%" y="485" width="0.0367%" height="15" fill="rgb(216,46,13)" fg:x="742605585467" fg:w="378948329"/><text x="72.1645%" y="495.50"></text></g><g><title>get_page_from_freelist (1,128,267,289 samples, 0.11%)</title><rect x="71.8730%" y="501" width="0.1093%" height="15" fill="rgb(205,184,25)" fg:x="742176949481" fg:w="1128267289"/><text x="72.1230%" y="511.50"></text></g><g><title>rmqueue_bulk (320,682,974 samples, 0.03%)</title><rect x="71.9512%" y="485" width="0.0311%" height="15" fill="rgb(228,1,10)" fg:x="742984533796" fg:w="320682974"/><text x="72.2012%" y="495.50"></text></g><g><title>__folio_alloc (1,421,172,139 samples, 0.14%)</title><rect x="71.8459%" y="533" width="0.1376%" height="15" fill="rgb(213,116,27)" fg:x="741896377873" fg:w="1421172139"/><text x="72.0959%" y="543.50"></text></g><g><title>__alloc_pages (1,393,413,682 samples, 0.13%)</title><rect x="71.8485%" y="517" width="0.1349%" height="15" fill="rgb(241,95,50)" fg:x="741924136330" fg:w="1393413682"/><text x="72.0985%" y="527.50"></text></g><g><title>__handle_mm_fault (14,319,928,920 samples, 1.39%)</title><rect x="70.6048%" y="565" width="1.3868%" height="15" fill="rgb(238,48,32)" fg:x="729080890905" fg:w="14319928920"/><text x="70.8548%" y="575.50"></text></g><g><title>vma_alloc_folio (1,609,273,578 samples, 0.16%)</title><rect x="71.8357%" y="549" width="0.1558%" height="15" fill="rgb(235,113,49)" fg:x="741791546247" fg:w="1609273578"/><text x="72.0857%" y="559.50"></text></g><g><title>count_memcg_events.constprop.0 (141,861,557 samples, 0.01%)</title><rect x="71.9924%" y="565" width="0.0137%" height="15" fill="rgb(205,127,43)" fg:x="743410071714" fg:w="141861557"/><text x="72.2424%" y="575.50"></text></g><g><title>handle_mm_fault (14,634,497,103 samples, 1.42%)</title><rect x="70.5914%" y="581" width="1.4172%" height="15" fill="rgb(250,162,2)" fg:x="728942113522" fg:w="14634497103"/><text x="70.8414%" y="591.50"></text></g><g><title>down_read_trylock (107,946,768 samples, 0.01%)</title><rect x="72.0145%" y="565" width="0.0105%" height="15" fill="rgb(220,13,41)" fg:x="743638283551" fg:w="107946768"/><text x="72.2645%" y="575.50"></text></g><g><title>lock_mm_and_find_vma (644,455,139 samples, 0.06%)</title><rect x="72.0086%" y="581" width="0.0624%" height="15" fill="rgb(249,221,25)" fg:x="743576610625" fg:w="644455139"/><text x="72.2586%" y="591.50"></text></g><g><title>find_vma (474,835,445 samples, 0.05%)</title><rect x="72.0250%" y="565" width="0.0460%" height="15" fill="rgb(215,208,19)" fg:x="743746230319" fg:w="474835445"/><text x="72.2750%" y="575.50"></text></g><g><title>mt_find (462,502,098 samples, 0.04%)</title><rect x="72.0262%" y="549" width="0.0448%" height="15" fill="rgb(236,175,2)" fg:x="743758563666" fg:w="462502098"/><text x="72.2762%" y="559.50"></text></g><g><title>mtree_range_walk (329,897,879 samples, 0.03%)</title><rect x="72.0390%" y="533" width="0.0319%" height="15" fill="rgb(241,52,2)" fg:x="743891167885" fg:w="329897879"/><text x="72.2890%" y="543.50"></text></g><g><title>do_user_addr_fault (15,602,717,502 samples, 1.51%)</title><rect x="70.5654%" y="597" width="1.5110%" height="15" fill="rgb(248,140,14)" fg:x="728673862716" fg:w="15602717502"/><text x="70.8154%" y="607.50"></text></g><g><title>exc_page_fault (15,685,963,027 samples, 1.52%)</title><rect x="70.5597%" y="613" width="1.5190%" height="15" fill="rgb(253,22,42)" fg:x="728615286267" fg:w="15685963027"/><text x="70.8097%" y="623.50"></text></g><g><title>asm_exc_page_fault (16,043,640,538 samples, 1.55%)</title><rect x="70.5412%" y="629" width="1.5537%" height="15" fill="rgb(234,61,47)" fg:x="728424106023" fg:w="16043640538"/><text x="70.7912%" y="639.50"></text></g><g><title>irqentry_exit_to_user_mode (157,246,119 samples, 0.02%)</title><rect x="72.0796%" y="613" width="0.0152%" height="15" fill="rgb(208,226,15)" fg:x="744310500442" fg:w="157246119"/><text x="72.3296%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (138,739,530 samples, 0.01%)</title><rect x="72.0814%" y="597" width="0.0134%" height="15" fill="rgb(217,221,4)" fg:x="744329007031" fg:w="138739530"/><text x="72.3314%" y="607.50"></text></g><g><title>error_entry (1,939,543,899 samples, 0.19%)</title><rect x="72.0979%" y="629" width="0.1878%" height="15" fill="rgb(212,174,34)" fg:x="744498593637" fg:w="1939543899"/><text x="72.3479%" y="639.50"></text></g><g><title>sync_regs (1,853,191,750 samples, 0.18%)</title><rect x="72.1062%" y="613" width="0.1795%" height="15" fill="rgb(253,83,4)" fg:x="744584945786" fg:w="1853191750"/><text x="72.3562%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40,262,131,992 samples, 3.90%)</title><rect x="68.3873%" y="661" width="3.8990%" height="15" fill="rgb(250,195,49)" fg:x="706182175979" fg:w="40262131992"/><text x="68.6373%" y="671.50">allo..</text></g><g><title>core::ptr::write (22,576,009,612 samples, 2.19%)</title><rect x="70.1000%" y="645" width="2.1863%" height="15" fill="rgb(241,192,25)" fg:x="723868298359" fg:w="22576009612"/><text x="70.3500%" y="655.50">c..</text></g><g><title>&lt;arrow_ipc::gen::Schema::Type as flatbuffers::follow::Follow&gt;::follow (702,994,252 samples, 0.07%)</title><rect x="72.4177%" y="629" width="0.0681%" height="15" fill="rgb(208,124,10)" fg:x="747801879666" fg:w="702994252"/><text x="72.6677%" y="639.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar_at (702,994,252 samples, 0.07%)</title><rect x="72.4177%" y="613" width="0.0681%" height="15" fill="rgb(222,33,0)" fg:x="747801879666" fg:w="702994252"/><text x="72.6677%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (702,994,252 samples, 0.07%)</title><rect x="72.4177%" y="597" width="0.0681%" height="15" fill="rgb(234,209,28)" fg:x="747801879666" fg:w="702994252"/><text x="72.6677%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (702,994,252 samples, 0.07%)</title><rect x="72.4177%" y="581" width="0.0681%" height="15" fill="rgb(224,11,23)" fg:x="747801879666" fg:w="702994252"/><text x="72.6677%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (749,183,051 samples, 0.07%)</title><rect x="72.5707%" y="597" width="0.0726%" height="15" fill="rgb(232,99,1)" fg:x="749381169388" fg:w="749183051"/><text x="72.8207%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (749,183,051 samples, 0.07%)</title><rect x="72.5707%" y="581" width="0.0726%" height="15" fill="rgb(237,95,45)" fg:x="749381169388" fg:w="749183051"/><text x="72.8207%" y="591.50"></text></g><g><title>flatbuffers::table::Table::vtable (1,742,150,218 samples, 0.17%)</title><rect x="72.4861%" y="629" width="0.1687%" height="15" fill="rgb(208,109,11)" fg:x="748507958402" fg:w="1742150218"/><text x="72.7361%" y="639.50"></text></g><g><title>&lt;flatbuffers::primitives::BackwardsSOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,742,150,218 samples, 0.17%)</title><rect x="72.4861%" y="613" width="0.1687%" height="15" fill="rgb(216,190,48)" fg:x="748507958402" fg:w="1742150218"/><text x="72.7361%" y="623.50"></text></g><g><title>flatbuffers::endian_scalar::read_scalar (116,672,118 samples, 0.01%)</title><rect x="72.6435%" y="597" width="0.0113%" height="15" fill="rgb(251,171,36)" fg:x="750133436502" fg:w="116672118"/><text x="72.8935%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (116,672,118 samples, 0.01%)</title><rect x="72.6435%" y="581" width="0.0113%" height="15" fill="rgb(230,62,22)" fg:x="750133436502" fg:w="116672118"/><text x="72.8935%" y="591.50"></text></g><g><title>arrow_ipc::gen::Schema::Field::type_type (4,724,524,462 samples, 0.46%)</title><rect x="72.2863%" y="661" width="0.4575%" height="15" fill="rgb(225,114,35)" fg:x="746444307971" fg:w="4724524462"/><text x="72.5363%" y="671.50"></text></g><g><title>flatbuffers::table::Table::get (4,724,524,462 samples, 0.46%)</title><rect x="72.2863%" y="645" width="0.4575%" height="15" fill="rgb(215,118,42)" fg:x="746444307971" fg:w="4724524462"/><text x="72.5363%" y="655.50"></text></g><g><title>flatbuffers::vtable::VTable::get (918,723,813 samples, 0.09%)</title><rect x="72.6548%" y="629" width="0.0890%" height="15" fill="rgb(243,119,21)" fg:x="750250108620" fg:w="918723813"/><text x="72.9048%" y="639.50"></text></g><g><title>flatbuffers::vtable::VTable::num_bytes (110,981,240 samples, 0.01%)</title><rect x="72.7331%" y="613" width="0.0107%" height="15" fill="rgb(252,177,53)" fg:x="751057851193" fg:w="110981240"/><text x="72.9831%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (761,523,969 samples, 0.07%)</title><rect x="72.8187%" y="437" width="0.0737%" height="15" fill="rgb(237,209,29)" fg:x="751942589147" fg:w="761523969"/><text x="73.0687%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,541,450,106 samples, 0.15%)</title><rect x="72.7438%" y="453" width="0.1493%" height="15" fill="rgb(212,65,23)" fg:x="751168832433" fg:w="1541450106"/><text x="72.9938%" y="463.50"></text></g><g><title>checked_request2size (838,213,081 samples, 0.08%)</title><rect x="77.4748%" y="277" width="0.0812%" height="15" fill="rgb(230,222,46)" fg:x="800022393843" fg:w="838213081"/><text x="77.7248%" y="287.50"></text></g><g><title>_int_malloc (18,350,740,696 samples, 1.78%)</title><rect x="75.7819%" y="293" width="1.7771%" height="15" fill="rgb(215,135,32)" fg:x="782540638420" fg:w="18350740696"/><text x="76.0319%" y="303.50">_..</text></g><g><title>arena_for_chunk (983,289,588 samples, 0.10%)</title><rect x="77.5590%" y="293" width="0.0952%" height="15" fill="rgb(246,101,22)" fg:x="800891379116" fg:w="983289588"/><text x="77.8090%" y="303.50"></text></g><g><title>__irq_exit_rcu (147,958,580 samples, 0.01%)</title><rect x="77.6542%" y="261" width="0.0143%" height="15" fill="rgb(206,107,13)" fg:x="801874899612" fg:w="147958580"/><text x="77.9042%" y="271.50"></text></g><g><title>handle_softirqs (144,873,985 samples, 0.01%)</title><rect x="77.6545%" y="245" width="0.0140%" height="15" fill="rgb(250,100,44)" fg:x="801877984207" fg:w="144873985"/><text x="77.9045%" y="255.50"></text></g><g><title>run_timer_softirq (144,873,985 samples, 0.01%)</title><rect x="77.6545%" y="229" width="0.0140%" height="15" fill="rgb(231,147,38)" fg:x="801877984207" fg:w="144873985"/><text x="77.9045%" y="239.50"></text></g><g><title>__run_timers (144,873,985 samples, 0.01%)</title><rect x="77.6545%" y="213" width="0.0140%" height="15" fill="rgb(229,8,40)" fg:x="801877984207" fg:w="144873985"/><text x="77.9045%" y="223.50"></text></g><g><title>call_timer_fn (144,873,985 samples, 0.01%)</title><rect x="77.6545%" y="197" width="0.0140%" height="15" fill="rgb(221,135,30)" fg:x="801877984207" fg:w="144873985"/><text x="77.9045%" y="207.50"></text></g><g><title>fq_flush_timeout (144,873,985 samples, 0.01%)</title><rect x="77.6545%" y="181" width="0.0140%" height="15" fill="rgb(249,193,18)" fg:x="801877984207" fg:w="144873985"/><text x="77.9045%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (212,960,572 samples, 0.02%)</title><rect x="77.6542%" y="293" width="0.0206%" height="15" fill="rgb(209,133,39)" fg:x="801874668704" fg:w="212960572"/><text x="77.9042%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (212,729,664 samples, 0.02%)</title><rect x="77.6542%" y="277" width="0.0206%" height="15" fill="rgb(232,100,14)" fg:x="801874899612" fg:w="212729664"/><text x="77.9042%" y="287.50"></text></g><g><title>checked_request2size (748,749,977 samples, 0.07%)</title><rect x="77.6748%" y="293" width="0.0725%" height="15" fill="rgb(224,185,1)" fg:x="802087629276" fg:w="748749977"/><text x="77.9248%" y="303.50"></text></g><g><title>__GI___libc_malloc (43,788,912,797 samples, 4.24%)</title><rect x="73.5077%" y="309" width="4.2406%" height="15" fill="rgb(223,139,8)" fg:x="759056719532" fg:w="43788912797"/><text x="73.7577%" y="319.50">__GI_..</text></g><g><title>__rdl_alloc (2,357,558,003 samples, 0.23%)</title><rect x="77.7482%" y="309" width="0.2283%" height="15" fill="rgb(232,213,38)" fg:x="802845632329" fg:w="2357558003"/><text x="77.9982%" y="319.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,357,558,003 samples, 0.23%)</title><rect x="77.7482%" y="293" width="0.2283%" height="15" fill="rgb(207,94,22)" fg:x="802845632329" fg:w="2357558003"/><text x="77.9982%" y="303.50"></text></g><g><title>__rust_alloc (776,882,626 samples, 0.08%)</title><rect x="77.9765%" y="309" width="0.0752%" height="15" fill="rgb(219,183,54)" fg:x="805203190332" fg:w="776882626"/><text x="78.2265%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47,678,606,455 samples, 4.62%)</title><rect x="73.5071%" y="357" width="4.6172%" height="15" fill="rgb(216,185,54)" fg:x="759050556021" fg:w="47678606455"/><text x="73.7571%" y="367.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (47,678,606,455 samples, 4.62%)</title><rect x="73.5071%" y="341" width="4.6172%" height="15" fill="rgb(254,217,39)" fg:x="759050556021" fg:w="47678606455"/><text x="73.7571%" y="351.50">alloc..</text></g><g><title>alloc::alloc::alloc (47,678,606,455 samples, 4.62%)</title><rect x="73.5071%" y="325" width="4.6172%" height="15" fill="rgb(240,178,23)" fg:x="759050556021" fg:w="47678606455"/><text x="73.7571%" y="335.50">alloc..</text></g><g><title>core::ptr::read_volatile (749,089,518 samples, 0.07%)</title><rect x="78.0518%" y="309" width="0.0725%" height="15" fill="rgb(218,11,47)" fg:x="805980072958" fg:w="749089518"/><text x="78.3018%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (47,684,776,744 samples, 4.62%)</title><rect x="73.5071%" y="373" width="4.6178%" height="15" fill="rgb(218,51,51)" fg:x="759050556021" fg:w="47684776744"/><text x="73.7571%" y="383.50">alloc..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (50,196,848,915 samples, 4.86%)</title><rect x="73.2647%" y="389" width="4.8611%" height="15" fill="rgb(238,126,27)" fg:x="756547738544" fg:w="50196848915"/><text x="73.5147%" y="399.50">alloc:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (50,203,017,091 samples, 4.86%)</title><rect x="73.2647%" y="437" width="4.8617%" height="15" fill="rgb(249,202,22)" fg:x="756547738544" fg:w="50203017091"/><text x="73.5147%" y="447.50">core::..</text></g><g><title>core::ops::function::FnMut::call_mut (50,203,017,091 samples, 4.86%)</title><rect x="73.2647%" y="421" width="4.8617%" height="15" fill="rgb(254,195,49)" fg:x="756547738544" fg:w="50203017091"/><text x="73.5147%" y="431.50">core::..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (50,203,017,091 samples, 4.86%)</title><rect x="73.2647%" y="405" width="4.8617%" height="15" fill="rgb(208,123,14)" fg:x="756547738544" fg:w="50203017091"/><text x="73.5147%" y="415.50">alloc:..</text></g><g><title>arrow_schema::schema::Schema::new_with_metadata (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="661" width="5.3829%" height="15" fill="rgb(224,200,8)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="671.50">arrow_s..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="645" width="5.3829%" height="15" fill="rgb(217,61,36)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="655.50">&lt;T as c..</text></g><g><title>&lt;arrow_schema::fields::Fields as core::convert::From&lt;alloc::vec::Vec&lt;arrow_schema::field::Field&gt;&gt;&gt;::from (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="629" width="5.3829%" height="15" fill="rgb(206,35,45)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="639.50">&lt;arrow_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="613" width="5.3829%" height="15" fill="rgb(217,65,33)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="623.50">core::i..</text></g><g><title>&lt;arrow_schema::fields::Fields as core::iter::traits::collect::FromIterator&lt;arrow_schema::field::Field&gt;&gt;::from_iter (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="597" width="5.3829%" height="15" fill="rgb(222,158,48)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="607.50">&lt;arrow_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="581" width="5.3829%" height="15" fill="rgb(254,2,54)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="591.50">core::i..</text></g><g><title>&lt;arrow_schema::fields::Fields as core::iter::traits::collect::FromIterator&lt;alloc::sync::Arc&lt;arrow_schema::field::Field&gt;&gt;&gt;::from_iter (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="565" width="5.3829%" height="15" fill="rgb(250,143,38)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="575.50">&lt;arrow_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="549" width="5.3829%" height="15" fill="rgb(248,25,0)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="559.50">core::i..</text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="533" width="5.3829%" height="15" fill="rgb(206,152,27)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="543.50">&lt;alloc:..</text></g><g><title>&lt;I as alloc::sync::ToArcSlice&lt;T&gt;&gt;::to_arc_slice (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="517" width="5.3829%" height="15" fill="rgb(240,77,30)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="527.50">&lt;I as a..</text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::from_iter_exact (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="501" width="5.3829%" height="15" fill="rgb(231,5,3)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="511.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="485" width="5.3829%" height="15" fill="rgb(207,226,32)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="495.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (55,585,009,976 samples, 5.38%)</title><rect x="72.7438%" y="469" width="5.3829%" height="15" fill="rgb(222,207,47)" fg:x="751168832433" fg:w="55585009976"/><text x="72.9938%" y="479.50">&lt;core::..</text></g><g><title>core::option::Option&lt;T&gt;::map (54,043,559,870 samples, 5.23%)</title><rect x="72.8931%" y="453" width="5.2336%" height="15" fill="rgb(229,115,45)" fg:x="752710282539" fg:w="54043559870"/><text x="73.1431%" y="463.50">core::..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (736,891,147 samples, 0.07%)</title><rect x="78.1273%" y="629" width="0.0714%" height="15" fill="rgb(224,191,6)" fg:x="806760013399" fg:w="736891147"/><text x="78.3773%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (736,891,147 samples, 0.07%)</title><rect x="78.1273%" y="613" width="0.0714%" height="15" fill="rgb(230,227,24)" fg:x="806760013399" fg:w="736891147"/><text x="78.3773%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (764,648,465 samples, 0.07%)</title><rect x="78.1273%" y="661" width="0.0740%" height="15" fill="rgb(228,80,19)" fg:x="806760013399" fg:w="764648465"/><text x="78.3773%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (764,648,465 samples, 0.07%)</title><rect x="78.1273%" y="645" width="0.0740%" height="15" fill="rgb(247,229,0)" fg:x="806760013399" fg:w="764648465"/><text x="78.3773%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (696,779,742 samples, 0.07%)</title><rect x="78.3443%" y="629" width="0.0675%" height="15" fill="rgb(237,194,15)" fg:x="809001295261" fg:w="696779742"/><text x="78.5943%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (696,779,742 samples, 0.07%)</title><rect x="78.3443%" y="613" width="0.0675%" height="15" fill="rgb(219,203,20)" fg:x="809001295261" fg:w="696779742"/><text x="78.5943%" y="623.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::follow::Follow&gt;::follow (1,476,702,359 samples, 0.14%)</title><rect x="78.2697%" y="645" width="0.1430%" height="15" fill="rgb(234,128,8)" fg:x="808230623363" fg:w="1476702359"/><text x="78.5197%" y="655.50"></text></g><g><title>arrow_ipc::convert::fb_to_schema (199,086,611,756 samples, 19.28%)</title><rect x="59.1342%" y="677" width="19.2797%" height="15" fill="rgb(248,202,8)" fg:x="610633056567" fg:w="199086611756"/><text x="59.3842%" y="687.50">arrow_ipc::convert::fb_to_sche..</text></g><g><title>flatbuffers::vector::Vector&lt;T&gt;::get (2,195,006,459 samples, 0.21%)</title><rect x="78.2013%" y="661" width="0.2126%" height="15" fill="rgb(206,104,37)" fg:x="807524661864" fg:w="2195006459"/><text x="78.4513%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (175,829,338 samples, 0.02%)</title><rect x="78.4907%" y="453" width="0.0170%" height="15" fill="rgb(223,8,27)" fg:x="810512428695" fg:w="175829338"/><text x="78.7407%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (175,829,338 samples, 0.02%)</title><rect x="78.4907%" y="437" width="0.0170%" height="15" fill="rgb(216,217,28)" fg:x="810512428695" fg:w="175829338"/><text x="78.7407%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (965,502,556 samples, 0.09%)</title><rect x="78.4145%" y="469" width="0.0935%" height="15" fill="rgb(249,199,1)" fg:x="809725841308" fg:w="965502556"/><text x="78.6645%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8,694,962,324 samples, 0.84%)</title><rect x="79.4063%" y="437" width="0.8420%" height="15" fill="rgb(240,85,17)" fg:x="819967214001" fg:w="8694962324"/><text x="79.6563%" y="447.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::finish (845,156,136 samples, 0.08%)</title><rect x="80.2504%" y="437" width="0.0818%" height="15" fill="rgb(206,108,45)" fg:x="828683770380" fg:w="845156136"/><text x="80.5004%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (123,277,054 samples, 0.01%)</title><rect x="81.3350%" y="421" width="0.0119%" height="15" fill="rgb(245,210,41)" fg:x="839883811840" fg:w="123277054"/><text x="81.5850%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (863,515,365 samples, 0.08%)</title><rect x="81.4572%" y="389" width="0.0836%" height="15" fill="rgb(206,13,37)" fg:x="841145275411" fg:w="863515365"/><text x="81.7072%" y="399.50"></text></g><g><title>&lt;&amp;str as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (863,515,365 samples, 0.08%)</title><rect x="81.4572%" y="373" width="0.0836%" height="15" fill="rgb(250,61,18)" fg:x="841145275411" fg:w="863515365"/><text x="81.7072%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (619,994,952 samples, 0.06%)</title><rect x="81.5408%" y="389" width="0.0600%" height="15" fill="rgb(235,172,48)" fg:x="842008790776" fg:w="619994952"/><text x="81.7908%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (619,994,952 samples, 0.06%)</title><rect x="81.5408%" y="373" width="0.0600%" height="15" fill="rgb(249,201,17)" fg:x="842008790776" fg:w="619994952"/><text x="81.7908%" y="383.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (619,994,952 samples, 0.06%)</title><rect x="81.5408%" y="357" width="0.0600%" height="15" fill="rgb(219,208,6)" fg:x="842008790776" fg:w="619994952"/><text x="81.7908%" y="367.50"></text></g><g><title>core::slice::index::get_noubcheck (619,994,952 samples, 0.06%)</title><rect x="81.5408%" y="341" width="0.0600%" height="15" fill="rgb(248,31,23)" fg:x="842008790776" fg:w="619994952"/><text x="81.7908%" y="351.50"></text></g><g><title>core::str::converts::from_utf8 (12,596,967,794 samples, 1.22%)</title><rect x="81.6009%" y="389" width="1.2199%" height="15" fill="rgb(245,15,42)" fg:x="842628785728" fg:w="12596967794"/><text x="81.8509%" y="399.50"></text></g><g><title>core::str::validations::run_utf8_validation (11,742,527,151 samples, 1.14%)</title><rect x="81.6836%" y="373" width="1.1372%" height="15" fill="rgb(222,217,39)" fg:x="843483226371" fg:w="11742527151"/><text x="81.9336%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (536,728,500 samples, 0.05%)</title><rect x="82.7688%" y="357" width="0.0520%" height="15" fill="rgb(210,219,27)" fg:x="854689025022" fg:w="536728500"/><text x="83.0188%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (647,774,033 samples, 0.06%)</title><rect x="82.8384%" y="373" width="0.0627%" height="15" fill="rgb(252,166,36)" fg:x="855407737281" fg:w="647774033"/><text x="83.0884%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (706,383,502 samples, 0.07%)</title><rect x="83.0558%" y="341" width="0.0684%" height="15" fill="rgb(245,132,34)" fg:x="857652578379" fg:w="706383502"/><text x="83.3058%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (4,089,390,964 samples, 0.40%)</title><rect x="82.9011%" y="373" width="0.3960%" height="15" fill="rgb(236,54,3)" fg:x="856055511314" fg:w="4089390964"/><text x="83.1511%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,492,323,899 samples, 0.24%)</title><rect x="83.0558%" y="357" width="0.2414%" height="15" fill="rgb(241,173,43)" fg:x="857652578379" fg:w="2492323899"/><text x="83.3058%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,785,940,397 samples, 0.17%)</title><rect x="83.1242%" y="341" width="0.1730%" height="15" fill="rgb(215,190,9)" fg:x="858358961881" fg:w="1785940397"/><text x="83.3742%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (200,503,009 samples, 0.02%)</title><rect x="83.2777%" y="325" width="0.0194%" height="15" fill="rgb(242,101,16)" fg:x="859944399269" fg:w="200503009"/><text x="83.5277%" y="335.50"></text></g><g><title>&lt;&amp;str as flatbuffers::verifier::Verifiable&gt;::run_verifier (20,921,284,773 samples, 2.03%)</title><rect x="81.3470%" y="405" width="2.0260%" height="15" fill="rgb(223,190,21)" fg:x="840007088894" fg:w="20921284773"/><text x="81.5970%" y="415.50">&lt;..</text></g><g><title>flatbuffers::verifier::verify_vector_range (5,702,620,145 samples, 0.55%)</title><rect x="82.8208%" y="389" width="0.5522%" height="15" fill="rgb(215,228,25)" fg:x="855225753522" fg:w="5702620145"/><text x="83.0708%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (783,471,389 samples, 0.08%)</title><rect x="83.2971%" y="373" width="0.0759%" height="15" fill="rgb(225,36,22)" fg:x="860144902278" fg:w="783471389"/><text x="83.5471%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (786,557,367 samples, 0.08%)</title><rect x="83.4566%" y="389" width="0.0762%" height="15" fill="rgb(251,106,46)" fg:x="861792043309" fg:w="786557367"/><text x="83.7066%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (786,557,367 samples, 0.08%)</title><rect x="83.4566%" y="373" width="0.0762%" height="15" fill="rgb(208,90,1)" fg:x="861792043309" fg:w="786557367"/><text x="83.7066%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::step_by::StepBy&lt;core::ops::range::Range&lt;usize&gt;&gt; as core::iter::adapters::step_by::StepByImpl&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::spec_next (786,557,367 samples, 0.08%)</title><rect x="83.4566%" y="357" width="0.0762%" height="15" fill="rgb(243,10,4)" fg:x="861792043309" fg:w="786557367"/><text x="83.7066%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,477,465,115 samples, 0.14%)</title><rect x="83.5328%" y="389" width="0.1431%" height="15" fill="rgb(212,137,27)" fg:x="862578600676" fg:w="1477465115"/><text x="83.7828%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::step_by (1,539,200,578 samples, 0.15%)</title><rect x="83.6759%" y="389" width="0.1491%" height="15" fill="rgb(231,220,49)" fg:x="864056065791" fg:w="1539200578"/><text x="83.9259%" y="399.50"></text></g><g><title>core::iter::adapters::step_by::StepBy&lt;I&gt;::new (1,539,200,578 samples, 0.15%)</title><rect x="83.6759%" y="373" width="0.1491%" height="15" fill="rgb(237,96,20)" fg:x="864056065791" fg:w="1539200578"/><text x="83.9259%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::iter::adapters::step_by::SpecRangeSetup&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::setup (1,539,200,578 samples, 0.15%)</title><rect x="83.6759%" y="357" width="0.1491%" height="15" fill="rgb(239,229,30)" fg:x="864056065791" fg:w="1539200578"/><text x="83.9259%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::div_ceil (1,539,200,578 samples, 0.15%)</title><rect x="83.6759%" y="341" width="0.1491%" height="15" fill="rgb(219,65,33)" fg:x="864056065791" fg:w="1539200578"/><text x="83.9259%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (731,010,061 samples, 0.07%)</title><rect x="83.9701%" y="373" width="0.0708%" height="15" fill="rgb(243,134,7)" fg:x="867094357022" fg:w="731010061"/><text x="84.2201%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_mul (1,647,460,121 samples, 0.16%)</title><rect x="84.0409%" y="373" width="0.1595%" height="15" fill="rgb(216,177,54)" fg:x="867825367083" fg:w="1647460121"/><text x="84.2909%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,647,460,121 samples, 0.16%)</title><rect x="84.0409%" y="357" width="0.1595%" height="15" fill="rgb(211,160,20)" fg:x="867825367083" fg:w="1647460121"/><text x="84.2909%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1,647,460,121 samples, 0.16%)</title><rect x="84.0409%" y="341" width="0.1595%" height="15" fill="rgb(239,85,39)" fg:x="867825367083" fg:w="1647460121"/><text x="84.2909%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (706,402,309 samples, 0.07%)</title><rect x="84.3633%" y="341" width="0.0684%" height="15" fill="rgb(232,125,22)" fg:x="871153948110" fg:w="706402309"/><text x="84.6133%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (5,721,999,202 samples, 0.55%)</title><rect x="84.2005%" y="373" width="0.5541%" height="15" fill="rgb(244,57,34)" fg:x="869472827204" fg:w="5721999202"/><text x="84.4505%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (4,040,878,296 samples, 0.39%)</title><rect x="84.3633%" y="357" width="0.3913%" height="15" fill="rgb(214,203,32)" fg:x="871153948110" fg:w="4040878296"/><text x="84.6133%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (3,334,475,987 samples, 0.32%)</title><rect x="84.4317%" y="341" width="0.3229%" height="15" fill="rgb(207,58,43)" fg:x="871860350419" fg:w="3334475987"/><text x="84.6817%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (811,254,502 samples, 0.08%)</title><rect x="84.6760%" y="325" width="0.0786%" height="15" fill="rgb(215,193,15)" fg:x="874383571904" fg:w="811254502"/><text x="84.9260%" y="335.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (15,760,034,605 samples, 1.53%)</title><rect x="83.3730%" y="405" width="1.5262%" height="15" fill="rgb(232,15,44)" fg:x="860928373667" fg:w="15760034605"/><text x="83.6230%" y="415.50"></text></g><g><title>flatbuffers::verifier::verify_vector_range (11,093,141,903 samples, 1.07%)</title><rect x="83.8250%" y="389" width="1.0743%" height="15" fill="rgb(212,3,48)" fg:x="865595266369" fg:w="11093141903"/><text x="84.0750%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,493,581,866 samples, 0.14%)</title><rect x="84.7546%" y="373" width="0.1446%" height="15" fill="rgb(218,128,7)" fg:x="875194826406" fg:w="1493581866"/><text x="85.0046%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1,434,363,711 samples, 0.14%)</title><rect x="84.8995%" y="405" width="0.1389%" height="15" fill="rgb(226,216,39)" fg:x="876691494167" fg:w="1434363711"/><text x="85.1495%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (2,091,647,800 samples, 0.20%)</title><rect x="85.5616%" y="373" width="0.2026%" height="15" fill="rgb(243,47,51)" fg:x="883528563447" fg:w="2091647800"/><text x="85.8116%" y="383.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (49,916,051,590 samples, 4.83%)</title><rect x="81.3470%" y="421" width="4.8339%" height="15" fill="rgb(241,183,40)" fg:x="840007088894" fg:w="49916051590"/><text x="81.5970%" y="431.50">&lt;flatb..</text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (11,797,282,606 samples, 1.14%)</title><rect x="85.0384%" y="405" width="1.1425%" height="15" fill="rgb(231,217,32)" fg:x="878125857878" fg:w="11797282606"/><text x="85.2884%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (6,394,577,037 samples, 0.62%)</title><rect x="85.5616%" y="389" width="0.6193%" height="15" fill="rgb(229,61,38)" fg:x="883528563447" fg:w="6394577037"/><text x="85.8116%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (4,302,929,237 samples, 0.42%)</title><rect x="85.7642%" y="373" width="0.4167%" height="15" fill="rgb(225,210,5)" fg:x="885620211247" fg:w="4302929237"/><text x="86.0142%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (906,853,297 samples, 0.09%)</title><rect x="86.0931%" y="357" width="0.0878%" height="15" fill="rgb(231,79,45)" fg:x="889016287187" fg:w="906853297"/><text x="86.3431%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (2,263,934,321 samples, 0.22%)</title><rect x="86.8497%" y="405" width="0.2192%" height="15" fill="rgb(224,100,7)" fg:x="896828984483" fg:w="2263934321"/><text x="87.0997%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (783,462,938 samples, 0.08%)</title><rect x="87.4046%" y="373" width="0.0759%" height="15" fill="rgb(241,198,18)" fg:x="902559594492" fg:w="783462938"/><text x="87.6546%" y="383.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (22,710,919,241 samples, 2.20%)</title><rect x="86.1854%" y="421" width="2.1993%" height="15" fill="rgb(252,97,53)" fg:x="889969424627" fg:w="22710919241"/><text x="86.4354%" y="431.50">f..</text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (13,587,425,064 samples, 1.32%)</title><rect x="87.0689%" y="405" width="1.3158%" height="15" fill="rgb(220,88,7)" fg:x="899092918804" fg:w="13587425064"/><text x="87.3189%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (10,120,749,376 samples, 0.98%)</title><rect x="87.4046%" y="389" width="0.9801%" height="15" fill="rgb(213,176,14)" fg:x="902559594492" fg:w="10120749376"/><text x="87.6546%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (9,337,286,438 samples, 0.90%)</title><rect x="87.4805%" y="373" width="0.9042%" height="15" fill="rgb(246,73,7)" fg:x="903343057430" fg:w="9337286438"/><text x="87.7305%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (104,834,026 samples, 0.01%)</title><rect x="88.3746%" y="357" width="0.0102%" height="15" fill="rgb(245,64,36)" fg:x="912575509842" fg:w="104834026"/><text x="88.6246%" y="367.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (87,723,466,231 samples, 8.50%)</title><rect x="80.3323%" y="437" width="8.4952%" height="15" fill="rgb(245,80,10)" fg:x="829528926516" fg:w="87723466231"/><text x="80.5823%" y="447.50">flatbuffers:..</text></g><g><title>flatbuffers::verifier::trace_field (4,572,048,879 samples, 0.44%)</title><rect x="88.3847%" y="421" width="0.4428%" height="15" fill="rgb(232,107,50)" fg:x="912680343868" fg:w="4572048879"/><text x="88.6347%" y="431.50"></text></g><g><title>flatbuffers::verifier::append_trace (3,045,174,658 samples, 0.29%)</title><rect x="88.5326%" y="405" width="0.2949%" height="15" fill="rgb(253,3,0)" fg:x="914207218089" fg:w="3045174658"/><text x="88.7826%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (1,548,402,698 samples, 0.15%)</title><rect x="88.6775%" y="389" width="0.1499%" height="15" fill="rgb(212,99,53)" fg:x="915703990049" fg:w="1548402698"/><text x="88.9275%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6,295,812,777 samples, 0.61%)</title><rect x="89.7173%" y="357" width="0.6097%" height="15" fill="rgb(249,111,54)" fg:x="926441229294" fg:w="6295812777"/><text x="89.9673%" y="367.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Precision as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,940,880,350 samples, 0.19%)</title><rect x="90.4853%" y="341" width="0.1880%" height="15" fill="rgb(249,55,30)" fg:x="934371874033" fg:w="1940880350"/><text x="90.7353%" y="351.50"></text></g><g><title>&lt;i16 as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,940,880,350 samples, 0.19%)</title><rect x="90.4853%" y="325" width="0.1880%" height="15" fill="rgb(237,47,42)" fg:x="934371874033" fg:w="1940880350"/><text x="90.7353%" y="335.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,940,880,350 samples, 0.19%)</title><rect x="90.4853%" y="309" width="0.1880%" height="15" fill="rgb(211,20,18)" fg:x="934371874033" fg:w="1940880350"/><text x="90.7353%" y="319.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,937,796,589 samples, 0.19%)</title><rect x="90.4856%" y="293" width="0.1877%" height="15" fill="rgb(231,203,46)" fg:x="934374957794" fg:w="1937796589"/><text x="90.7356%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (207,356,672 samples, 0.02%)</title><rect x="90.6532%" y="277" width="0.0201%" height="15" fill="rgb(237,142,3)" fg:x="936105397711" fg:w="207356672"/><text x="90.9032%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1,175,205,763 samples, 0.11%)</title><rect x="90.8432%" y="325" width="0.1138%" height="15" fill="rgb(241,107,1)" fg:x="938067570338" fg:w="1175205763"/><text x="91.0932%" y="335.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (5,542,522,977 samples, 0.54%)</title><rect x="90.6793%" y="341" width="0.5367%" height="15" fill="rgb(229,83,13)" fg:x="936374458635" fg:w="5542522977"/><text x="90.9293%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (2,674,205,511 samples, 0.26%)</title><rect x="90.9570%" y="325" width="0.2590%" height="15" fill="rgb(241,91,40)" fg:x="939242776101" fg:w="2674205511"/><text x="91.2070%" y="335.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,072,688,890 samples, 0.20%)</title><rect x="91.0153%" y="309" width="0.2007%" height="15" fill="rgb(225,3,45)" fg:x="939844292722" fg:w="2072688890"/><text x="91.2653%" y="319.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,977,068,817 samples, 0.19%)</title><rect x="91.0245%" y="293" width="0.1915%" height="15" fill="rgb(244,223,14)" fg:x="939939912795" fg:w="1977068817"/><text x="91.2745%" y="303.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (14,583,760,185 samples, 1.41%)</title><rect x="90.3297%" y="357" width="1.4123%" height="15" fill="rgb(224,124,37)" fg:x="932764789593" fg:w="14583760185"/><text x="90.5797%" y="367.50"></text></g><g><title>flatbuffers::verifier::trace_field (5,431,568,166 samples, 0.53%)</title><rect x="91.2160%" y="341" width="0.5260%" height="15" fill="rgb(251,171,30)" fg:x="941916981612" fg:w="5431568166"/><text x="91.4660%" y="351.50"></text></g><g><title>flatbuffers::verifier::append_trace (4,574,055,595 samples, 0.44%)</title><rect x="91.2991%" y="325" width="0.4430%" height="15" fill="rgb(236,46,54)" fg:x="942774494183" fg:w="4574055595"/><text x="91.5491%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (1,233,862,490 samples, 0.12%)</title><rect x="91.6225%" y="309" width="0.1195%" height="15" fill="rgb(245,213,5)" fg:x="946114687288" fg:w="1233862490"/><text x="91.8725%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (428,693,044 samples, 0.04%)</title><rect x="91.9096%" y="341" width="0.0415%" height="15" fill="rgb(230,144,27)" fg:x="949078855090" fg:w="428693044"/><text x="92.1596%" y="351.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_le_bytes (527,526,710 samples, 0.05%)</title><rect x="92.0831%" y="325" width="0.0511%" height="15" fill="rgb(220,86,6)" fg:x="950870804100" fg:w="527526710"/><text x="92.3331%" y="335.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_ne_bytes (527,526,710 samples, 0.05%)</title><rect x="92.0831%" y="309" width="0.0511%" height="15" fill="rgb(240,20,13)" fg:x="950870804100" fg:w="527526710"/><text x="92.3331%" y="319.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unsigned_abs (444,459,940 samples, 0.04%)</title><rect x="92.1342%" y="325" width="0.0430%" height="15" fill="rgb(217,89,34)" fg:x="951398330810" fg:w="444459940"/><text x="92.3842%" y="335.50"></text></g><g><title>core::num::&lt;impl i32&gt;::wrapping_abs (444,459,940 samples, 0.04%)</title><rect x="92.1342%" y="309" width="0.0430%" height="15" fill="rgb(229,13,5)" fg:x="951398330810" fg:w="444459940"/><text x="92.3842%" y="319.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (462,716,249 samples, 0.04%)</title><rect x="92.1772%" y="309" width="0.0448%" height="15" fill="rgb(244,67,35)" fg:x="951842790750" fg:w="462716249"/><text x="92.4272%" y="319.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (4,071,814,807 samples, 0.39%)</title><rect x="91.9511%" y="341" width="0.3943%" height="15" fill="rgb(221,40,2)" fg:x="949507548134" fg:w="4071814807"/><text x="92.2011%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,736,572,191 samples, 0.17%)</title><rect x="92.1772%" y="325" width="0.1682%" height="15" fill="rgb(237,157,21)" fg:x="951842790750" fg:w="1736572191"/><text x="92.4272%" y="335.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,273,855,942 samples, 0.12%)</title><rect x="92.2220%" y="309" width="0.1234%" height="15" fill="rgb(222,94,11)" fg:x="952305506999" fg:w="1273855942"/><text x="92.4720%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (391,736,141 samples, 0.04%)</title><rect x="92.3075%" y="293" width="0.0379%" height="15" fill="rgb(249,113,6)" fg:x="953187626800" fg:w="391736141"/><text x="92.5575%" y="303.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (1,813,705,267 samples, 0.18%)</title><rect x="92.3454%" y="341" width="0.1756%" height="15" fill="rgb(238,137,36)" fg:x="953579362941" fg:w="1813705267"/><text x="92.5954%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,243,058,753 samples, 0.12%)</title><rect x="92.4007%" y="325" width="0.1204%" height="15" fill="rgb(210,102,26)" fg:x="954150009455" fg:w="1243058753"/><text x="92.6507%" y="335.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,243,058,753 samples, 0.12%)</title><rect x="92.4007%" y="309" width="0.1204%" height="15" fill="rgb(218,30,30)" fg:x="954150009455" fg:w="1243058753"/><text x="92.6507%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (351,650,291 samples, 0.03%)</title><rect x="92.4870%" y="293" width="0.0341%" height="15" fill="rgb(214,67,26)" fg:x="955041417917" fg:w="351650291"/><text x="92.7370%" y="303.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (663,110,203 samples, 0.06%)</title><rect x="92.5210%" y="341" width="0.0642%" height="15" fill="rgb(251,9,53)" fg:x="955393068208" fg:w="663110203"/><text x="92.7710%" y="351.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::FloatingPoint as flatbuffers::verifier::Verifiable&gt;::run_verifier (31,572,244,873 samples, 3.06%)</title><rect x="89.6404%" y="373" width="3.0575%" height="15" fill="rgb(228,204,25)" fg:x="925646795608" fg:w="31572244873"/><text x="89.8904%" y="383.50">&lt;ar..</text></g><g><title>flatbuffers::verifier::Verifier::visit_table (9,870,490,703 samples, 0.96%)</title><rect x="91.7420%" y="357" width="0.9559%" height="15" fill="rgb(207,153,8)" fg:x="947348549778" fg:w="9870490703"/><text x="91.9920%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,162,862,070 samples, 0.11%)</title><rect x="92.5853%" y="341" width="0.1126%" height="15" fill="rgb(242,9,16)" fg:x="956056178411" fg:w="1162862070"/><text x="92.8353%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (786,609,976 samples, 0.08%)</title><rect x="92.8974%" y="341" width="0.0762%" height="15" fill="rgb(217,211,10)" fg:x="959279437185" fg:w="786609976"/><text x="93.1474%" y="351.50"></text></g><g><title>flatbuffers::verifier::Verifier::verify_union_variant (37,672,527,616 samples, 3.65%)</title><rect x="89.4870%" y="405" width="3.6482%" height="15" fill="rgb(219,228,52)" fg:x="924062376621" fg:w="37672527616"/><text x="89.7370%" y="415.50">flat..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (36,088,108,629 samples, 3.49%)</title><rect x="89.6404%" y="389" width="3.4948%" height="15" fill="rgb(231,92,29)" fg:x="925646795608" fg:w="36088108629"/><text x="89.8904%" y="399.50">&lt;fl..</text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (4,472,677,845 samples, 0.43%)</title><rect x="92.7021%" y="373" width="0.4331%" height="15" fill="rgb(232,8,23)" fg:x="957262226392" fg:w="4472677845"/><text x="92.9521%" y="383.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,455,467,052 samples, 0.24%)</title><rect x="92.8974%" y="357" width="0.2378%" height="15" fill="rgb(216,211,34)" fg:x="959279437185" fg:w="2455467052"/><text x="93.1474%" y="367.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,668,857,076 samples, 0.16%)</title><rect x="92.9736%" y="341" width="0.1616%" height="15" fill="rgb(236,151,0)" fg:x="960066047161" fg:w="1668857076"/><text x="93.2236%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (107,965,014 samples, 0.01%)</title><rect x="93.1247%" y="325" width="0.0105%" height="15" fill="rgb(209,168,3)" fg:x="961626939223" fg:w="107965014"/><text x="93.3747%" y="335.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (43,649,655,238 samples, 4.23%)</title><rect x="89.1976%" y="421" width="4.2271%" height="15" fill="rgb(208,129,28)" fg:x="921074018346" fg:w="43649655238"/><text x="89.4476%" y="431.50">&lt;arro..</text></g><g><title>flatbuffers::verifier::append_trace (2,988,769,347 samples, 0.29%)</title><rect x="93.1352%" y="405" width="0.2894%" height="15" fill="rgb(229,78,22)" fg:x="961734904237" fg:w="2988769347"/><text x="93.3852%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (1,375,711,685 samples, 0.13%)</title><rect x="93.2914%" y="389" width="0.1332%" height="15" fill="rgb(228,187,13)" fg:x="963347961899" fg:w="1375711685"/><text x="93.5414%" y="399.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Type as flatbuffers::verifier::Verifiable&gt;::run_verifier (2,985,950,057 samples, 0.29%)</title><rect x="93.4246%" y="421" width="0.2892%" height="15" fill="rgb(240,119,24)" fg:x="964723673584" fg:w="2985950057"/><text x="93.6746%" y="431.50"></text></g><g><title>&lt;u8 as flatbuffers::verifier::Verifiable&gt;::run_verifier (2,985,950,057 samples, 0.29%)</title><rect x="93.4246%" y="405" width="0.2892%" height="15" fill="rgb(209,194,42)" fg:x="964723673584" fg:w="2985950057"/><text x="93.6746%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,985,950,057 samples, 0.29%)</title><rect x="93.4246%" y="389" width="0.2892%" height="15" fill="rgb(247,200,46)" fg:x="964723673584" fg:w="2985950057"/><text x="93.6746%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (2,985,950,057 samples, 0.29%)</title><rect x="93.4246%" y="373" width="0.2892%" height="15" fill="rgb(218,76,16)" fg:x="964723673584" fg:w="2985950057"/><text x="93.6746%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (764,998,032 samples, 0.07%)</title><rect x="93.6397%" y="357" width="0.0741%" height="15" fill="rgb(225,21,48)" fg:x="966944625609" fg:w="764998032"/><text x="93.8897%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,358,303,652 samples, 0.23%)</title><rect x="93.7138%" y="421" width="0.2284%" height="15" fill="rgb(239,223,50)" fg:x="967709623641" fg:w="2358303652"/><text x="93.9638%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (2,572,505,678 samples, 0.25%)</title><rect x="94.1644%" y="405" width="0.2491%" height="15" fill="rgb(244,45,21)" fg:x="972362889468" fg:w="2572505678"/><text x="94.4144%" y="415.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (12,805,518,780 samples, 1.24%)</title><rect x="93.9431%" y="421" width="1.2401%" height="15" fill="rgb(232,33,43)" fg:x="970077183629" fg:w="12805518780"/><text x="94.1931%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (7,947,307,263 samples, 0.77%)</title><rect x="94.4135%" y="405" width="0.7696%" height="15" fill="rgb(209,8,3)" fg:x="974935395146" fg:w="7947307263"/><text x="94.6635%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (5,472,865,621 samples, 0.53%)</title><rect x="94.6532%" y="389" width="0.5300%" height="15" fill="rgb(214,25,53)" fg:x="977409836788" fg:w="5472865621"/><text x="94.9032%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (5,472,865,621 samples, 0.53%)</title><rect x="94.6532%" y="373" width="0.5300%" height="15" fill="rgb(254,186,54)" fg:x="977409836788" fg:w="5472865621"/><text x="94.9032%" y="383.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_union (76,323,734,870 samples, 7.39%)</title><rect x="88.8275%" y="437" width="7.3913%" height="15" fill="rgb(208,174,49)" fg:x="917252392747" fg:w="76323734870"/><text x="89.0775%" y="447.50">flatbuffer..</text></g><g><title>flatbuffers::verifier::trace_field (10,693,425,208 samples, 1.04%)</title><rect x="95.1832%" y="421" width="1.0356%" height="15" fill="rgb(233,191,51)" fg:x="982882702409" fg:w="10693425208"/><text x="95.4332%" y="431.50"></text></g><g><title>flatbuffers::verifier::append_trace (7,787,742,383 samples, 0.75%)</title><rect x="95.4646%" y="405" width="0.7542%" height="15" fill="rgb(222,134,10)" fg:x="985788385234" fg:w="7787742383"/><text x="95.7146%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (2,850,166,253 samples, 0.28%)</title><rect x="95.9427%" y="389" width="0.2760%" height="15" fill="rgb(230,226,20)" fg:x="990725961364" fg:w="2850166253"/><text x="96.1927%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (795,891,920 samples, 0.08%)</title><rect x="96.3039%" y="421" width="0.0771%" height="15" fill="rgb(251,111,25)" fg:x="994456110772" fg:w="795891920"/><text x="96.5539%" y="431.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_le_bytes (792,706,850 samples, 0.08%)</title><rect x="96.5434%" y="405" width="0.0768%" height="15" fill="rgb(224,40,46)" fg:x="996928796840" fg:w="792706850"/><text x="96.7934%" y="415.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_ne_bytes (792,706,850 samples, 0.08%)</title><rect x="96.5434%" y="389" width="0.0768%" height="15" fill="rgb(236,108,47)" fg:x="996928796840" fg:w="792706850"/><text x="96.7934%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::is_aligned (755,698,689 samples, 0.07%)</title><rect x="96.6238%" y="389" width="0.0732%" height="15" fill="rgb(234,93,0)" fg:x="997758524532" fg:w="755698689"/><text x="96.8738%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::deref_soffset (4,930,815,640 samples, 0.48%)</title><rect x="96.3810%" y="421" width="0.4775%" height="15" fill="rgb(224,213,32)" fg:x="995252002692" fg:w="4930815640"/><text x="96.6310%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (2,424,293,800 samples, 0.23%)</title><rect x="96.6238%" y="405" width="0.2348%" height="15" fill="rgb(251,11,48)" fg:x="997758524532" fg:w="2424293800"/><text x="96.8738%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,668,595,111 samples, 0.16%)</title><rect x="96.6969%" y="389" width="0.1616%" height="15" fill="rgb(236,173,5)" fg:x="998514223221" fg:w="1668595111"/><text x="96.9469%" y="399.50"></text></g><g><title>flatbuffers::verifier::Verifier::get_u16 (1,600,472,147 samples, 0.15%)</title><rect x="96.8585%" y="421" width="0.1550%" height="15" fill="rgb(230,95,12)" fg:x="1000182818332" fg:w="1600472147"/><text x="97.1085%" y="431.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,536,169,731 samples, 0.15%)</title><rect x="96.8647%" y="405" width="0.1488%" height="15" fill="rgb(232,209,1)" fg:x="1000247120748" fg:w="1536169731"/><text x="97.1147%" y="415.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,529,999,472 samples, 0.15%)</title><rect x="96.8653%" y="389" width="0.1482%" height="15" fill="rgb(232,6,1)" fg:x="1000253291007" fg:w="1529999472"/><text x="97.1153%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (771,156,221 samples, 0.07%)</title><rect x="96.9388%" y="373" width="0.0747%" height="15" fill="rgb(210,224,50)" fg:x="1001012134258" fg:w="771156221"/><text x="97.1888%" y="383.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier (190,314,697,290 samples, 18.43%)</title><rect x="78.6648%" y="453" width="18.4302%" height="15" fill="rgb(228,127,35)" fg:x="812310753640" fg:w="190314697290"/><text x="78.9148%" y="463.50">&lt;arrow_ipc::gen::Schema::Fiel..</text></g><g><title>flatbuffers::verifier::Verifier::visit_table (9,049,323,313 samples, 0.88%)</title><rect x="96.2187%" y="437" width="0.8763%" height="15" fill="rgb(245,102,45)" fg:x="993576127617" fg:w="9049323313"/><text x="96.4687%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (817,479,537 samples, 0.08%)</title><rect x="97.0159%" y="421" width="0.0792%" height="15" fill="rgb(214,1,49)" fg:x="1001807971393" fg:w="817479537"/><text x="97.2659%" y="431.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (195,218,166,359 samples, 18.91%)</title><rect x="78.5080%" y="469" width="18.9051%" height="15" fill="rgb(226,163,40)" fg:x="810691343864" fg:w="195218166359"/><text x="78.7580%" y="479.50">&lt;flatbuffers::primitives::Forw..</text></g><g><title>flatbuffers::verifier::Verifier::get_uoffset (3,271,714,530 samples, 0.32%)</title><rect x="97.0963%" y="453" width="0.3168%" height="15" fill="rgb(239,212,28)" fg:x="1002637795693" fg:w="3271714530"/><text x="97.3463%" y="463.50"></text></g><g><title>flatbuffers::verifier::Verifier::in_buffer (1,536,149,238 samples, 0.15%)</title><rect x="97.2643%" y="437" width="0.1488%" height="15" fill="rgb(220,20,13)" fg:x="1004373360985" fg:w="1536149238"/><text x="97.5143%" y="447.50"></text></g><g><title>flatbuffers::verifier::Verifier::range_in_buffer (1,536,149,238 samples, 0.15%)</title><rect x="97.2643%" y="421" width="0.1488%" height="15" fill="rgb(210,164,35)" fg:x="1004373360985" fg:w="1536149238"/><text x="97.5143%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (755,678,531 samples, 0.07%)</title><rect x="97.3399%" y="405" width="0.0732%" height="15" fill="rgb(248,109,41)" fg:x="1005153831692" fg:w="755678531"/><text x="97.5899%" y="415.50"></text></g><g><title>arrow_ipc::gen::Message::root_as_message (198,404,325,293 samples, 19.21%)</title><rect x="78.4142%" y="677" width="19.2136%" height="15" fill="rgb(238,23,50)" fg:x="809722754082" fg:w="198404325293"/><text x="78.6642%" y="687.50">arrow_ipc::gen::Message::root_..</text></g><g><title>flatbuffers::get_root::root (198,404,325,293 samples, 19.21%)</title><rect x="78.4142%" y="661" width="19.2136%" height="15" fill="rgb(211,48,49)" fg:x="809722754082" fg:w="198404325293"/><text x="78.6642%" y="671.50">flatbuffers::get_root::root</text></g><g><title>flatbuffers::get_root::root_with_opts (198,404,325,293 samples, 19.21%)</title><rect x="78.4142%" y="645" width="19.2136%" height="15" fill="rgb(223,36,21)" fg:x="809722754082" fg:w="198404325293"/><text x="78.6642%" y="655.50">flatbuffers::get_root::root_wi..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,404,325,293 samples, 19.21%)</title><rect x="78.4142%" y="629" width="19.2136%" height="15" fill="rgb(207,123,46)" fg:x="809722754082" fg:w="198404325293"/><text x="78.6642%" y="639.50">&lt;flatbuffers::primitives::Forw..</text></g><g><title>&lt;arrow_ipc::gen::Message::Message as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,404,325,293 samples, 19.21%)</title><rect x="78.4142%" y="613" width="19.2136%" height="15" fill="rgb(240,218,32)" fg:x="809722754082" fg:w="198404325293"/><text x="78.6642%" y="623.50">&lt;arrow_ipc::gen::Message::Mess..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_union (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="597" width="19.2133%" height="15" fill="rgb(252,5,43)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="607.50">flatbuffers::verifier::TableVe..</text></g><g><title>&lt;arrow_ipc::gen::Message::Message as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="581" width="19.2133%" height="15" fill="rgb(252,84,19)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="591.50">&lt;arrow_ipc::gen::Message::Mess..</text></g><g><title>flatbuffers::verifier::Verifier::verify_union_variant (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="565" width="19.2133%" height="15" fill="rgb(243,152,39)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="575.50">flatbuffers::verifier::Verifie..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="549" width="19.2133%" height="15" fill="rgb(234,160,15)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="559.50">&lt;flatbuffers::primitives::Forw..</text></g><g><title>&lt;arrow_ipc::gen::Schema::Schema as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="533" width="19.2133%" height="15" fill="rgb(237,34,20)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="543.50">&lt;arrow_ipc::gen::Schema::Schem..</text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="517" width="19.2133%" height="15" fill="rgb(229,97,13)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="527.50">flatbuffers::verifier::TableVe..</text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="501" width="19.2133%" height="15" fill="rgb(234,71,50)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="511.50">&lt;flatbuffers::primitives::Forw..</text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (198,401,238,067 samples, 19.21%)</title><rect x="78.4145%" y="485" width="19.2133%" height="15" fill="rgb(253,155,4)" fg:x="809725841308" fg:w="198401238067"/><text x="78.6645%" y="495.50">&lt;flatbuffers::vector::Vector&lt;f..</text></g><g><title>flatbuffers::verifier::trace_elem (2,217,569,152 samples, 0.21%)</title><rect x="97.4131%" y="469" width="0.2148%" height="15" fill="rgb(222,185,37)" fg:x="1005909510223" fg:w="2217569152"/><text x="97.6631%" y="479.50"></text></g><g><title>flatbuffers::verifier::append_trace (2,217,569,152 samples, 0.21%)</title><rect x="97.4131%" y="453" width="0.2148%" height="15" fill="rgb(251,177,13)" fg:x="1005909510223" fg:w="2217569152"/><text x="97.6631%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_mut (669,323,383 samples, 0.06%)</title><rect x="97.5630%" y="437" width="0.0648%" height="15" fill="rgb(250,179,40)" fg:x="1007457755992" fg:w="669323383"/><text x="97.8130%" y="447.50"></text></g><g><title>fff_mvp::file::footer::parse_footer (397,500,191,226 samples, 38.49%)</title><rect x="59.1339%" y="693" width="38.4942%" height="15" fill="rgb(242,44,2)" fg:x="610629973449" fg:w="397500191226"/><text x="59.3839%" y="703.50">fff_mvp::file::footer::parse_footer</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="885" width="84.1061%" height="15" fill="rgb(216,177,13)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="895.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="869" width="84.1061%" height="15" fill="rgb(216,106,43)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="879.50">tokio::runtime::runtime::Runtime::block_on_inner</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="853" width="84.1061%" height="15" fill="rgb(216,183,2)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="863.50">tokio::runtime::scheduler::multi_thread::MultiThread::block_on</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="837" width="84.1061%" height="15" fill="rgb(249,75,3)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="847.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="821" width="84.1061%" height="15" fill="rgb(219,67,39)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="831.50">tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}}</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="805" width="84.1061%" height="15" fill="rgb(253,228,2)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="815.50">tokio::runtime::context::blocking::BlockingRegionGuard::block_on</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="789" width="84.1061%" height="15" fill="rgb(235,138,27)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="799.50">tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>tokio::runtime::coop::budget (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="773" width="84.1061%" height="15" fill="rgb(236,97,51)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="783.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="757" width="84.1061%" height="15" fill="rgb(240,80,30)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="767.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="741" width="84.1061%" height="15" fill="rgb(230,178,19)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="751.50">tokio::runtime::park::CachedParkThread::block_on::{{closure}}</text></g><g><title>metadata_profile::main::{{closure}} (868,498,437,108 samples, 84.11%)</title><rect x="13.5244%" y="725" width="84.1061%" height="15" fill="rgb(210,190,27)" fg:x="139656413226" fg:w="868498437108"/><text x="13.7744%" y="735.50">metadata_profile::main::{{closure}}</text></g><g><title>fff_mvp::reader::FileReaderV2Builder&lt;R&gt;::build (602,780,493,258 samples, 58.37%)</title><rect x="39.2568%" y="709" width="58.3738%" height="15" fill="rgb(222,107,31)" fg:x="405374357076" fg:w="602780493258"/><text x="39.5068%" y="719.50">fff_mvp::reader::FileReaderV2Builder&lt;R&gt;::build</text></g><g><title>unlink_chunk (1,082,535,287 samples, 0.10%)</title><rect x="97.6305%" y="885" width="0.1048%" height="15" fill="rgb(216,127,34)" fg:x="1008154850334" fg:w="1082535287"/><text x="97.8805%" y="895.50"></text></g><g><title>[unknown] (950,374,376,278 samples, 92.04%)</title><rect x="5.7006%" y="901" width="92.0350%" height="15" fill="rgb(234,116,52)" fg:x="58866092556" fg:w="950374376278"/><text x="5.9506%" y="911.50">[unknown]</text></g><g><title>malloc_consolidate (880,108,897 samples, 0.09%)</title><rect x="97.7706%" y="229" width="0.0852%" height="15" fill="rgb(222,124,15)" fg:x="1009601187605" fg:w="880108897"/><text x="98.0206%" y="239.50"></text></g><g><title>_int_free (1,203,502,573 samples, 0.12%)</title><rect x="97.7402%" y="245" width="0.1165%" height="15" fill="rgb(231,179,28)" fg:x="1009287014795" fg:w="1203502573"/><text x="97.9902%" y="255.50"></text></g><g><title>__GI___libc_free (1,209,666,574 samples, 0.12%)</title><rect x="97.7399%" y="261" width="0.1171%" height="15" fill="rgb(226,93,45)" fg:x="1009283933443" fg:w="1209666574"/><text x="97.9899%" y="271.50"></text></g><g><title>_int_free (132,396,816 samples, 0.01%)</title><rect x="97.8686%" y="101" width="0.0128%" height="15" fill="rgb(215,8,51)" fg:x="1010613481227" fg:w="132396816"/><text x="98.1186%" y="111.50"></text></g><g><title>__GI___libc_free (138,562,354 samples, 0.01%)</title><rect x="97.8683%" y="117" width="0.0134%" height="15" fill="rgb(223,106,5)" fg:x="1010610398843" fg:w="138562354"/><text x="98.1183%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="229" width="0.0155%" height="15" fill="rgb(250,191,5)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="213" width="0.0155%" height="15" fill="rgb(242,132,44)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="197" width="0.0155%" height="15" fill="rgb(251,152,29)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="181" width="0.0155%" height="15" fill="rgb(218,179,5)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="165" width="0.0155%" height="15" fill="rgb(227,67,19)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="149" width="0.0155%" height="15" fill="rgb(233,119,31)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (160,057,309 samples, 0.02%)</title><rect x="97.8680%" y="133" width="0.0155%" height="15" fill="rgb(241,120,22)" fg:x="1010607368330" fg:w="160057309"/><text x="98.1180%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (264,558,191 samples, 0.03%)</title><rect x="97.8603%" y="261" width="0.0256%" height="15" fill="rgb(224,102,30)" fg:x="1010527509799" fg:w="264558191"/><text x="98.1103%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::field::Field&gt; (184,699,660 samples, 0.02%)</title><rect x="97.8680%" y="245" width="0.0179%" height="15" fill="rgb(210,164,37)" fg:x="1010607368330" fg:w="184699660"/><text x="98.1180%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;fff_mvp::reader::FileReaderV2&lt;alloc::sync::Arc&lt;std::fs::File&gt;&gt;&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="453" width="0.1556%" height="15" fill="rgb(226,191,16)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_schema::schema::Schema&gt;&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="437" width="0.1556%" height="15" fill="rgb(214,40,45)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="421" width="0.1556%" height="15" fill="rgb(244,29,26)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="405" width="0.1556%" height="15" fill="rgb(216,16,5)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::schema::Schema&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="389" width="0.1556%" height="15" fill="rgb(249,76,35)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::fields::Fields&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="373" width="0.1556%" height="15" fill="rgb(207,11,44)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[alloc::sync::Arc&lt;arrow_schema::field::Field&gt;]&gt;&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="357" width="0.1556%" height="15" fill="rgb(228,190,49)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="341" width="0.1556%" height="15" fill="rgb(214,173,12)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="325" width="0.1556%" height="15" fill="rgb(218,26,35)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;arrow_schema::field::Field&gt;]&gt; (1,606,696,585 samples, 0.16%)</title><rect x="97.7390%" y="309" width="0.1556%" height="15" fill="rgb(220,200,19)" fg:x="1009274690429" fg:w="1606696585"/><text x="97.9890%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;arrow_schema::field::Field&gt;&gt; (1,600,530,713 samples, 0.15%)</title><rect x="97.7396%" y="293" width="0.1550%" height="15" fill="rgb(239,95,49)" fg:x="1009280856301" fg:w="1600530713"/><text x="97.9896%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,600,530,713 samples, 0.15%)</title><rect x="97.7396%" y="277" width="0.1550%" height="15" fill="rgb(235,85,53)" fg:x="1009280856301" fg:w="1600530713"/><text x="97.9896%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;std::fs::File&gt; as fff_mvp::io::reader::Reader&gt;::read_exact_at (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="437" width="0.0112%" height="15" fill="rgb(233,133,31)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="447.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="421" width="0.0112%" height="15" fill="rgb(218,25,20)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="431.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="405" width="0.0112%" height="15" fill="rgb(252,210,38)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="415.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_at (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="389" width="0.0112%" height="15" fill="rgb(242,134,21)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="399.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_at (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="373" width="0.0112%" height="15" fill="rgb(213,28,48)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="383.50"></text></g><g><title>__libc_pread64 (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="357" width="0.0112%" height="15" fill="rgb(250,196,2)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="367.50"></text></g><g><title>__libc_pread64 (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="341" width="0.0112%" height="15" fill="rgb(227,5,17)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="325" width="0.0112%" height="15" fill="rgb(221,226,24)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="335.50"></text></g><g><title>do_syscall_64 (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="309" width="0.0112%" height="15" fill="rgb(211,5,48)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="319.50"></text></g><g><title>__x64_sys_pread64 (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="293" width="0.0112%" height="15" fill="rgb(219,150,6)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="303.50"></text></g><g><title>vfs_read (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="277" width="0.0112%" height="15" fill="rgb(251,46,16)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="287.50"></text></g><g><title>filemap_read (115,934,763 samples, 0.01%)</title><rect x="97.8946%" y="261" width="0.0112%" height="15" fill="rgb(220,204,40)" fg:x="1010881387014" fg:w="115934763"/><text x="98.1446%" y="271.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (155,364,598 samples, 0.02%)</title><rect x="97.9268%" y="213" width="0.0150%" height="15" fill="rgb(211,85,2)" fg:x="1011213901842" fg:w="155364598"/><text x="98.1768%" y="223.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (264,269,823 samples, 0.03%)</title><rect x="97.9177%" y="229" width="0.0256%" height="15" fill="rgb(229,17,7)" fg:x="1011120270156" fg:w="264269823"/><text x="98.1677%" y="239.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::LogicalTree as flatbuffers::verifier::Verifiable&gt;::run_verifier (426,768,942 samples, 0.04%)</title><rect x="97.9115%" y="245" width="0.0413%" height="15" fill="rgb(239,72,28)" fg:x="1011056086510" fg:w="426768942"/><text x="98.1615%" y="255.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (464,787,386 samples, 0.05%)</title><rect x="97.9115%" y="261" width="0.0450%" height="15" fill="rgb(230,47,54)" fg:x="1011056086510" fg:w="464787386"/><text x="98.1615%" y="271.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::LogicalTree as flatbuffers::verifier::Verifiable&gt;::run_verifier (470,892,447 samples, 0.05%)</title><rect x="97.9115%" y="325" width="0.0456%" height="15" fill="rgb(214,50,8)" fg:x="1011056086510" fg:w="470892447"/><text x="98.1615%" y="335.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (470,892,447 samples, 0.05%)</title><rect x="97.9115%" y="309" width="0.0456%" height="15" fill="rgb(216,198,43)" fg:x="1011056086510" fg:w="470892447"/><text x="98.1615%" y="319.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (470,892,447 samples, 0.05%)</title><rect x="97.9115%" y="293" width="0.0456%" height="15" fill="rgb(234,20,35)" fg:x="1011056086510" fg:w="470892447"/><text x="98.1615%" y="303.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (470,892,447 samples, 0.05%)</title><rect x="97.9115%" y="277" width="0.0456%" height="15" fill="rgb(254,45,19)" fg:x="1011056086510" fg:w="470892447"/><text x="98.1615%" y="287.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (262,206,985 samples, 0.03%)</title><rect x="97.9685%" y="149" width="0.0254%" height="15" fill="rgb(219,14,44)" fg:x="1011644415695" fg:w="262206985"/><text x="98.2185%" y="159.50"></text></g><g><title>flatbuffers::verifier::trace_field (135,334,340 samples, 0.01%)</title><rect x="97.9808%" y="133" width="0.0131%" height="15" fill="rgb(217,220,26)" fg:x="1011771288340" fg:w="135334340"/><text x="98.2308%" y="143.50"></text></g><g><title>flatbuffers::verifier::append_trace (113,776,723 samples, 0.01%)</title><rect x="97.9828%" y="117" width="0.0110%" height="15" fill="rgb(213,158,28)" fg:x="1011792845957" fg:w="113776723"/><text x="98.2328%" y="127.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::MetadataSection as flatbuffers::verifier::Verifiable&gt;::run_verifier (476,062,598 samples, 0.05%)</title><rect x="97.9592%" y="165" width="0.0461%" height="15" fill="rgb(252,51,52)" fg:x="1011548450442" fg:w="476062598"/><text x="98.2092%" y="175.50"></text></g><g><title>flatbuffers::verifier::Verifier::visit_table (117,890,360 samples, 0.01%)</title><rect x="97.9939%" y="149" width="0.0114%" height="15" fill="rgb(246,89,16)" fg:x="1011906622680" fg:w="117890360"/><text x="98.2439%" y="159.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (503,782,138 samples, 0.05%)</title><rect x="97.9589%" y="181" width="0.0488%" height="15" fill="rgb(216,158,49)" fg:x="1011545366787" fg:w="503782138"/><text x="98.2089%" y="191.50"></text></g><g><title>fff_format::File::fff::flatbuf::root_as_footer (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="437" width="0.0988%" height="15" fill="rgb(236,107,19)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="447.50"></text></g><g><title>flatbuffers::get_root::root (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="421" width="0.0988%" height="15" fill="rgb(228,185,30)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="431.50"></text></g><g><title>flatbuffers::get_root::root_with_opts (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="405" width="0.0988%" height="15" fill="rgb(246,134,8)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="415.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="389" width="0.0988%" height="15" fill="rgb(214,143,50)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="399.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::Footer as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="373" width="0.0988%" height="15" fill="rgb(228,75,8)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="383.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="357" width="0.0988%" height="15" fill="rgb(207,175,4)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="367.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,020,722,999 samples, 0.10%)</title><rect x="97.9115%" y="341" width="0.0988%" height="15" fill="rgb(205,108,24)" fg:x="1011056086510" fg:w="1020722999"/><text x="98.1615%" y="351.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::RowGroups as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="325" width="0.0532%" height="15" fill="rgb(244,120,49)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="335.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="309" width="0.0532%" height="15" fill="rgb(223,47,38)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="319.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="293" width="0.0532%" height="15" fill="rgb(229,179,11)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="303.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="277" width="0.0532%" height="15" fill="rgb(231,122,1)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="287.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="261" width="0.0532%" height="15" fill="rgb(245,119,9)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="271.50"></text></g><g><title>&lt;fff_format::File::fff::flatbuf::RowGroupMetadata as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="245" width="0.0532%" height="15" fill="rgb(241,163,25)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="255.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="229" width="0.0532%" height="15" fill="rgb(217,214,3)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="239.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="213" width="0.0532%" height="15" fill="rgb(240,86,28)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="223.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (549,830,552 samples, 0.05%)</title><rect x="97.9571%" y="197" width="0.0532%" height="15" fill="rgb(215,47,9)" fg:x="1011526978957" fg:w="549830552"/><text x="98.2071%" y="207.50"></text></g><g><title>arrow_ipc::convert::get_data_type (135,209,880 samples, 0.01%)</title><rect x="98.0148%" y="373" width="0.0131%" height="15" fill="rgb(252,25,45)" fg:x="1012122912581" fg:w="135209880"/><text x="98.2648%" y="383.50"></text></g><g><title>__GI___libc_malloc (169,114,775 samples, 0.02%)</title><rect x="98.0392%" y="117" width="0.0164%" height="15" fill="rgb(251,164,9)" fg:x="1012374973732" fg:w="169114775"/><text x="98.2892%" y="127.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="357" width="0.0173%" height="15" fill="rgb(233,194,0)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="341" width="0.0173%" height="15" fill="rgb(249,111,24)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="351.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="325" width="0.0173%" height="15" fill="rgb(250,223,3)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="309" width="0.0173%" height="15" fill="rgb(236,178,37)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="293" width="0.0173%" height="15" fill="rgb(241,158,50)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="277" width="0.0173%" height="15" fill="rgb(213,121,41)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="261" width="0.0173%" height="15" fill="rgb(240,92,3)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="245" width="0.0173%" height="15" fill="rgb(205,123,3)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="229" width="0.0173%" height="15" fill="rgb(205,97,47)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="213" width="0.0173%" height="15" fill="rgb(247,152,14)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="197" width="0.0173%" height="15" fill="rgb(248,195,53)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (178,354,371 samples, 0.02%)</title><rect x="98.0389%" y="181" width="0.0173%" height="15" fill="rgb(226,201,16)" fg:x="1012371896909" fg:w="178354371"/><text x="98.2889%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (175,277,548 samples, 0.02%)</title><rect x="98.0392%" y="165" width="0.0170%" height="15" fill="rgb(205,98,0)" fg:x="1012374973732" fg:w="175277548"/><text x="98.2892%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (175,277,548 samples, 0.02%)</title><rect x="98.0392%" y="149" width="0.0170%" height="15" fill="rgb(214,191,48)" fg:x="1012374973732" fg:w="175277548"/><text x="98.2892%" y="159.50"></text></g><g><title>alloc::alloc::alloc (175,277,548 samples, 0.02%)</title><rect x="98.0392%" y="133" width="0.0170%" height="15" fill="rgb(237,112,39)" fg:x="1012374973732" fg:w="175277548"/><text x="98.2892%" y="143.50"></text></g><g><title>arrow_schema::field::Field::new (193,747,412 samples, 0.02%)</title><rect x="98.0380%" y="373" width="0.0188%" height="15" fill="rgb(247,203,27)" fg:x="1012362668314" fg:w="193747412"/><text x="98.2880%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (519,731,222 samples, 0.05%)</title><rect x="98.0103%" y="405" width="0.0503%" height="15" fill="rgb(235,124,28)" fg:x="1012076809509" fg:w="519731222"/><text x="98.2603%" y="415.50"></text></g><g><title>arrow_ipc::convert::&lt;impl core::convert::From&lt;arrow_ipc::gen::Schema::Field&gt; for arrow_schema::field::Field&gt;::from (519,731,222 samples, 0.05%)</title><rect x="98.0103%" y="389" width="0.0503%" height="15" fill="rgb(208,207,46)" fg:x="1012076809509" fg:w="519731222"/><text x="98.2603%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (166,369,290 samples, 0.02%)</title><rect x="98.0607%" y="405" width="0.0161%" height="15" fill="rgb(234,176,4)" fg:x="1012596540731" fg:w="166369290"/><text x="98.3107%" y="415.50"></text></g><g><title>_int_malloc (147,598,766 samples, 0.01%)</title><rect x="98.0943%" y="37" width="0.0143%" height="15" fill="rgb(230,133,28)" fg:x="1012944222918" fg:w="147598766"/><text x="98.3443%" y="47.50"></text></g><g><title>__GI___libc_malloc (267,423,968 samples, 0.03%)</title><rect x="98.0836%" y="53" width="0.0259%" height="15" fill="rgb(211,137,40)" fg:x="1012833574854" fg:w="267423968"/><text x="98.3336%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (334,915,641 samples, 0.03%)</title><rect x="98.0798%" y="229" width="0.0324%" height="15" fill="rgb(254,35,13)" fg:x="1012793680042" fg:w="334915641"/><text x="98.3298%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (334,915,641 samples, 0.03%)</title><rect x="98.0798%" y="213" width="0.0324%" height="15" fill="rgb(225,49,51)" fg:x="1012793680042" fg:w="334915641"/><text x="98.3298%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (328,752,505 samples, 0.03%)</title><rect x="98.0804%" y="197" width="0.0318%" height="15" fill="rgb(251,10,15)" fg:x="1012799843178" fg:w="328752505"/><text x="98.3304%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (313,370,146 samples, 0.03%)</title><rect x="98.0819%" y="181" width="0.0303%" height="15" fill="rgb(228,207,15)" fg:x="1012815225537" fg:w="313370146"/><text x="98.3319%" y="191.50"></text></g><g><title>core::ops::function::FnMut::call_mut (313,370,146 samples, 0.03%)</title><rect x="98.0819%" y="165" width="0.0303%" height="15" fill="rgb(241,99,19)" fg:x="1012815225537" fg:w="313370146"/><text x="98.3319%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (313,370,146 samples, 0.03%)</title><rect x="98.0819%" y="149" width="0.0303%" height="15" fill="rgb(207,104,49)" fg:x="1012815225537" fg:w="313370146"/><text x="98.3319%" y="159.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (313,370,146 samples, 0.03%)</title><rect x="98.0819%" y="133" width="0.0303%" height="15" fill="rgb(234,99,18)" fg:x="1012815225537" fg:w="313370146"/><text x="98.3319%" y="143.50"></text></g><g><title>alloc::alloc::exchange_malloc (295,020,829 samples, 0.03%)</title><rect x="98.0836%" y="117" width="0.0286%" height="15" fill="rgb(213,191,49)" fg:x="1012833574854" fg:w="295020829"/><text x="98.3336%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (295,020,829 samples, 0.03%)</title><rect x="98.0836%" y="101" width="0.0286%" height="15" fill="rgb(210,226,19)" fg:x="1012833574854" fg:w="295020829"/><text x="98.3336%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (295,020,829 samples, 0.03%)</title><rect x="98.0836%" y="85" width="0.0286%" height="15" fill="rgb(229,97,18)" fg:x="1012833574854" fg:w="295020829"/><text x="98.3336%" y="95.50"></text></g><g><title>alloc::alloc::alloc (295,020,829 samples, 0.03%)</title><rect x="98.0836%" y="69" width="0.0286%" height="15" fill="rgb(211,167,15)" fg:x="1012833574854" fg:w="295020829"/><text x="98.3336%" y="79.50"></text></g><g><title>arrow_schema::schema::Schema::new_with_metadata (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="405" width="0.0327%" height="15" fill="rgb(210,169,34)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="389" width="0.0327%" height="15" fill="rgb(241,121,31)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="399.50"></text></g><g><title>&lt;arrow_schema::fields::Fields as core::convert::From&lt;alloc::vec::Vec&lt;arrow_schema::field::Field&gt;&gt;&gt;::from (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="373" width="0.0327%" height="15" fill="rgb(232,40,11)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="357" width="0.0327%" height="15" fill="rgb(205,86,26)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="367.50"></text></g><g><title>&lt;arrow_schema::fields::Fields as core::iter::traits::collect::FromIterator&lt;arrow_schema::field::Field&gt;&gt;::from_iter (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="341" width="0.0327%" height="15" fill="rgb(231,126,28)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="325" width="0.0327%" height="15" fill="rgb(219,221,18)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="335.50"></text></g><g><title>&lt;arrow_schema::fields::Fields as core::iter::traits::collect::FromIterator&lt;alloc::sync::Arc&lt;arrow_schema::field::Field&gt;&gt;&gt;::from_iter (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="309" width="0.0327%" height="15" fill="rgb(211,40,0)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="293" width="0.0327%" height="15" fill="rgb(239,85,43)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="277" width="0.0327%" height="15" fill="rgb(231,55,21)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="287.50"></text></g><g><title>&lt;I as alloc::sync::ToArcSlice&lt;T&gt;&gt;::to_arc_slice (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="261" width="0.0327%" height="15" fill="rgb(225,184,43)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::from_iter_exact (338,004,207 samples, 0.03%)</title><rect x="98.0798%" y="245" width="0.0327%" height="15" fill="rgb(251,158,41)" fg:x="1012793680042" fg:w="338004207"/><text x="98.3298%" y="255.50"></text></g><g><title>arrow_ipc::convert::fb_to_schema (1,076,389,397 samples, 0.10%)</title><rect x="98.0103%" y="421" width="0.1042%" height="15" fill="rgb(234,159,37)" fg:x="1012076809509" fg:w="1076389397"/><text x="98.2603%" y="431.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (277,835,856 samples, 0.03%)</title><rect x="98.1343%" y="165" width="0.0269%" height="15" fill="rgb(216,204,22)" fg:x="1013356508591" fg:w="277835856"/><text x="98.3843%" y="175.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::deref (157,071,205 samples, 0.02%)</title><rect x="98.1612%" y="165" width="0.0152%" height="15" fill="rgb(214,17,3)" fg:x="1013634344447" fg:w="157071205"/><text x="98.4112%" y="175.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (527,313,078 samples, 0.05%)</title><rect x="98.1280%" y="181" width="0.0511%" height="15" fill="rgb(212,111,17)" fg:x="1013291829060" fg:w="527313078"/><text x="98.3780%" y="191.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::FloatingPoint as flatbuffers::verifier::Verifiable&gt;::run_verifier (167,177,176 samples, 0.02%)</title><rect x="98.1836%" y="117" width="0.0162%" height="15" fill="rgb(221,157,24)" fg:x="1013865370357" fg:w="167177176"/><text x="98.4336%" y="127.50"></text></g><g><title>flatbuffers::verifier::Verifier::verify_union_variant (207,395,761 samples, 0.02%)</title><rect x="98.1836%" y="149" width="0.0201%" height="15" fill="rgb(252,16,13)" fg:x="1013865370357" fg:w="207395761"/><text x="98.4336%" y="159.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (207,395,761 samples, 0.02%)</title><rect x="98.1836%" y="133" width="0.0201%" height="15" fill="rgb(221,62,2)" fg:x="1013865370357" fg:w="207395761"/><text x="98.4336%" y="143.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (235,103,487 samples, 0.02%)</title><rect x="98.1824%" y="165" width="0.0228%" height="15" fill="rgb(247,87,22)" fg:x="1013853041495" fg:w="235103487"/><text x="98.4324%" y="175.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_union (445,486,801 samples, 0.04%)</title><rect x="98.1791%" y="181" width="0.0431%" height="15" fill="rgb(215,73,9)" fg:x="1013819142138" fg:w="445486801"/><text x="98.4291%" y="191.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Field as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,160,849,099 samples, 0.11%)</title><rect x="98.1155%" y="197" width="0.1124%" height="15" fill="rgb(207,175,33)" fg:x="1013162449213" fg:w="1160849099"/><text x="98.3655%" y="207.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,185,493,160 samples, 0.11%)</title><rect x="98.1152%" y="213" width="0.1148%" height="15" fill="rgb(243,129,54)" fg:x="1013159366131" fg:w="1185493160"/><text x="98.3652%" y="223.50"></text></g><g><title>__libc_start_main_impl (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="885" width="0.4946%" height="15" fill="rgb(227,119,45)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="895.50"></text></g><g><title>__libc_start_call_main (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="869" width="0.4946%" height="15" fill="rgb(205,109,36)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="879.50"></text></g><g><title>main (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="853" width="0.4946%" height="15" fill="rgb(205,6,39)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="837" width="0.4946%" height="15" fill="rgb(221,32,16)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="847.50"></text></g><g><title>std::panic::catch_unwind (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="821" width="0.4946%" height="15" fill="rgb(228,144,50)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="831.50"></text></g><g><title>std::panicking::try (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="805" width="0.4946%" height="15" fill="rgb(229,201,53)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="815.50"></text></g><g><title>std::panicking::try::do_call (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="789" width="0.4946%" height="15" fill="rgb(249,153,27)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="773" width="0.4946%" height="15" fill="rgb(227,106,25)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="783.50"></text></g><g><title>std::panic::catch_unwind (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="757" width="0.4946%" height="15" fill="rgb(230,65,29)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="767.50"></text></g><g><title>std::panicking::try (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="741" width="0.4946%" height="15" fill="rgb(221,57,46)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="751.50"></text></g><g><title>std::panicking::try::do_call (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="725" width="0.4946%" height="15" fill="rgb(229,161,17)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="709" width="0.4946%" height="15" fill="rgb(222,213,11)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="693" width="0.4946%" height="15" fill="rgb(235,35,13)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="703.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="677" width="0.4946%" height="15" fill="rgb(233,158,34)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="661" width="0.4946%" height="15" fill="rgb(215,151,48)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="671.50"></text></g><g><title>metadata_profile::main (5,107,475,815 samples, 0.49%)</title><rect x="97.7369%" y="645" width="0.4946%" height="15" fill="rgb(229,84,14)" fg:x="1009252797891" fg:w="5107475815"/><text x="97.9869%" y="655.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="629" width="0.4925%" height="15" fill="rgb(229,68,14)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="639.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="613" width="0.4925%" height="15" fill="rgb(243,106,26)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="597" width="0.4925%" height="15" fill="rgb(206,45,38)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="607.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="581" width="0.4925%" height="15" fill="rgb(226,6,15)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="565" width="0.4925%" height="15" fill="rgb(232,22,54)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="575.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="549" width="0.4925%" height="15" fill="rgb(229,222,32)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="559.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="533" width="0.4925%" height="15" fill="rgb(228,62,29)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="543.50"></text></g><g><title>tokio::runtime::coop::budget (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="517" width="0.4925%" height="15" fill="rgb(251,103,34)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="527.50"></text></g><g><title>tokio::runtime::coop::with_budget (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="501" width="0.4925%" height="15" fill="rgb(233,12,30)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="511.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="485" width="0.4925%" height="15" fill="rgb(238,52,0)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="495.50"></text></g><g><title>metadata_profile::main::{{closure}} (5,085,583,277 samples, 0.49%)</title><rect x="97.7390%" y="469" width="0.4925%" height="15" fill="rgb(223,98,5)" fg:x="1009274690429" fg:w="5085583277"/><text x="97.9890%" y="479.50"></text></g><g><title>fff_mvp::reader::FileReaderV2Builder&lt;R&gt;::build (3,478,886,692 samples, 0.34%)</title><rect x="97.8946%" y="453" width="0.3369%" height="15" fill="rgb(228,75,37)" fg:x="1010881387014" fg:w="3478886692"/><text x="98.1446%" y="463.50"></text></g><g><title>fff_mvp::file::footer::parse_footer (2,283,464,197 samples, 0.22%)</title><rect x="98.0103%" y="437" width="0.2211%" height="15" fill="rgb(205,115,49)" fg:x="1012076809509" fg:w="2283464197"/><text x="98.2603%" y="447.50"></text></g><g><title>arrow_ipc::gen::Message::root_as_message (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="421" width="0.1169%" height="15" fill="rgb(250,154,43)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="431.50"></text></g><g><title>flatbuffers::get_root::root (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="405" width="0.1169%" height="15" fill="rgb(226,43,29)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="415.50"></text></g><g><title>flatbuffers::get_root::root_with_opts (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="389" width="0.1169%" height="15" fill="rgb(249,228,39)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="399.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="373" width="0.1169%" height="15" fill="rgb(216,79,43)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="383.50"></text></g><g><title>&lt;arrow_ipc::gen::Message::Message as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="357" width="0.1169%" height="15" fill="rgb(228,95,12)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="367.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_union (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="341" width="0.1169%" height="15" fill="rgb(249,221,15)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="351.50"></text></g><g><title>&lt;arrow_ipc::gen::Message::Message as flatbuffers::verifier::Verifiable&gt;::run_verifier::{{closure}} (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="325" width="0.1169%" height="15" fill="rgb(233,34,13)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="335.50"></text></g><g><title>flatbuffers::verifier::Verifier::verify_union_variant (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="309" width="0.1169%" height="15" fill="rgb(214,103,39)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="319.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="293" width="0.1169%" height="15" fill="rgb(251,126,39)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="303.50"></text></g><g><title>&lt;arrow_ipc::gen::Schema::Schema as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="277" width="0.1169%" height="15" fill="rgb(214,216,36)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="287.50"></text></g><g><title>flatbuffers::verifier::TableVerifier::visit_field (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="261" width="0.1169%" height="15" fill="rgb(220,221,8)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="271.50"></text></g><g><title>&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="245" width="0.1169%" height="15" fill="rgb(240,216,3)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="255.50"></text></g><g><title>&lt;flatbuffers::vector::Vector&lt;flatbuffers::primitives::ForwardsUOffset&lt;T&gt;&gt; as flatbuffers::verifier::Verifiable&gt;::run_verifier (1,207,074,800 samples, 0.12%)</title><rect x="98.1146%" y="229" width="0.1169%" height="15" fill="rgb(232,218,17)" fg:x="1013153198906" fg:w="1207074800"/><text x="98.3646%" y="239.50"></text></g><g><title>_start (5,116,491,636 samples, 0.50%)</title><rect x="97.7369%" y="901" width="0.4955%" height="15" fill="rgb(229,163,45)" fg:x="1009252797891" fg:w="5116491636"/><text x="97.9869%" y="911.50"></text></g><g><title>asm_exc_page_fault (14,332,298,101 samples, 1.39%)</title><rect x="98.2326%" y="901" width="1.3880%" height="15" fill="rgb(231,110,42)" fg:x="1014372373369" fg:w="14332298101"/><text x="98.4826%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (118,478,108 samples, 0.01%)</title><rect x="99.6206%" y="901" width="0.0115%" height="15" fill="rgb(208,170,48)" fg:x="1028704671470" fg:w="118478108"/><text x="99.8706%" y="911.50"></text></g><g><title>copy_process (108,569,074 samples, 0.01%)</title><rect x="99.6323%" y="821" width="0.0105%" height="15" fill="rgb(239,116,25)" fg:x="1028825504224" fg:w="108569074"/><text x="99.8823%" y="831.50"></text></g><g><title>perf_event_init_task (108,569,074 samples, 0.01%)</title><rect x="99.6323%" y="805" width="0.0105%" height="15" fill="rgb(219,200,50)" fg:x="1028825504224" fg:w="108569074"/><text x="99.8823%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115,859,623 samples, 0.01%)</title><rect x="99.6323%" y="885" width="0.0112%" height="15" fill="rgb(245,200,0)" fg:x="1028825504224" fg:w="115859623"/><text x="99.8823%" y="895.50"></text></g><g><title>do_syscall_64 (115,859,623 samples, 0.01%)</title><rect x="99.6323%" y="869" width="0.0112%" height="15" fill="rgb(245,119,33)" fg:x="1028825504224" fg:w="115859623"/><text x="99.8823%" y="879.50"></text></g><g><title>__do_sys_clone3 (115,859,623 samples, 0.01%)</title><rect x="99.6323%" y="853" width="0.0112%" height="15" fill="rgb(231,125,12)" fg:x="1028825504224" fg:w="115859623"/><text x="99.8823%" y="863.50"></text></g><g><title>kernel_clone (115,859,623 samples, 0.01%)</title><rect x="99.6323%" y="837" width="0.0112%" height="15" fill="rgb(216,96,41)" fg:x="1028825504224" fg:w="115859623"/><text x="99.8823%" y="847.50"></text></g><g><title>perf_event_mmap (275,503,083 samples, 0.03%)</title><rect x="99.6452%" y="565" width="0.0267%" height="15" fill="rgb(248,43,45)" fg:x="1028959099057" fg:w="275503083"/><text x="99.8952%" y="575.50"></text></g><g><title>perf_iterate_sb (275,503,083 samples, 0.03%)</title><rect x="99.6452%" y="549" width="0.0267%" height="15" fill="rgb(217,222,7)" fg:x="1028959099057" fg:w="275503083"/><text x="99.8952%" y="559.50"></text></g><g><title>perf_iterate_ctx (275,503,083 samples, 0.03%)</title><rect x="99.6452%" y="533" width="0.0267%" height="15" fill="rgb(233,28,6)" fg:x="1028959099057" fg:w="275503083"/><text x="99.8952%" y="543.50"></text></g><g><title>do_mmap (284,352,296 samples, 0.03%)</title><rect x="99.6445%" y="597" width="0.0275%" height="15" fill="rgb(231,218,15)" fg:x="1028951395298" fg:w="284352296"/><text x="99.8945%" y="607.50"></text></g><g><title>mmap_region (279,980,333 samples, 0.03%)</title><rect x="99.6449%" y="581" width="0.0271%" height="15" fill="rgb(226,171,48)" fg:x="1028955767261" fg:w="279980333"/><text x="99.8949%" y="591.50"></text></g><g><title>__GI___mmap64 (289,316,913 samples, 0.03%)</title><rect x="99.6445%" y="677" width="0.0280%" height="15" fill="rgb(235,201,9)" fg:x="1028951395298" fg:w="289316913"/><text x="99.8945%" y="687.50"></text></g><g><title>__GI___mmap64 (289,316,913 samples, 0.03%)</title><rect x="99.6445%" y="661" width="0.0280%" height="15" fill="rgb(217,80,15)" fg:x="1028951395298" fg:w="289316913"/><text x="99.8945%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (289,316,913 samples, 0.03%)</title><rect x="99.6445%" y="645" width="0.0280%" height="15" fill="rgb(219,152,8)" fg:x="1028951395298" fg:w="289316913"/><text x="99.8945%" y="655.50"></text></g><g><title>do_syscall_64 (289,316,913 samples, 0.03%)</title><rect x="99.6445%" y="629" width="0.0280%" height="15" fill="rgb(243,107,38)" fg:x="1028951395298" fg:w="289316913"/><text x="99.8945%" y="639.50"></text></g><g><title>vm_mmap_pgoff (289,316,913 samples, 0.03%)</title><rect x="99.6445%" y="613" width="0.0280%" height="15" fill="rgb(231,17,5)" fg:x="1028951395298" fg:w="289316913"/><text x="99.8945%" y="623.50"></text></g><g><title>__GI___libc_malloc (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="789" width="0.0285%" height="15" fill="rgb(209,25,54)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="799.50"></text></g><g><title>tcache_init (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="773" width="0.0285%" height="15" fill="rgb(219,0,2)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="783.50"></text></g><g><title>tcache_init (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="757" width="0.0285%" height="15" fill="rgb(246,9,5)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="767.50"></text></g><g><title>arena_get2 (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="741" width="0.0285%" height="15" fill="rgb(226,159,4)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="751.50"></text></g><g><title>arena_get2 (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="725" width="0.0285%" height="15" fill="rgb(219,175,34)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="735.50"></text></g><g><title>_int_new_arena (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="709" width="0.0285%" height="15" fill="rgb(236,10,46)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="719.50"></text></g><g><title>alloc_new_heap (293,911,664 samples, 0.03%)</title><rect x="99.6445%" y="693" width="0.0285%" height="15" fill="rgb(240,211,16)" fg:x="1028951395298" fg:w="293911664"/><text x="99.8945%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::current_guard (295,658,371 samples, 0.03%)</title><rect x="99.6444%" y="821" width="0.0286%" height="15" fill="rgb(205,3,43)" fg:x="1028950526657" fg:w="295658371"/><text x="99.8944%" y="831.50"></text></g><g><title>__pthread_getattr_np (294,789,730 samples, 0.03%)</title><rect x="99.6445%" y="805" width="0.0285%" height="15" fill="rgb(245,7,22)" fg:x="1028951395298" fg:w="294789730"/><text x="99.8945%" y="815.50"></text></g><g><title>clone3 (426,373,892 samples, 0.04%)</title><rect x="99.6321%" y="901" width="0.0413%" height="15" fill="rgb(239,132,32)" fg:x="1028823149578" fg:w="426373892"/><text x="99.8821%" y="911.50"></text></g><g><title>start_thread (308,159,623 samples, 0.03%)</title><rect x="99.6435%" y="885" width="0.0298%" height="15" fill="rgb(228,202,34)" fg:x="1028941363847" fg:w="308159623"/><text x="99.8935%" y="895.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (298,996,813 samples, 0.03%)</title><rect x="99.6444%" y="869" width="0.0290%" height="15" fill="rgb(254,200,22)" fg:x="1028950526657" fg:w="298996813"/><text x="99.8944%" y="879.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (298,996,813 samples, 0.03%)</title><rect x="99.6444%" y="853" width="0.0290%" height="15" fill="rgb(219,10,39)" fg:x="1028950526657" fg:w="298996813"/><text x="99.8944%" y="863.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (298,996,813 samples, 0.03%)</title><rect x="99.6444%" y="837" width="0.0290%" height="15" fill="rgb(226,210,39)" fg:x="1028950526657" fg:w="298996813"/><text x="99.8944%" y="847.50"></text></g><g><title>flatbuffers::vector::&lt;impl flatbuffers::follow::Follow for &amp;str&gt;::follow (813,959,964 samples, 0.08%)</title><rect x="99.6737%" y="901" width="0.0788%" height="15" fill="rgb(208,219,16)" fg:x="1029252608165" fg:w="813959964"/><text x="99.9237%" y="911.50"></text></g><g><title>flatbuffers::vtable::VTable::get (1,520,164,734 samples, 0.15%)</title><rect x="99.7525%" y="901" width="0.1472%" height="15" fill="rgb(216,158,51)" fg:x="1030066568129" fg:w="1520164734"/><text x="100.0025%" y="911.50"></text></g><g><title>metadata_profil (1,031,601,531,543 samples, 99.90%)</title><rect x="0.0000%" y="917" width="99.9011%" height="15" fill="rgb(233,14,44)" fg:x="0" fg:w="1031601531543"/><text x="0.2500%" y="927.50">metadata_profil</text></g><g><title>_raw_spin_lock_irq (845,953,021 samples, 0.08%)</title><rect x="99.9026%" y="805" width="0.0819%" height="15" fill="rgb(237,97,39)" fg:x="1031617158249" fg:w="845953021"/><text x="100.1526%" y="815.50"></text></g><g><title>native_queued_spin_lock_slowpath (845,592,407 samples, 0.08%)</title><rect x="99.9027%" y="789" width="0.0819%" height="15" fill="rgb(218,198,43)" fg:x="1031617518863" fg:w="845592407"/><text x="100.1527%" y="799.50"></text></g><g><title>all (1,032,622,426,861 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(231,104,20)" fg:x="0" fg:w="1032622426861"/><text x="0.2500%" y="943.50"></text></g><g><title>tokio-runtime-w (1,020,581,793 samples, 0.10%)</title><rect x="99.9012%" y="917" width="0.0988%" height="15" fill="rgb(254,36,13)" fg:x="1031601845068" fg:w="1020581793"/><text x="100.1512%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,014,389,702 samples, 0.10%)</title><rect x="99.9018%" y="901" width="0.0982%" height="15" fill="rgb(248,14,50)" fg:x="1031608037159" fg:w="1014389702"/><text x="100.1518%" y="911.50"></text></g><g><title>do_syscall_64 (1,014,389,702 samples, 0.10%)</title><rect x="99.9018%" y="885" width="0.0982%" height="15" fill="rgb(217,107,29)" fg:x="1031608037159" fg:w="1014389702"/><text x="100.1518%" y="895.50"></text></g><g><title>syscall_exit_to_user_mode (1,005,268,612 samples, 0.10%)</title><rect x="99.9026%" y="869" width="0.0974%" height="15" fill="rgb(251,169,33)" fg:x="1031617158249" fg:w="1005268612"/><text x="100.1526%" y="879.50"></text></g><g><title>exit_to_user_mode_prepare (1,005,268,612 samples, 0.10%)</title><rect x="99.9026%" y="853" width="0.0974%" height="15" fill="rgb(217,108,32)" fg:x="1031617158249" fg:w="1005268612"/><text x="100.1526%" y="863.50"></text></g><g><title>arch_do_signal_or_restart (1,005,268,612 samples, 0.10%)</title><rect x="99.9026%" y="837" width="0.0974%" height="15" fill="rgb(219,66,42)" fg:x="1031617158249" fg:w="1005268612"/><text x="100.1526%" y="847.50"></text></g><g><title>get_signal (1,005,268,612 samples, 0.10%)</title><rect x="99.9026%" y="821" width="0.0974%" height="15" fill="rgb(206,180,7)" fg:x="1031617158249" fg:w="1005268612"/><text x="100.1526%" y="831.50"></text></g><g><title>do_group_exit (159,315,591 samples, 0.02%)</title><rect x="99.9846%" y="805" width="0.0154%" height="15" fill="rgb(208,226,31)" fg:x="1032463111270" fg:w="159315591"/><text x="100.2346%" y="815.50"></text></g><g><title>do_exit (159,315,591 samples, 0.02%)</title><rect x="99.9846%" y="789" width="0.0154%" height="15" fill="rgb(218,26,49)" fg:x="1032463111270" fg:w="159315591"/><text x="100.2346%" y="799.50"></text></g></svg></svg>